
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT TO ABS TYPE THEN CHARS DO ASC END PRINT NUM TRUE IN CHAR BOOL FALSE LOC OD REF READ ELSE UPPER DCL NULL SYN RETURN BY DOWN WHILE RETURNS IF PROC ELSIF EXIT LENGTH ARRAY FOR FI INT RESULT LOWERprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS\n                            | NOTreferenced_location : ARROW array_locationoperator1 : relational_operator\n                     | membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT label_idlabel_id : IDreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'BOOL':([47,48,51,71,147,205,207,210,244,281,287,289,290,332,],[-23,-21,139,139,139,139,-22,139,139,139,139,139,139,139,]),'MODULO':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,103,104,105,161,167,174,187,192,218,223,226,227,236,240,241,255,274,294,295,317,],[-69,-70,55,-72,-67,-71,-66,-168,-23,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,55,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,-23,-171,-99,-109,-181,-79,-74,-170,-86,-98,55,-180,-66,-135,-82,-76,-136,]),'LPAREN':([15,19,21,22,24,28,29,30,32,34,35,38,41,47,52,55,56,57,58,59,62,63,64,73,74,77,90,92,93,101,107,109,118,132,133,137,139,140,141,142,144,146,149,150,154,161,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,194,210,211,212,214,216,217,220,224,225,233,238,245,252,255,273,275,278,284,285,289,291,292,293,300,306,309,311,323,],[-172,74,77,-179,109,-176,-174,-177,-175,77,-173,77,-178,-23,-104,-106,-155,77,-116,-105,77,-115,-114,77,77,77,77,109,-108,77,-107,77,77,-47,-45,211,-48,-49,-44,77,214,-43,-46,-42,-154,109,77,77,-117,-120,-121,-124,-122,-118,-111,-119,77,-110,-123,-125,-112,-113,77,242,77,77,77,77,77,77,77,77,77,77,77,77,211,-46,77,77,77,211,-46,77,77,-51,-50,77,77,77,211,332,]),'ABS':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[15,-5,-8,15,-6,15,-7,15,-9,15,15,-144,-104,-106,-155,15,-116,-105,15,-115,-114,15,15,15,15,15,15,-108,15,15,-107,15,15,15,-10,15,-154,-15,15,15,15,-117,-120,-121,-124,-122,-118,-111,-119,15,-110,-123,-125,-112,-113,15,-28,15,-24,15,15,15,15,15,15,15,-143,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-30,-29,]),'GREATER':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,177,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'LBRACKET':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,92,94,95,96,97,100,103,104,105,134,136,161,167,187,192,218,223,226,227,241,255,274,294,295,317,],[-69,-70,57,-72,-67,-71,73,-168,-23,-83,-169,-68,-73,-132,57,-139,-128,-72,171,-141,-131,-133,-127,73,-23,-134,-126,-130,-138,-140,-142,-129,-137,209,210,-23,-171,57,-181,-79,-74,-170,-86,-180,73,-135,-82,-76,-136,]),'SYN':([0,3,6,10,20,23,26,46,67,130,158,193,206,222,325,333,342,344,],[2,-5,-8,2,-6,-7,-9,-144,2,-10,-15,-28,-24,-143,2,2,-30,-29,]),'BY':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,274,286,294,295,301,317,318,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-135,309,-82,-76,-87,-136,-88,]),'DOWN':([4,5,11,14,18,27,31,37,47,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,198,218,223,226,227,236,239,240,241,274,286,294,295,301,308,317,318,329,],[-69,-70,-67,-71,-168,-83,-169,-68,-23,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-171,-99,-109,-181,246,-79,-74,-170,-86,-98,-94,-96,-180,-135,310,-82,-76,-87,328,-136,-88,-202,]),'OD':([25,46,112,116,117,195,196,222,243,],[-207,-144,-207,-167,202,-207,-166,-143,283,]),'END':([3,6,20,23,26,46,67,68,130,156,158,193,206,222,325,333,334,337,342,344,],[-5,-8,-6,-7,-9,-144,-207,-4,-10,-3,-15,-28,-24,-143,-207,-207,338,341,-30,-29,]),'EQUAL':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,182,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'PROC':([110,],[194,]),'LESS':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,185,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'FALSE':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[78,78,78,-104,-106,-155,78,-116,-105,78,-115,-114,78,78,78,78,-108,78,-107,78,78,78,-154,78,78,-117,-120,-121,-124,-122,-118,-111,-119,78,-110,-123,-125,-112,-113,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'PLUS':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,103,104,105,108,161,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,64,-72,-67,-71,-66,-168,-23,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,64,-23,-171,-99,-109,-181,-79,-74,-170,-86,-98,64,-96,-180,-66,-135,-82,-76,-136,]),'IN':([4,5,11,14,18,27,31,37,47,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,198,218,223,226,227,236,239,240,241,246,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-23,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,186,-142,-129,-137,-93,-171,-99,-109,-181,244,-79,-74,-170,-86,-98,-94,-96,-180,287,-66,-135,-82,-76,-136,]),'RBRACKET':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,132,133,139,140,141,146,150,151,153,162,163,167,174,187,192,218,223,226,227,234,235,236,239,240,241,249,250,252,253,254,256,261,262,263,264,266,267,274,292,293,294,295,297,301,312,315,317,318,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-47,-45,-48,-49,-44,-43,-42,-80,218,-75,223,-171,-99,-109,-181,-79,-74,-170,-86,-80,274,-98,-94,-96,-180,-59,288,-63,-61,290,-64,-80,-81,294,-54,295,-78,-135,-51,-50,-82,-76,317,-87,-62,-52,-136,-88,]),'INT':([47,48,51,71,147,205,207,210,244,281,287,289,290,332,],[-23,-21,132,132,132,132,-22,132,132,132,132,132,132,132,]),'TO':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,274,286,294,295,301,308,310,317,318,328,329,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-135,306,-82,-76,-87,306,306,-136,-88,306,-202,]),'CHAR':([47,48,51,71,147,205,207,210,244,281,287,289,290,332,],[-23,-21,140,140,140,140,-22,140,140,140,140,140,140,140,]),'NUM':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[29,-5,-8,29,-6,29,-7,29,-9,29,29,-144,-104,-106,-155,29,-116,-105,29,-115,-114,29,29,29,29,29,29,-108,29,29,-107,29,29,29,-10,29,-154,-15,29,29,29,-117,-120,-121,-124,-122,-118,-111,-119,29,-110,-123,-125,-112,-113,29,-28,29,-24,29,29,29,29,29,29,29,-143,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-30,-29,]),'ASSIGN':([4,5,7,8,11,14,17,18,24,27,31,37,47,48,51,52,53,54,55,58,59,60,61,63,64,65,88,92,124,131,132,133,135,137,138,139,140,141,143,145,146,148,149,150,159,161,167,192,198,207,215,218,223,226,241,288,292,293,294,295,313,314,],[-69,-70,56,-72,-67,-71,-66,-168,-23,-83,-169,-68,-23,-21,142,-104,-156,-158,-106,-116,-105,-73,154,-115,-114,-157,-66,-23,205,-57,-47,-45,-40,-38,212,-48,-49,-44,-56,-37,-43,-39,-41,-42,220,-23,-171,-181,245,-22,-55,-79,-74,-170,-180,-58,-51,-50,-82,-76,-60,-65,]),'GTEQUAL':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,179,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'ICONST':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,209,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[105,105,105,-104,-106,-155,105,-116,-105,105,-115,-114,105,105,105,105,-108,105,-107,105,105,105,-154,105,105,-117,-120,-121,-124,-122,-118,-111,-119,105,-110,-123,-125,-112,-113,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'FOR':([25,],[114,]),'FI':([4,5,11,14,18,27,31,37,46,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,112,116,167,170,174,187,192,196,218,222,223,226,227,228,229,232,236,239,240,241,269,270,274,277,294,295,296,298,299,301,316,317,318,],[-69,-70,-67,-71,-168,-83,-169,-68,-144,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-207,-167,-171,230,-99,-109,-181,-166,-79,-143,-74,-170,-86,-161,-207,271,-98,-94,-96,-180,-165,-162,-135,301,-82,-76,-164,-90,318,-87,-163,-136,-88,]),'WHILE':([4,5,11,14,18,25,27,31,37,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,115,132,133,139,140,141,146,150,167,174,187,192,197,199,200,218,223,226,227,236,239,240,241,274,284,292,293,294,295,301,307,311,317,318,326,327,330,335,],[-69,-70,-67,-71,-168,118,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,118,-47,-45,-48,-49,-44,-43,-42,-171,-99,-109,-181,-196,-197,-195,-79,-74,-170,-86,-98,-94,-96,-180,-135,-205,-51,-50,-82,-76,-87,-201,-204,-136,-88,-203,-199,-200,-198,]),'AND':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,175,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'CHARS':([47,48,51,71,147,205,207,281,290,332,],[-23,-21,134,134,134,134,-22,134,134,134,]),'NOTEQ':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,176,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'NULL':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[84,84,84,-104,-106,-155,84,-116,-105,84,-115,-114,84,84,84,84,-108,84,-107,84,84,84,-154,84,84,-117,-120,-121,-124,-122,-118,-111,-119,84,-110,-123,-125,-112,-113,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'READ':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[41,-5,-8,41,-6,41,-7,41,-9,41,41,-144,-104,-106,-155,41,-116,-105,41,-115,-114,41,41,41,41,41,41,-108,41,41,-107,41,41,41,-10,41,-154,-15,41,41,41,-117,-120,-121,-124,-122,-118,-111,-119,41,-110,-123,-125,-112,-113,41,-28,41,-24,41,41,41,41,41,41,41,-143,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-30,-29,]),'REF':([47,48,51,71,147,205,207,281,290,332,],[-23,-21,147,147,147,147,-22,147,147,147,]),'IF':([0,3,6,10,20,21,23,25,26,34,38,46,56,57,62,67,72,73,74,77,90,109,112,118,130,142,154,158,169,171,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[21,-5,-8,21,-6,90,-7,21,-9,90,90,-144,-155,90,90,21,21,90,90,90,90,90,21,90,-10,90,-154,-15,21,90,-28,21,-24,90,90,90,90,90,90,90,-143,90,90,21,21,90,90,90,90,90,90,90,90,90,90,90,21,21,-30,-29,]),'PRINT':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[22,-5,-8,22,-6,22,-7,22,-9,22,22,-144,-104,-106,-155,22,-116,-105,22,-115,-114,22,22,22,22,22,22,-108,22,22,-107,22,22,22,-10,22,-154,-15,22,22,22,-117,-120,-121,-124,-122,-118,-111,-119,22,-110,-123,-125,-112,-113,22,-28,22,-24,22,22,22,22,22,22,22,-143,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-30,-29,]),'ID':([0,2,3,6,10,12,20,21,23,25,26,34,38,40,42,46,47,48,51,52,55,56,57,58,59,62,63,64,67,71,72,73,74,77,90,93,101,106,107,109,112,114,118,128,129,130,142,147,154,157,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,204,205,206,207,210,211,212,214,216,217,220,222,224,225,229,231,233,238,242,244,245,273,275,278,281,287,289,290,291,300,303,306,309,325,332,333,342,344,],[24,47,-5,-8,24,47,-6,92,-7,92,-9,92,92,47,127,-144,-23,-21,47,-104,-106,-155,92,-116,-105,92,-115,-114,24,47,161,92,92,92,92,-108,92,92,-107,92,92,47,92,47,47,-10,92,47,-154,47,-15,92,92,92,-117,-120,-121,-124,-122,-118,-111,-119,92,-110,-123,-125,-112,-113,92,-28,92,47,47,-24,-22,92,92,92,92,92,92,92,-143,92,92,92,92,92,92,47,47,92,92,92,92,47,47,92,47,92,92,47,92,92,24,47,24,-30,-29,]),'DO':([0,3,6,10,20,23,25,26,46,67,72,112,130,158,169,193,195,206,222,229,231,325,333,342,344,],[25,-5,-8,25,-6,-7,25,-9,-144,25,25,25,-10,-15,25,-28,25,-24,-143,25,25,25,25,-30,-29,]),'LTEQUAL':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,178,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'NOT':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[93,93,93,-104,-106,-155,93,-116,-105,93,-115,-114,93,93,93,93,93,93,93,-154,93,93,-117,-120,-121,-124,-122,-118,-111,-119,93,-110,-123,-125,-112,-113,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'LOWER':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[28,-5,-8,28,-6,28,-7,28,-9,28,28,-144,-104,-106,-155,28,-116,-105,28,-115,-114,28,28,28,28,28,28,-108,28,28,-107,28,28,28,-10,28,-154,-15,28,28,28,-117,-120,-121,-124,-122,-118,-111,-119,28,-110,-123,-125,-112,-113,28,-28,28,-24,28,28,28,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'CONCAT':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,103,104,105,108,161,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,58,-72,-67,-71,-66,-168,-23,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,58,-23,-171,-99,-109,-181,-79,-74,-170,-86,-98,58,-96,-180,-66,-135,-82,-76,-136,]),'SCONST':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[103,103,103,-104,-106,-155,103,-116,-105,103,-115,-114,103,103,103,103,-108,103,-107,103,103,103,-154,103,103,-117,-120,-121,-124,-122,-118,-111,-119,103,-110,-123,-125,-112,-113,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'TIMES':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,103,104,105,161,167,174,187,192,218,223,226,227,236,240,241,255,274,294,295,317,],[-69,-70,52,-72,-67,-71,-66,-168,-23,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,52,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,-23,-171,-99,-109,-181,-79,-74,-170,-86,-98,52,-180,-66,-135,-82,-76,-136,]),'LENGTH':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[30,-5,-8,30,-6,30,-7,30,-9,30,30,-144,-104,-106,-155,30,-116,-105,30,-115,-114,30,30,30,30,30,30,-108,30,30,-107,30,30,30,-10,30,-154,-15,30,30,30,-117,-120,-121,-124,-122,-118,-111,-119,30,-110,-123,-125,-112,-113,30,-28,30,-24,30,30,30,30,30,30,30,-143,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-30,-29,]),'$end':([3,6,10,16,20,23,26,36,46,66,67,68,130,156,158,193,206,222,342,344,],[-5,-8,-207,0,-6,-7,-9,-1,-144,-2,-207,-4,-10,-3,-15,-28,-24,-143,-30,-29,]),'ELSIF':([4,5,11,14,18,27,31,37,46,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,112,116,167,170,174,187,192,196,218,222,223,226,227,228,229,236,237,239,240,241,269,274,276,279,294,295,296,301,317,318,320,331,],[-69,-70,-67,-71,-168,-83,-169,-68,-144,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-207,-167,-171,233,-99,-109,-181,-166,-79,-143,-74,-170,-86,-161,-207,-98,278,-94,-96,-180,-165,-135,300,-89,-82,-76,233,-87,-136,-88,-91,-92,]),'RETURNS':([305,],[323,]),'UPPER':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[32,-5,-8,32,-6,32,-7,32,-9,32,32,-144,-104,-106,-155,32,-116,-105,32,-115,-114,32,32,32,32,32,32,-108,32,32,-107,32,32,32,-10,32,-154,-15,32,32,32,-117,-120,-121,-124,-122,-118,-111,-119,32,-110,-123,-125,-112,-113,32,-28,32,-24,32,32,32,32,32,32,32,-143,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-30,-29,]),'COMMA':([4,5,11,14,18,27,31,37,47,48,49,60,69,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,123,131,132,133,135,137,139,140,141,143,145,146,148,149,150,151,159,165,167,174,187,192,213,215,218,221,223,226,227,234,236,239,240,241,248,252,253,256,259,261,264,265,274,280,288,292,293,294,295,301,304,313,314,315,317,318,322,],[-69,-70,-67,-71,-168,-83,-169,-68,-23,128,129,-73,157,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,204,-57,-47,-45,-40,-38,-48,-49,-44,-56,-37,-43,-39,-41,-42,216,-19,225,-171,-99,-109,-181,-14,-55,-79,-18,-74,-170,-86,216,-98,-94,-96,-180,-27,-63,289,-64,-13,216,-54,-20,-135,303,-58,-51,-50,-82,-76,-87,-34,-60,-65,-52,-136,-88,-33,]),'RESULT':([0,3,6,10,20,23,25,26,46,67,72,112,130,158,169,193,195,206,222,229,231,325,333,342,344,],[34,-5,-8,34,-6,-7,34,-9,-144,34,34,34,-10,-15,34,-28,34,-24,-143,34,34,34,34,-30,-29,]),'ASC':([0,3,6,10,20,21,23,25,26,34,38,46,52,55,56,57,58,59,62,63,64,67,72,73,74,77,90,93,101,106,107,109,112,118,130,142,154,158,169,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,195,206,210,211,212,214,216,217,220,222,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,342,344,],[35,-5,-8,35,-6,35,-7,35,-9,35,35,-144,-104,-106,-155,35,-116,-105,35,-115,-114,35,35,35,35,35,35,-108,35,35,-107,35,35,35,-10,35,-154,-15,35,35,35,-117,-120,-121,-124,-122,-118,-111,-119,35,-110,-123,-125,-112,-113,35,-28,35,-24,35,35,35,35,35,35,35,-143,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-30,-29,]),'COLON':([4,5,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,151,152,162,164,167,174,187,192,218,223,226,227,234,236,239,240,241,251,255,257,274,294,295,301,317,318,],[-69,-70,-67,-71,72,-168,110,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-53,217,-77,224,-171,-99,-109,-181,-79,-74,-170,-86,273,-98,-94,-96,-180,-53,-66,291,-135,-82,-76,-87,-136,-88,]),'ELSE':([4,5,11,14,18,27,31,37,46,60,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,112,116,167,170,174,187,192,196,218,222,223,226,227,228,229,236,237,239,240,241,269,274,276,279,294,295,296,301,317,318,320,331,],[-69,-70,-67,-71,-168,-83,-169,-68,-144,-73,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-207,-167,-171,231,-99,-109,-181,-166,-79,-143,-74,-170,-86,-161,-207,-98,275,-94,-96,-180,-165,-135,275,-89,-82,-76,231,-87,-136,-88,-91,-92,]),'RETURN':([0,3,6,10,20,23,25,26,46,67,72,112,130,158,169,193,195,206,222,229,231,325,333,342,344,],[38,-5,-8,38,-6,-7,38,-9,-144,38,38,38,-10,-15,38,-28,38,-24,-143,38,38,38,38,-30,-29,]),'RPAREN':([4,5,11,14,18,27,31,37,47,60,74,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,109,131,132,133,135,137,139,140,141,143,145,146,148,149,150,165,166,167,168,174,187,191,192,215,218,223,226,227,236,239,240,241,258,260,264,268,274,280,282,288,292,293,294,295,301,304,313,314,315,317,318,321,322,336,339,],[-69,-70,-67,-71,-168,-83,-169,-68,-23,-73,167,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,192,-57,-47,-45,-40,-38,-48,-49,-44,-56,-37,-43,-39,-41,-42,-182,226,-171,227,-99,-109,241,-181,-55,-79,-74,-170,-86,-98,-94,-96,-180,292,293,-54,-183,-135,-31,305,-58,-51,-50,-82,-76,-87,-34,-60,-65,-52,-136,-88,-32,-33,340,343,]),'THEN':([4,5,11,14,18,27,31,37,60,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,173,174,187,192,218,223,226,227,236,239,240,241,272,274,294,295,301,302,317,318,319,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,169,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,-171,238,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,169,-135,-82,-76,-87,238,-136,-88,238,]),'ARRAY':([47,48,51,71,147,205,207,281,290,332,],[-23,-21,136,136,136,136,-22,136,136,136,]),'TYPE':([0,3,6,10,20,23,26,46,67,130,158,193,206,222,325,333,342,344,],[40,-5,-8,40,-6,-7,-9,-144,40,-10,-15,-28,-24,-143,40,40,-30,-29,]),'LOC':([47,131,132,133,135,137,139,140,141,143,145,146,148,149,150,215,288,292,293,304,313,314,336,],[-23,-57,-47,-45,-40,-38,-48,-49,-44,-56,-37,-43,-39,-41,-42,-55,-58,-51,-50,322,-60,-65,339,]),'EXIT':([0,3,6,10,20,23,25,26,46,67,72,112,130,158,169,193,195,206,222,229,231,325,333,342,344,],[42,-5,-8,42,-6,-7,42,-9,-144,42,42,42,-10,-15,42,-28,42,-24,-143,42,42,42,42,-30,-29,]),'OR':([4,5,11,14,18,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,167,174,187,192,218,223,226,227,236,239,240,241,255,274,294,295,317,],[-69,-70,-67,-71,-168,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,180,-142,-129,-137,-93,-171,-99,-109,-181,-79,-74,-170,-86,-98,-94,-96,-180,-66,-135,-82,-76,-136,]),'ARROW':([4,5,7,8,11,14,17,18,21,24,27,31,34,37,38,52,55,56,57,58,59,60,62,63,64,73,74,76,77,81,88,90,92,93,101,107,109,118,142,154,161,167,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,210,211,212,214,216,217,218,220,223,224,225,226,233,238,241,245,255,273,275,278,289,291,294,295,300,306,309,],[-69,-70,60,-72,-67,-71,-66,-168,106,-23,-83,-169,106,-68,106,-104,-106,-155,106,-116,-105,-73,106,-115,-114,106,106,60,106,-72,-66,106,-23,-108,106,-107,106,106,106,-154,-23,-171,106,106,-117,-120,-121,-124,-122,-118,-111,-119,106,-110,-123,-125,60,-112,-113,106,-181,106,106,106,106,106,106,-79,106,-74,106,106,-170,106,106,-180,106,-66,106,106,106,106,106,-82,-76,106,106,106,]),'DIVIDE':([4,5,7,8,11,14,17,18,24,27,31,37,60,75,76,78,80,81,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,103,104,105,161,167,174,187,192,218,223,226,227,236,240,241,255,274,294,295,317,],[-69,-70,59,-72,-67,-71,-66,-168,-23,-83,-169,-68,-73,-132,-101,-139,-128,-72,-103,-141,-131,-133,-127,-66,59,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,-23,-171,-99,-109,-181,-79,-74,-170,-86,-98,59,-180,-66,-135,-82,-76,-136,]),'DCL':([0,3,6,10,20,23,26,46,67,130,158,193,206,222,325,333,342,344,],[12,-5,-8,12,-6,-7,-9,-144,12,-10,-15,-28,-24,-143,12,12,-30,-29,]),'MINUS':([4,5,7,8,11,14,17,18,21,24,27,31,34,37,38,52,55,56,57,58,59,60,62,63,64,73,74,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,103,104,105,108,109,118,142,154,161,167,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,210,211,212,214,216,217,218,220,223,224,225,226,227,233,236,238,239,240,241,245,255,273,274,275,278,289,291,294,295,300,306,309,317,],[-69,-70,63,-72,-67,-71,-66,-168,107,-23,-83,-169,107,-68,107,-104,-106,-155,107,-116,-105,-73,107,-115,-114,107,107,-132,-101,107,-139,-128,-72,-103,-141,-131,-133,-127,-66,-95,107,-97,-23,-134,-126,-130,-138,-102,-100,-140,-142,-129,-137,63,107,107,107,-154,-23,-171,107,107,-99,-117,-120,-121,-124,-122,-118,-111,-119,107,-110,-123,-125,-109,-112,-113,107,-181,107,107,107,107,107,107,-79,107,-74,107,107,-170,-86,107,-98,107,63,-96,-180,107,-66,107,-135,107,107,107,107,-82,-76,107,107,107,-136,]),'TRUE':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[97,97,97,-104,-106,-155,97,-116,-105,97,-115,-114,97,97,97,97,-108,97,-107,97,97,97,-154,97,97,-117,-120,-121,-124,-122,-118,-111,-119,97,-110,-123,-125,-112,-113,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'CCONST':([21,34,38,52,55,56,57,58,59,62,63,64,73,74,77,90,93,101,107,109,118,142,154,171,172,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[100,100,100,-104,-106,-155,100,-116,-105,100,-115,-114,100,100,100,100,-108,100,-107,100,100,100,-154,100,100,-117,-120,-121,-124,-122,-118,-111,-119,100,-110,-123,-125,-112,-113,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'SEMI':([1,4,5,8,9,11,13,14,18,27,31,33,37,38,39,43,44,45,47,49,50,60,69,70,75,76,78,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,102,103,104,105,108,111,113,115,119,120,121,122,123,125,126,127,131,132,133,135,137,139,140,141,143,145,146,148,149,150,155,159,160,167,174,187,192,197,199,200,201,202,203,208,213,215,218,219,221,223,226,227,230,236,239,240,241,247,248,259,265,271,274,283,284,288,292,293,294,295,301,305,307,311,313,314,317,318,324,326,327,330,335,338,340,341,343,],[46,-69,-70,-147,-151,-67,-150,-71,-168,-83,-169,-145,-68,-207,-152,-146,-148,-149,-23,-11,130,-73,-16,158,-132,-101,-139,-128,-72,-103,-85,-141,-131,-133,-127,-66,-95,-97,-23,-134,-126,-130,-138,-102,-100,-140,-84,-142,-129,-137,-93,195,-194,-193,-189,-186,-187,-188,-25,206,-184,-185,-57,-47,-45,-40,-38,-48,-49,-44,-56,-37,-43,-39,-41,-42,-153,-19,222,-171,-99,-109,-181,-196,-197,-195,-192,-191,-206,-12,-14,-55,-79,-17,-18,-74,-170,-86,-160,-98,-94,-96,-180,-26,-27,-13,-20,-159,-135,-190,-205,-58,-51,-50,-82,-76,-87,325,-201,-204,-60,-65,-136,-88,333,-203,-199,-200,-198,342,-36,344,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arithmetic_additive_operator':([7,108,239,],[53,188,188,]),'step_enumeration':([114,],[197,]),'control_part':([25,],[111,]),'result':([38,],[120,]),'if_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'upper_bound':([217,291,],[263,315,]),'element_mode':([290,],[313,]),'action_statement_list':([169,231,],[228,270,]),'string_slice':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'action_statement':([0,10,25,67,112,169,195,229,231,325,333,],[6,6,112,6,112,229,112,112,229,6,6,]),'mode_definition':([40,204,],[123,123,]),'action':([0,10,25,67,72,112,169,195,229,231,325,333,],[1,1,1,1,160,1,1,1,1,1,1,1,]),'expression':([21,34,38,57,62,73,74,77,90,109,118,142,171,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[79,119,121,151,155,162,165,168,173,165,203,213,234,251,251,259,251,261,264,265,267,165,272,279,286,297,298,302,251,264,319,326,329,]),'value_array_slice':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'call_action':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[8,8,81,8,81,81,81,81,8,8,81,81,81,81,81,81,81,8,81,81,8,81,81,81,81,8,81,81,81,81,81,81,81,81,81,8,8,81,81,81,81,81,81,81,81,81,81,81,8,8,]),'while_control':([25,115,],[113,201,]),'right_element':([224,],[266,]),'iteration':([114,],[200,]),'character_mode':([51,71,147,205,210,244,281,287,289,290,332,],[141,141,141,141,141,141,141,141,141,141,141,]),'dereferenced_reference':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'assignment_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'index_mode':([210,289,],[253,253,]),'index_mode_list':([210,289,],[254,312,]),'membership_operator':([102,],[181,]),'for_control':([25,],[115,]),'discrete_mode_name':([51,71,147,205,210,244,281,287,289,290,332,],[144,144,144,144,144,144,144,144,144,144,144,]),'return_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean_literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'identifier_list':([2,12,40,128,129,157,204,242,303,],[51,71,124,207,51,71,124,281,281,]),'program':([0,],[16,]),'then_clause':([79,272,],[170,296,]),'builtin_name':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_element':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'operand3':([21,34,38,57,62,73,74,77,90,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[91,91,91,91,91,91,91,91,91,91,91,91,91,236,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'newmode_statement':([0,10,67,325,333,],[23,23,23,23,23,]),'procedure_call':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'character_string_literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'operand0':([21,34,38,57,62,73,74,77,90,109,118,142,171,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declaration':([12,157,],[69,69,]),'synonym_list':([2,129,],[50,208,]),'string_concatenation_operator':([7,108,239,],[54,189,189,]),'mode':([51,71,147,205,281,290,332,],[138,159,215,248,304,314,336,]),'result_spec':([305,],[324,]),'end_value':([286,308,310,328,],[307,327,330,335,]),'do_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'formal_parameter':([242,303,],[280,280,]),'else_expression':([237,276,],[277,299,]),'literal_range':([210,211,214,289,],[256,258,260,256,]),'monadic_operator':([21,34,38,57,62,73,74,77,90,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'string_mode':([51,71,147,205,281,290,332,],[143,143,143,143,143,143,143,]),'boolean_mode':([51,71,147,205,210,244,281,287,289,290,332,],[146,146,146,146,146,146,146,146,146,146,146,]),'operand1':([21,34,38,57,62,73,74,77,90,109,118,142,171,183,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[108,108,108,108,108,108,108,108,108,108,108,108,108,239,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'string_length':([209,],[250,]),'exit_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'integer_mode':([51,71,147,205,210,244,281,287,289,290,332,],[150,150,150,150,150,150,150,150,150,150,150,]),'character_literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'label_id':([42,],[126,]),'result_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'array_location':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[7,7,76,7,76,76,76,76,7,7,76,76,76,76,76,187,76,7,76,76,7,76,76,76,76,7,76,76,76,76,76,76,76,76,76,7,7,76,76,76,76,76,76,76,76,76,76,76,7,7,]),'declaration_list':([12,157,],[70,219,]),'declaration_statement':([0,10,67,325,333,],[3,3,3,3,3,]),'initialization':([159,],[221,]),'synonym_definition':([2,129,],[49,49,]),'discrete_mode':([51,71,147,205,210,244,281,287,289,290,332,],[137,137,137,137,252,284,137,311,252,137,137,]),'primitive_value':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'start_element':([73,],[163,]),'procedure_definition':([110,],[193,]),'statement':([0,10,67,325,333,],[10,67,67,67,67,]),'action_statement_nullable':([25,112,195,229,],[117,196,243,269,]),'left_element':([73,],[164,]),'conditional_expression':([21,34,38,57,62,73,74,77,90,109,118,142,171,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'statement_nullable':([10,67,325,333,],[66,156,334,337,]),'mode_name':([51,71,147,205,281,290,332,],[145,145,145,145,145,145,145,]),'array_slice':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'empty_literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'reference_mode':([51,71,147,205,281,290,332,],[148,148,148,148,148,148,148,]),'value_array_element':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'identifier':([0,2,10,12,21,25,34,38,40,51,57,62,67,71,72,73,74,77,90,101,106,109,112,114,118,128,129,142,147,157,169,171,172,183,190,195,204,205,210,211,212,214,216,217,220,224,225,229,231,233,238,242,244,245,273,275,278,281,287,289,290,291,300,303,306,309,325,332,333,],[17,48,17,48,88,17,88,88,48,149,88,88,17,149,88,88,88,88,88,88,88,88,17,198,88,48,48,88,149,48,17,88,88,88,88,17,48,149,255,88,88,88,88,88,88,88,88,17,17,88,88,48,285,88,88,88,88,149,285,255,149,88,88,48,88,88,17,149,17,]),'arithmetic_multiplicative_operator':([7,89,240,],[65,172,172,]),'synonym_statement':([0,10,67,325,333,],[20,20,20,20,20,]),'operand2':([21,34,38,57,62,73,74,77,90,109,118,142,171,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,240,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'parenthesized_expression':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'array_mode':([51,71,147,205,281,290,332,],[131,131,131,131,131,131,131,]),'discrete_range_mode':([51,71,147,205,210,244,281,287,289,290,332,],[133,133,133,133,133,133,133,133,133,133,133,]),'elsif_expression':([237,],[276,]),'procedure_statement':([0,10,67,325,333,],[26,26,26,26,26,]),'empty':([10,25,38,67,112,195,229,325,333,],[68,116,122,68,116,116,116,68,68,]),'location':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'range_enumeration':([114,],[199,]),'lower_bound':([57,210,211,214,289,],[152,257,257,257,257,]),'newmode_list':([40,204,],[125,247,]),'then_expression':([173,302,319,],[237,320,331,]),'closed_dyadic_operator':([7,],[61,]),'expression_list':([57,171,216,],[153,235,262,]),'relational_operator':([102,],[184,]),'builtin_call':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'step_value':([286,],[308,]),'composite_mode':([51,71,147,205,281,290,332,],[135,135,135,135,135,135,135,]),'bracketed_action':([0,10,25,67,72,112,169,195,229,231,325,333,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'else_clause':([170,296,],[232,316,]),'integer_literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,209,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,249,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'statement_list':([0,],[36,]),'referenced_location':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'operand4':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[99,99,99,99,99,99,99,99,99,174,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'operator1':([102,],[183,]),'assigning_operator':([7,],[62,]),'parameter_list':([74,109,225,],[166,191,268,]),'literal':([21,34,38,57,62,73,74,77,90,101,109,118,142,171,172,183,190,210,211,212,214,216,217,220,224,225,233,238,245,273,275,278,289,291,300,306,309,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'string_element':([0,10,21,25,34,38,57,62,67,72,73,74,77,90,101,106,109,112,118,142,169,171,172,183,190,195,210,211,212,214,216,217,220,224,225,229,231,233,238,245,273,275,278,289,291,300,306,309,325,333,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'operator2':([108,239,],[190,190,]),'formal_parameter_list':([242,303,],[282,321,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',176),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',180),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',181),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',190),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',201),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',205),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',206),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',220),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',227),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',228),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',233),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',236),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',240),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',255),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',259),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',263),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',267),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',281),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',285),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',289),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',296),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',308),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',312),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',316),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',320),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',321),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',330),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',331),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',335),
  ('location -> identifier','location',1,'p_location','Parser.py',346),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',347),
  ('location -> string_element','location',1,'p_location','Parser.py',348),
  ('location -> string_slice','location',1,'p_location','Parser.py',349),
  ('location -> array_element','location',1,'p_location','Parser.py',350),
  ('location -> array_slice','location',1,'p_location','Parser.py',351),
  ('location -> call_action','location',1,'p_location','Parser.py',352),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',356),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',360),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',364),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',368),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',372),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',376),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',380),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',384),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',385),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',392),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',396),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',407),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',419),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',420),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',424),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',428),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',432),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',433),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',448),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',449),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',456),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',457),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',464),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',465),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',473),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',474),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',505),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',514),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',515),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',524),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',539),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',562),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',566),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',570),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',578),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',587),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',591),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',595),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',606),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',607),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',612),
  ('action -> assignment_action','action',1,'p_action','Parser.py',613),
  ('action -> call_action','action',1,'p_action','Parser.py',614),
  ('action -> exit_action','action',1,'p_action','Parser.py',615),
  ('action -> result_action','action',1,'p_action','Parser.py',616),
  ('action -> return_action','action',1,'p_action','Parser.py',617),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',626),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',630),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',631),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',641),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',646),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',652),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',663),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',675),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',676),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',693),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',694),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',698),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',699),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',715),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',716),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',720),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',721),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',730),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',734),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',738),
  ('result -> expression','result',1,'p_result','Parser.py',742),
  ('result -> empty','result',1,'p_result','Parser.py',743),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',746),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',754),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',755),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',762),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',763),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',764),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',768),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',780),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',792),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',796),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',800),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',801),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',808),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',814),
]

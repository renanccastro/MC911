
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT REF LENGTH THEN CHARS END FI TYPE PROC RESULT DOWN IF PRINT IN NULL RETURNS SYN EXIT OD LOC DCL INT FOR FALSE CHAR TO TRUE WHILE ABS RETURN DO UPPER ELSE READ ARRAY ELSIF ASC LOWER NUM BY BOOLprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n                    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'TRUE':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[75,75,75,-99,-118,-101,-100,75,-151,75,-119,-117,75,75,75,75,-103,-102,75,75,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,75,-108,-107,75,-116,75,-115,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'NOTEQ':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,142,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'OD':([12,62,64,67,116,138,141,202,209,],[-202,133,-202,-163,-140,-162,-202,-139,251,]),'DIVIDE':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,84,87,91,92,93,98,100,101,103,104,105,106,125,156,162,166,195,203,215,217,218,225,237,252,259,266,282,313,],[-68,-165,52,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,52,-138,-92,-129,-72,-127,-95,-23,-104,-94,-167,-177,-74,-81,52,-93,-166,-176,-130,-136,-68,-77,-131,]),'EQUAL':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,146,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'INT':([110,112,115,122,180,196,207,228,235,250,277,296,298,327,],[-23,173,-21,173,173,173,173,173,-22,173,173,173,173,173,]),'TIMES':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,84,87,91,92,93,98,100,101,103,104,105,106,125,156,162,166,195,203,215,217,218,225,237,252,259,266,282,313,],[-68,-165,48,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,48,-138,-92,-129,-72,-127,-95,-23,-104,-94,-167,-177,-74,-81,48,-93,-166,-176,-130,-136,-68,-77,-131,]),'LESS':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,144,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'TO':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,247,252,259,282,283,286,290,309,310,313,314,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,287,-130,-136,-77,287,287,-82,287,-197,-131,-83,]),'COLON':([1,2,10,16,22,34,37,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,130,131,156,162,166,195,203,210,212,215,217,218,225,237,252,259,266,269,272,282,290,313,314,],[44,-165,-69,-70,-164,-78,117,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-55,205,-104,-94,-167,-177,-74,-89,253,-81,-91,-93,-166,-176,-130,-136,-68,297,-55,-77,-82,-131,-83,]),'NULL':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[73,73,73,-99,-118,-101,-100,73,-151,73,-119,-117,73,73,73,73,-103,-102,73,73,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,73,-108,-107,73,-116,73,-115,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'BY':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,247,252,259,282,290,313,314,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,285,-130,-136,-77,-82,-131,-83,]),'LOC':([110,169,170,171,172,173,174,176,178,181,182,183,184,185,188,230,299,300,301,302,318,319,334,],[-23,-51,-41,-42,-43,-49,-39,-44,-59,-50,-47,-45,-46,-40,-58,-57,-60,-53,-52,322,-67,-62,339,]),'CONCAT':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,125,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-68,-165,59,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,59,-90,-138,-92,-129,-72,-127,-95,-23,-104,-94,-167,-177,-74,59,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'ABS':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[6,6,-6,-9,6,6,6,6,-5,-8,-7,6,6,-99,-118,-101,-100,6,-151,6,-119,-117,6,6,6,6,6,6,-103,-102,6,-140,6,-150,6,-110,-106,-113,-120,-109,-111,-112,-105,-114,6,-108,-107,6,-116,6,-115,6,6,6,-10,-28,-24,-15,-139,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-32,-30,-31,-29,]),'ARRAY':([110,112,115,122,180,196,235,277,296,327,],[-23,177,-21,177,177,177,-22,177,177,177,]),'CCONST':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[76,76,76,-99,-118,-101,-100,76,-151,76,-119,-117,76,76,76,76,-103,-102,76,76,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,76,-108,-107,76,-116,76,-115,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'BOOL':([110,112,115,122,180,196,207,228,235,250,277,296,298,327,],[-23,181,-21,181,181,181,181,181,-22,181,181,181,181,181,]),'UPPER':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[9,9,-6,-9,9,9,9,9,-5,-8,-7,9,9,-99,-118,-101,-100,9,-151,9,-119,-117,9,9,9,9,9,9,-103,-102,9,-140,9,-150,9,-110,-106,-113,-120,-109,-111,-112,-105,-114,9,-108,-107,9,-116,9,-115,9,9,9,-10,-28,-24,-15,-139,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-32,-30,-31,-29,]),'LENGTH':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[30,30,-6,-9,30,30,30,30,-5,-8,-7,30,30,-99,-118,-101,-100,30,-151,30,-119,-117,30,30,30,30,30,30,-103,-102,30,-140,30,-150,30,-110,-106,-113,-120,-109,-111,-112,-105,-114,30,-108,-107,30,-116,30,-115,30,30,30,-10,-28,-24,-15,-139,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,-30,-31,-29,]),'SEMI':([2,7,10,13,14,16,20,21,22,28,29,33,34,36,38,42,56,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,90,91,92,93,95,98,99,100,101,103,104,105,106,109,110,111,113,114,120,121,123,124,126,132,133,134,136,137,139,140,156,162,166,169,170,171,172,173,174,176,178,181,182,183,184,185,188,195,199,203,210,215,217,218,220,225,230,233,234,237,238,239,240,242,249,251,252,259,260,265,280,281,282,284,288,290,299,300,301,304,307,308,311,312,313,314,318,319,325,329,333,336,340,341,343,344,],[-165,-142,-69,-145,-202,-70,-147,-146,-164,-141,116,-144,-78,-143,-71,-148,-73,-188,141,-23,-189,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-181,-183,-132,-128,-123,-88,-90,-182,-138,-92,-129,-72,-127,-95,-180,-23,-184,189,-11,-25,198,-16,201,202,-149,-186,-191,-192,-190,-187,-201,-104,-94,-167,-51,-41,-42,-43,-49,-39,-44,-59,-50,-47,-45,-46,-40,-58,-177,-19,-74,-89,-81,-91,-93,-156,-166,-57,-14,-12,-176,-27,-26,-18,-17,-200,-185,-130,-136,-155,-13,305,-20,-77,-196,-199,-82,-60,-53,-52,324,328,-194,-195,-198,-131,-83,-67,-62,332,-193,338,342,-38,345,346,-37,]),'DO':([0,3,4,8,12,24,31,40,44,45,64,116,141,165,189,192,198,201,202,222,224,305,324,328,332,338,342,345,346,],[12,12,-6,-9,12,-5,-8,-7,12,12,12,-140,12,12,-10,-28,-24,-15,-139,12,12,12,12,12,12,-32,-30,-31,-29,]),'LOWER':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[43,43,-6,-9,43,43,43,43,-5,-8,-7,43,43,-99,-118,-101,-100,43,-151,43,-119,-117,43,43,43,43,43,43,-103,-102,43,-140,43,-150,43,-110,-106,-113,-120,-109,-111,-112,-105,-114,43,-108,-107,43,-116,43,-115,43,43,43,-10,-28,-24,-15,-139,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-30,-31,-29,]),'FALSE':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[80,80,80,-99,-118,-101,-100,80,-151,80,-119,-117,80,80,80,80,-103,-102,80,80,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,80,-108,-107,80,-116,80,-115,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'RETURN':([0,3,4,8,12,24,31,40,44,45,64,116,141,165,189,192,198,201,202,222,224,305,324,328,332,338,342,345,346,],[14,14,-6,-9,14,-5,-8,-7,14,14,14,-140,14,14,-10,-28,-24,-15,-139,14,14,14,14,14,14,-32,-30,-31,-29,]),'CHARS':([110,112,115,122,180,196,235,277,296,327,],[-23,179,-21,179,179,179,-22,179,179,179,]),'IF':([0,3,4,8,12,14,17,23,24,31,40,44,45,55,57,58,64,66,85,89,108,116,118,128,141,154,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[17,17,-6,-9,17,85,85,85,-5,-8,-7,17,17,85,-151,85,17,85,85,85,85,-140,85,-150,17,85,17,85,-10,-28,-24,-15,-139,85,85,85,85,85,17,17,85,85,85,85,85,85,85,85,85,85,85,85,85,85,17,17,17,17,-32,-30,-31,-29,]),'PRINT':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[27,27,-6,-9,27,27,27,27,-5,-8,-7,27,27,-99,-118,-101,-100,27,-151,27,-119,-117,27,27,27,27,27,27,-103,-102,27,-140,27,-150,27,-110,-106,-113,-120,-109,-111,-112,-105,-114,27,-108,-107,27,-116,27,-115,27,27,27,-10,-28,-24,-15,-139,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-32,-30,-31,-29,]),'LBRACKET':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,87,91,92,93,100,103,104,105,125,156,166,177,179,195,203,215,225,237,252,259,266,282,313,],[-68,-165,55,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,154,-134,-126,-124,55,-132,-128,-123,-138,-129,-72,-127,-23,55,-167,228,229,-177,-74,-81,-166,-176,-130,-136,-68,-77,-131,]),'EXIT':([0,3,4,8,12,24,31,40,44,45,64,116,141,165,189,192,198,201,202,222,224,305,324,328,332,338,342,345,346,],[19,19,-6,-9,19,-5,-8,-7,19,19,19,-140,19,19,-10,-28,-24,-15,-139,19,19,19,19,19,19,-32,-30,-31,-29,]),'READ':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[15,15,-6,-9,15,15,15,15,-5,-8,-7,15,15,-99,-118,-101,-100,15,-151,15,-119,-117,15,15,15,15,15,15,-103,-102,15,-140,15,-150,15,-110,-106,-113,-120,-109,-111,-112,-105,-114,15,-108,-107,15,-116,15,-115,15,15,15,-10,-28,-24,-15,-139,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-32,-30,-31,-29,]),'ARROW':([1,2,5,10,14,16,17,22,23,34,36,37,38,48,49,50,52,55,56,57,58,59,61,66,69,72,85,87,89,96,97,102,104,108,118,125,128,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,161,163,166,187,195,203,204,205,206,214,221,225,226,227,228,231,232,237,241,253,256,257,266,282,285,287,292,297,298,],[-68,-165,56,-69,86,-70,86,-164,86,-78,-72,-23,-71,-99,-118,-101,-100,86,-73,-151,86,-119,-117,86,-23,-68,86,56,86,86,-103,-102,-72,86,86,-23,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,86,-108,-107,86,56,-116,86,-115,86,-167,86,-177,-74,86,86,86,86,86,-166,86,86,86,86,86,-176,86,86,86,86,-68,-77,86,86,86,86,86,]),'WHILE':([2,10,12,16,22,34,38,56,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,134,136,137,156,162,166,169,173,176,181,182,183,184,195,203,210,215,217,218,225,237,249,252,259,282,284,288,290,300,301,308,311,312,313,314,329,],[-165,-69,66,-70,-164,-78,-71,-73,66,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-191,-192,-190,-104,-94,-167,-51,-49,-44,-50,-47,-45,-46,-177,-74,-89,-81,-91,-93,-166,-176,-200,-130,-136,-77,-196,-199,-82,-53,-52,-194,-195,-198,-131,-83,-193,]),'FI':([2,10,16,22,34,38,56,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,116,138,156,162,164,166,195,202,203,210,215,217,218,219,223,224,225,237,252,254,259,262,263,282,290,291,294,295,313,314,317,],[-165,-69,-70,-164,-78,-71,-73,-202,-163,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-140,-162,-104,-94,220,-167,-177,-139,-74,-89,-81,-91,-93,260,-157,-202,-166,-176,-130,290,-136,-158,-161,-77,-82,314,-85,-160,-131,-83,-159,]),'$end':([3,4,8,11,24,31,35,40,45,46,47,116,127,189,192,198,201,202,338,342,345,346,],[-202,-6,-9,0,-5,-8,-1,-7,-202,-4,-2,-140,-3,-10,-28,-24,-15,-139,-32,-30,-31,-29,]),'CHAR':([110,112,115,122,180,196,207,228,235,250,277,296,298,327,],[-23,169,-21,169,169,169,169,169,-22,169,169,169,169,169,]),'PROC':([117,],[193,]),'RESULT':([0,3,4,8,12,24,31,40,44,45,64,116,141,165,189,192,198,201,202,222,224,305,324,328,332,338,342,345,346,],[23,23,-6,-9,23,-5,-8,-7,23,23,23,-140,23,23,-10,-28,-24,-15,-139,23,23,23,23,23,23,-32,-30,-31,-29,]),'ICONST':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,160,161,163,187,204,205,206,214,221,226,227,228,229,231,232,241,253,256,257,285,287,292,297,298,],[91,91,91,-99,-118,-101,-100,91,-151,91,-119,-117,91,91,91,91,-103,-102,91,91,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,91,-108,-107,91,216,-116,91,-115,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'SCONST':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[100,100,100,-99,-118,-101,-100,100,-151,100,-119,-117,100,100,100,100,-103,-102,100,100,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,100,-108,-107,100,-116,100,-115,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'THEN':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,107,155,156,162,166,195,203,210,215,217,218,225,237,252,259,261,282,290,293,313,314,315,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,165,214,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,165,-77,-82,214,-131,-83,214,]),'HAT':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,96,97,102,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[94,94,94,-99,-118,-101,-100,94,-151,94,-119,-117,94,94,94,94,-103,-102,94,94,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,94,-108,-107,94,-116,94,-115,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'ASSIGN':([1,2,5,10,16,22,34,36,37,38,48,49,50,51,52,53,54,56,59,60,61,69,72,110,112,115,119,125,135,166,169,170,171,172,173,174,175,176,178,181,182,183,184,185,188,195,199,203,225,230,235,237,282,299,300,301,318,319,],[-68,-165,57,-69,-70,-164,-78,-72,-23,-71,-99,-118,-101,128,-100,-153,-154,-73,-119,-152,-117,-23,-68,-23,187,-21,196,-23,206,-167,-51,-41,-42,-43,-49,-39,227,-44,-59,-50,-47,-45,-46,-40,-58,-177,241,-74,-166,-57,-22,-176,-77,-60,-53,-52,-67,-62,]),'MODULO':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,84,87,91,92,93,98,100,101,103,104,105,106,125,156,162,166,195,203,215,217,218,225,237,252,259,266,282,313,],[-68,-165,50,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,50,-138,-92,-129,-72,-127,-95,-23,-104,-94,-167,-177,-74,-81,50,-93,-166,-176,-130,-136,-68,-77,-131,]),'IN':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,110,135,156,162,166,195,203,208,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,145,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-23,207,-104,-94,-167,-177,-74,250,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'SYN':([0,3,4,8,24,31,40,45,116,189,192,198,201,202,305,324,328,332,338,342,345,346,],[25,25,-6,-9,-5,-8,-7,25,-140,-10,-28,-24,-15,-139,25,25,25,25,-32,-30,-31,-29,]),'ASC':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[26,26,-6,-9,26,26,26,26,-5,-8,-7,26,26,-99,-118,-101,-100,26,-151,26,-119,-117,26,26,26,26,26,26,-103,-102,26,-140,26,-150,26,-110,-106,-113,-120,-109,-111,-112,-105,-114,26,-108,-107,26,-116,26,-115,26,26,26,-10,-28,-24,-15,-139,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-32,-30,-31,-29,]),'GTEQUAL':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,148,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'RETURNS':([280,304,],[306,306,]),'OR':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,152,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'GREATER':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,147,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'NOT':([14,17,23,48,49,50,52,55,57,58,59,61,66,85,89,108,118,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[97,97,97,-99,-118,-101,-100,97,-151,97,-119,-117,97,97,97,97,97,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,97,-108,-107,97,-116,97,-115,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'RBRACKET':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,129,130,156,162,166,169,173,176,181,182,183,184,195,203,210,211,212,215,217,218,225,237,243,244,245,246,252,259,267,268,270,271,273,274,282,289,290,300,301,313,314,320,321,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,203,-75,-104,-94,-167,-51,-49,-44,-50,-47,-45,-46,-177,-74,-89,252,-75,-81,-91,-93,-166,-176,-76,-75,282,-56,-130,-136,-65,296,-63,-66,299,-61,-77,313,-82,-53,-52,-131,-83,-54,-64,]),'RPAREN':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,108,110,118,156,157,162,166,167,168,169,170,171,172,173,174,176,178,181,182,183,184,185,188,194,195,203,210,215,216,217,218,225,230,236,237,246,252,259,264,275,276,278,279,282,290,299,300,301,302,313,314,318,319,320,322,323,334,339,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,166,-23,195,-104,215,-94,-167,225,-178,-51,-41,-42,-43,-49,-39,-44,-59,-50,-47,-45,-46,-40,-58,237,-177,-74,-89,-81,259,-91,-93,-166,-57,280,-176,-56,-130,-136,-179,300,301,-33,304,-77,-82,-60,-53,-52,-36,-131,-83,-67,-62,-54,-35,-34,340,344,]),'DOWN':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,110,135,156,162,166,195,203,210,215,217,218,225,237,247,252,259,282,283,290,310,313,314,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-23,208,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,286,-130,-136,-77,309,-82,-197,-131,-83,]),'PLUS':([1,2,5,10,16,22,34,36,37,38,56,69,71,72,73,74,75,76,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,125,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-68,-165,61,-69,-70,-164,-78,-72,-23,-71,-73,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,61,-90,-138,-92,-129,-72,-127,-95,-23,-104,-94,-167,-177,-74,61,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'NUM':([0,3,4,8,12,14,17,23,24,31,40,44,45,48,49,50,52,55,57,58,59,61,64,66,85,86,89,96,97,102,108,116,118,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,187,189,192,198,201,202,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,338,342,345,346,],[32,32,-6,-9,32,32,32,32,-5,-8,-7,32,32,-99,-118,-101,-100,32,-151,32,-119,-117,32,32,32,32,32,32,-103,-102,32,-140,32,-150,32,-110,-106,-113,-120,-109,-111,-112,-105,-114,32,-108,-107,32,-116,32,-115,32,32,32,-10,-28,-24,-15,-139,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-32,-30,-31,-29,]),'LPAREN':([6,9,14,15,17,18,23,26,27,30,32,37,43,48,49,50,52,55,57,58,59,61,66,69,85,89,94,96,97,102,108,110,118,125,128,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,169,172,173,176,181,182,183,184,185,186,187,193,204,205,206,214,221,226,227,228,231,232,241,248,249,253,256,257,266,267,285,287,288,292,297,298,300,301,306,],[-168,-171,89,-174,89,108,89,-169,-175,-173,-170,118,-172,-99,-118,-101,-100,89,-151,89,-119,-117,89,118,89,89,158,89,-103,-102,89,-23,89,118,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,89,-108,-107,89,-116,89,-115,89,-51,-48,-49,-44,-50,-47,-45,-46,231,232,89,236,89,89,89,89,89,89,89,89,89,89,89,-48,231,89,89,89,-48,231,89,89,231,89,89,89,-53,-52,327,]),'MINUS':([1,2,5,10,14,16,17,22,23,34,36,37,38,48,49,50,52,55,56,57,58,59,61,66,69,71,72,73,74,75,76,78,79,80,81,82,84,85,87,89,91,92,93,95,98,100,101,103,104,105,106,108,118,125,128,142,143,144,145,146,147,148,149,150,151,152,153,154,156,159,160,161,162,163,166,187,195,203,204,205,206,210,214,215,217,218,221,225,226,227,228,231,232,237,241,252,253,256,257,259,266,282,285,287,292,297,298,313,],[-68,-165,49,-69,102,-70,102,-164,102,-78,-72,-23,-71,-99,-118,-101,-100,102,-73,-151,102,-119,-117,102,-23,-122,-68,-137,-125,-133,-135,-121,-98,-134,-126,-124,-97,102,-96,102,-132,-128,-123,49,-90,-138,-92,-129,-72,-127,-95,102,102,-23,-150,-110,-106,-113,-120,-109,-111,-112,-105,-114,102,-108,-107,102,-104,-116,102,-115,-94,102,-167,102,-177,-74,102,102,102,49,102,-81,-91,-93,102,-166,102,102,102,102,102,-176,102,-130,102,102,102,-136,-68,-77,102,102,102,102,102,-131,]),'FOR':([12,],[63,]),'COMMA':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,110,114,115,120,123,130,156,162,166,168,169,170,171,172,173,174,176,178,181,182,183,184,185,188,195,199,203,210,212,215,217,218,225,230,233,237,238,240,244,246,252,259,265,267,270,271,278,281,282,290,299,300,301,302,313,314,318,319,320,322,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-23,190,191,197,200,204,-104,-94,-167,226,-51,-41,-42,-43,-49,-39,-44,-59,-50,-47,-45,-46,-40,-58,-177,-19,-74,-89,204,-81,-91,-93,-166,-57,-14,-176,-27,-18,204,-56,-130,-136,-13,-65,298,-66,303,-20,-77,-82,-60,-53,-52,-36,-131,-83,-67,-62,-54,-35,]),'LTEQUAL':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,150,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),'END':([4,8,24,31,40,45,46,116,127,189,192,198,201,202,305,324,326,328,331,332,335,337,338,342,345,346,],[-6,-9,-5,-8,-7,-202,-4,-140,-3,-10,-28,-24,-15,-139,-202,-202,333,-202,336,-202,341,343,-32,-30,-31,-29,]),'ELSIF':([2,10,16,22,34,38,56,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,116,138,156,162,164,166,195,202,203,210,213,215,217,218,223,224,225,237,252,255,258,259,263,282,290,295,313,314,316,330,],[-165,-69,-70,-164,-78,-71,-73,-202,-163,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-140,-162,-104,-94,221,-167,-177,-139,-74,-89,256,-81,-91,-93,-157,-202,-166,-176,-130,292,-84,-136,-161,-77,-82,221,-131,-83,-86,-87,]),'ID':([0,3,4,8,12,14,17,19,23,24,25,31,39,40,41,44,45,48,49,50,52,55,57,58,59,61,63,64,66,85,86,89,96,97,102,108,110,112,115,116,118,122,128,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,163,165,180,187,189,190,191,192,196,197,198,200,201,202,204,205,206,207,214,221,222,224,226,227,228,231,232,235,236,241,250,253,256,257,277,285,287,292,296,297,298,303,305,324,327,328,332,338,342,345,346,],[37,37,-6,-9,69,69,69,110,69,-5,110,-8,110,-7,110,125,37,-99,-118,-101,-100,69,-151,69,-119,-117,110,69,69,69,69,69,69,-103,-102,69,-23,110,-21,-140,69,110,-150,69,-110,-106,-113,-120,-109,-111,-112,-105,-114,69,-108,-107,69,-116,69,-115,69,69,110,69,-10,110,110,-28,110,110,-24,110,-15,-139,69,69,69,110,69,69,69,69,69,69,69,69,69,-22,110,69,110,69,69,69,110,69,69,69,110,69,69,110,37,37,110,37,37,-32,-30,-31,-29,]),'TYPE':([0,3,4,8,24,31,40,45,116,189,192,198,201,202,305,324,328,332,338,342,345,346,],[39,39,-6,-9,-5,-8,-7,39,-140,-10,-28,-24,-15,-139,39,39,39,39,-32,-30,-31,-29,]),'REF':([110,112,115,122,180,196,235,277,296,327,],[-23,180,-21,180,180,180,-22,180,180,180,]),'DCL':([0,3,4,8,24,31,40,45,116,189,192,198,201,202,305,324,328,332,338,342,345,346,],[41,41,-6,-9,-5,-8,-7,41,-140,-10,-28,-24,-15,-139,41,41,41,41,-32,-30,-31,-29,]),'ELSE':([2,10,16,22,34,38,56,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,93,95,98,100,101,103,104,105,106,116,138,156,162,164,166,195,202,203,210,213,215,217,218,223,224,225,237,252,255,258,259,263,282,290,295,313,314,316,330,],[-165,-69,-70,-164,-78,-71,-73,-202,-163,-23,-122,-68,-137,-125,-133,-135,-79,-121,-98,-134,-126,-124,-80,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-140,-162,-104,-94,222,-167,-177,-139,-74,-89,257,-81,-91,-93,-157,-202,-166,-176,-130,257,-84,-136,-161,-77,-82,222,-131,-83,-86,-87,]),'AND':([2,10,16,22,34,38,56,69,71,72,73,74,75,76,77,78,79,80,81,82,84,87,91,92,93,95,98,100,101,103,104,105,106,156,162,166,195,203,210,215,217,218,225,237,252,259,266,282,313,],[-165,-69,-70,-164,-78,-71,-73,-23,-122,-68,-137,-125,-133,-135,153,-121,-98,-134,-126,-124,-97,-96,-132,-128,-123,-88,-90,-138,-92,-129,-72,-127,-95,-104,-94,-167,-177,-74,-89,-81,-91,-93,-166,-176,-130,-136,-68,-77,-131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'composite_mode':([112,122,180,196,277,296,327,],[171,171,171,171,171,171,171,]),'operator1':([77,],[151,]),'identifier':([0,3,12,14,17,19,23,25,39,41,44,45,55,58,63,64,66,85,86,89,96,108,112,118,122,141,151,154,160,163,165,180,187,190,191,196,197,200,204,205,206,207,214,221,222,224,226,227,228,231,232,236,241,250,253,256,257,277,285,287,292,296,297,298,303,305,324,327,328,332,],[1,1,1,72,72,109,72,115,115,115,72,1,72,72,135,1,72,72,72,72,72,72,172,72,172,1,72,72,72,72,1,172,72,115,115,172,115,115,72,72,72,248,72,72,1,1,72,72,266,72,72,115,72,248,72,72,72,172,72,72,72,172,72,266,115,1,1,172,1,1,]),'action_statement_nullable':([12,64,141,224,],[62,138,209,263,]),'bracketed_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'else_expression':([213,255,],[254,291,]),'synonym_statement':([0,3,45,305,324,328,332,],[4,4,4,4,4,4,4,]),'iteration':([63,],[137,]),'array_mode':([112,122,180,196,277,296,327,],[178,178,178,178,178,178,178,]),'formal_parameter':([236,303,],[278,278,]),'procedure_statement':([0,3,45,305,324,328,332,],[8,8,8,8,8,8,8,]),'literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'procedure_definition':([117,],[192,]),'action_statement':([0,3,12,45,64,141,165,222,224,305,324,328,332,],[31,31,64,31,64,64,224,224,64,31,31,31,31,]),'result_spec':([280,304,],[307,325,]),'membership_operator':([77,],[149,]),'builtin_name':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'dereferenced_reference':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'reference_mode':([112,122,180,196,277,296,327,],[170,170,170,170,170,170,170,]),'arithmetic_multiplicative_operator':([5,98,217,],[53,163,163,]),'return_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'empty_literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'identifier_list':([25,39,41,190,191,197,200,236,303,],[112,119,122,112,235,119,122,277,277,]),'declaration_statement':([0,3,45,305,324,328,332,],[24,24,24,24,24,24,24,]),'operand1':([14,17,23,55,58,66,85,89,108,118,151,154,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[95,95,95,95,95,95,95,95,95,95,210,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'element_mode':([296,],[319,]),'character_string_literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'literal_range':([228,231,232,298,],[271,275,276,271,]),'action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[29,29,29,126,29,29,29,29,29,29,29,29,29,29,]),'exit_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'declaration_list':([41,200,],[124,242,]),'expression_list':([55,154,204,],[129,211,243,]),'boolean_mode':([112,122,180,196,207,228,250,277,296,298,327,],[183,183,183,183,183,183,183,183,183,183,183,]),'relational_operator':([77,],[143,]),'empty':([3,12,14,45,64,141,224,305,324,328,332,],[46,67,90,46,67,67,67,46,46,46,46,]),'upper_bound':([205,297,],[245,320,]),'statement_nullable':([3,45,305,324,328,332,],[47,127,326,331,335,337,]),'call_action':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[36,36,36,104,104,104,36,36,104,104,36,104,104,104,104,104,104,104,36,104,104,104,104,36,104,104,104,104,104,104,36,36,104,104,104,104,104,104,104,104,104,104,104,104,104,104,36,36,36,36,]),'index_mode_list':([228,298,],[268,321,]),'array_slice':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'discrete_mode_name':([112,122,180,196,207,228,250,277,296,298,327,],[186,186,186,186,186,186,186,186,186,186,186,]),'string_length':([229,],[273,]),'assigning_operator':([5,],[58,]),'newmode_statement':([0,3,45,305,324,328,332,],[40,40,40,40,40,40,40,]),'step_enumeration':([63,],[134,]),'value_array_element':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'array_location':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[5,5,5,87,87,87,5,5,87,87,5,87,87,156,87,87,87,87,5,87,87,87,87,5,87,87,87,87,87,87,5,5,87,87,87,87,87,87,87,87,87,87,87,87,87,87,5,5,5,5,]),'integer_literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,229,231,232,241,253,256,257,285,287,292,297,298,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,274,74,74,74,74,74,74,74,74,74,74,74,]),'end_value':([247,283,286,309,],[284,308,311,329,]),'builtin_call':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'range_enumeration':([63,],[136,]),'statement':([0,3,45,305,324,328,332,],[3,45,45,45,45,45,45,]),'action_statement_list':([165,222,],[223,262,]),'arithmetic_additive_operator':([5,95,210,],[60,161,161,]),'assignment_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'string_concatenation_operator':([5,95,210,],[54,159,159,]),'operator2':([95,210,],[160,160,]),'program':([0,],[11,]),'initialization':([199,],[240,]),'primitive_value':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'result_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operand2':([14,17,23,55,58,66,85,89,108,118,151,154,160,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[98,98,98,98,98,98,98,98,98,98,98,98,217,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'synonym_list':([25,190,],[113,234,]),'parenthesized_expression':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'array_element':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'referenced_location':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'discrete_mode':([112,122,180,196,207,228,250,277,296,298,327,],[185,185,185,185,249,267,288,185,185,267,185,]),'while_control':([12,65,],[70,139,]),'for_control':([12,],[65,]),'control_part':([12,],[68,]),'result':([14,],[88,]),'if_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'operand3':([14,17,23,55,58,66,85,89,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[101,101,101,101,101,101,101,101,101,101,101,101,101,218,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'lower_bound':([55,228,231,232,298,],[131,269,269,269,269,]),'procedure_call':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'value_array_slice':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'else_clause':([164,295,],[219,317,]),'operand0':([14,17,23,55,58,66,85,89,108,118,154,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'monadic_operator':([14,17,23,55,58,66,85,89,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'index_mode':([228,298,],[270,270,]),'mode_name':([112,122,180,196,277,296,327,],[174,174,174,174,174,174,174,]),'step_value':([247,],[283,]),'discrete_range_mode':([112,122,180,196,207,228,250,277,296,298,327,],[182,182,182,182,182,182,182,182,182,182,182,]),'mode':([112,122,180,196,277,296,327,],[175,199,230,238,302,318,334,]),'integer_mode':([112,122,180,196,207,228,250,277,296,298,327,],[176,176,176,176,176,176,176,176,176,176,176,]),'parameter_list':([108,118,226,],[167,194,264,]),'expression':([14,17,23,55,58,66,85,89,108,118,154,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[99,107,111,130,132,140,155,157,168,168,212,233,244,246,247,258,261,168,265,272,272,272,281,289,293,294,310,312,315,246,272,]),'then_clause':([107,261,],[164,295,]),'operand4':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[106,106,106,106,106,106,106,106,162,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'synonym_definition':([25,190,],[114,114,]),'newmode_list':([39,197,],[121,239,]),'location':([0,3,12,14,17,23,44,45,55,58,64,66,85,86,89,96,108,118,141,151,154,160,163,165,187,204,205,206,214,221,222,224,226,227,228,231,232,241,253,256,257,285,287,292,297,298,305,324,328,332,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'formal_parameter_list':([236,303,],[279,323,]),'declaration':([41,200,],[123,123,]),'statement_list':([0,],[35,]),'then_expression':([155,293,315,],[213,316,330,]),'character_literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'conditional_expression':([14,17,23,55,58,66,85,89,108,118,154,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'mode_definition':([39,197,],[120,120,]),'string_mode':([112,122,180,196,277,296,327,],[188,188,188,188,188,188,188,]),'elsif_expression':([213,],[255,]),'boolean_literal':([14,17,23,55,58,66,85,89,96,108,118,151,154,160,163,187,204,205,206,214,221,226,227,228,231,232,241,253,256,257,285,287,292,297,298,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'character_mode':([112,122,180,196,207,228,250,277,296,298,327,],[184,184,184,184,184,184,184,184,184,184,184,]),'closed_dyadic_operator':([5,],[51,]),'do_action':([0,3,12,44,45,64,141,165,222,224,305,324,328,332,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> array_element','location',1,'p_location','Parser.py',369),
  ('location -> array_slice','location',1,'p_location','Parser.py',370),
  ('location -> call_action','location',1,'p_location','Parser.py',371),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',399),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',403),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',404),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',412),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',416),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',426),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',427),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',431),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',439),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',440),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',444),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',448),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',468),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',469),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',476),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',484),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',485),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',493),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',494),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',501),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',503),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',514),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',520),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',525),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',529),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',530),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',544),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',545),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',549),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',554),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',559),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',571),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',578),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',582),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',586),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',590),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',598),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',602),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',607),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',608),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',617),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',621),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',632),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',633),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',638),
  ('action -> assignment_action','action',1,'p_action','Parser.py',639),
  ('action -> call_action','action',1,'p_action','Parser.py',640),
  ('action -> exit_action','action',1,'p_action','Parser.py',641),
  ('action -> result_action','action',1,'p_action','Parser.py',642),
  ('action -> return_action','action',1,'p_action','Parser.py',643),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',647),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',652),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',656),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',657),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',661),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',667),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',668),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',672),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',676),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',678),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',689),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',701),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',702),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',719),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',720),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',724),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',725),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',730),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',741),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',742),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',746),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',747),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',756),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',764),
  ('result -> expression','result',1,'p_result','Parser.py',768),
  ('result -> empty','result',1,'p_result','Parser.py',769),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',772),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',780),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',781),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',788),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',789),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',790),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',794),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',798),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',803),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',806),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',818),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',822),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',826),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',827),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',834),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',840),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C8DF009F97A414E9126492EAF70E1A01'
    
_lr_action_items = {'GTEQUAL':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,180,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'GREATER':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,174,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'PLUS':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,72,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,141,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-66,-70,-71,-169,-83,106,-72,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,106,-97,-137,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-23,-109,-99,-181,-170,-74,-86,-96,106,-98,-79,-180,-66,-135,-76,-82,-136,]),'DO':([0,1,2,4,10,21,22,30,46,56,98,102,129,167,187,192,200,206,213,233,234,326,335,339,344,],[1,1,-5,-8,-9,-7,1,-6,1,1,1,-144,1,-10,1,-15,-24,-28,-143,1,1,1,1,-30,-29,]),'TIMES':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,141,169,189,204,211,214,225,226,236,242,247,260,278,294,308,325,],[-67,-69,-66,-70,-71,-169,-83,116,-72,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,-97,-137,-139,-127,-142,-132,-138,116,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-23,-109,-99,-181,-170,-74,-86,116,-98,-79,-180,-66,-135,-76,-82,-136,]),'LPAREN':([6,9,16,23,24,25,29,33,37,38,40,42,44,50,53,55,57,61,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,141,147,149,152,153,155,156,159,162,163,164,165,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,205,210,212,215,218,219,220,223,227,231,241,243,244,251,252,260,264,270,273,279,288,290,292,295,296,297,299,302,327,],[55,-174,63,-175,63,-173,-177,-178,63,-179,-172,126,-176,63,126,63,63,-23,63,63,-107,63,-108,-114,-105,-155,63,-106,-115,-104,-116,63,63,126,218,-42,-49,-47,-45,-46,63,223,-48,-43,-44,63,-112,-113,-121,-124,-125,-110,-120,63,-122,-117,-111,-118,-123,-119,63,63,-154,248,63,63,63,63,63,63,63,63,63,63,63,63,223,-46,-46,223,63,63,63,223,63,63,-50,63,63,-51,63,334,]),'UPPER':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[23,23,-5,-8,-9,23,-7,23,23,-6,23,23,23,23,23,23,23,23,23,-107,23,-108,23,-144,-114,-105,-155,23,-106,-115,-104,-116,23,23,23,23,-10,23,-112,-113,-121,-124,-125,-110,-120,23,-122,-117,-111,-118,-123,-119,23,23,23,-15,-154,-24,-28,23,23,-143,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-30,-29,]),'IN':([5,8,14,17,20,26,34,36,53,61,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,136,139,169,189,204,208,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,176,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,209,-171,-109,-99,-181,250,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'ARROW':([5,8,11,14,16,17,20,24,26,31,32,34,36,37,42,50,53,55,57,63,70,73,76,85,86,90,95,106,107,110,111,112,113,114,116,117,119,126,139,141,159,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,204,210,211,212,214,215,218,219,220,223,227,231,241,242,243,244,247,260,270,273,279,290,292,294,296,297,302,308,],[-67,-69,-66,-70,66,-71,-169,66,-83,111,-72,-168,-68,66,-23,66,-23,66,66,66,-66,66,-107,111,-72,66,-108,-114,-105,-155,-73,66,-106,-115,-104,-116,66,66,-171,-23,66,111,66,-112,-113,-121,-124,-125,-110,-120,66,-122,-117,-111,-118,-123,-119,66,66,-154,-181,66,-170,66,-74,66,66,66,66,66,66,66,66,-79,66,66,-180,-66,66,66,66,66,66,-76,66,66,66,-82,]),'ARRAY':([58,60,61,105,154,202,216,286,298,334,],[-21,148,-23,148,148,148,-22,148,148,148,]),'CCONST':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[68,68,68,68,68,68,68,68,-107,68,-108,-114,-105,-155,68,-106,-115,-104,-116,68,68,68,68,-112,-113,-121,-124,-125,-110,-120,68,-122,-117,-111,-118,-123,-119,68,68,-154,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'AND':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,181,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'INT':([58,60,61,105,154,202,209,216,219,250,286,297,298,334,],[-21,153,-23,153,153,153,153,-22,153,153,153,153,153,153,]),'BY':([5,8,14,17,20,26,34,36,53,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,253,278,294,304,308,323,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,290,-135,-76,-87,-82,-88,-136,]),'DOWN':([5,8,14,17,20,26,34,36,53,61,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,136,139,169,189,204,211,214,225,226,229,236,242,247,253,278,289,294,304,308,314,323,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,208,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,291,-135,312,-76,-87,-82,-202,-88,-136,]),'REF':([58,60,61,105,154,202,216,286,298,334,],[-21,154,-23,154,154,154,-22,154,154,154,]),'NUM':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[9,9,-5,-8,-9,9,-7,9,9,-6,9,9,9,9,9,9,9,9,9,-107,9,-108,9,-144,-114,-105,-155,9,-106,-115,-104,-116,9,9,9,9,-10,9,-112,-113,-121,-124,-125,-110,-120,9,-122,-117,-111,-118,-123,-119,9,9,9,-15,-154,-24,-28,9,9,-143,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-30,-29,]),'COMMA':([5,8,14,17,20,26,34,36,53,58,59,61,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,104,111,121,138,139,149,151,152,153,155,156,157,158,160,161,162,163,164,165,169,189,194,197,204,211,214,221,222,225,226,229,236,238,240,242,246,247,261,263,264,265,278,280,281,284,287,294,295,299,300,304,308,310,317,319,320,323,325,329,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,145,146,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,193,-73,201,212,-171,-42,-40,-49,-47,-45,-41,-57,-37,-56,-39,-38,-48,-43,-44,-109,-99,-19,243,-181,-170,-74,-55,-14,-86,-96,-94,-98,243,-18,-79,-27,-180,297,-64,-63,-13,-135,-20,243,-54,311,-76,-50,-51,-58,-87,-82,-34,-52,-65,-60,-88,-136,-33,]),'LESS':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,184,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'RESULT':([0,1,2,4,10,21,22,30,46,56,98,102,129,167,187,192,200,206,213,233,234,326,335,339,344,],[24,24,-5,-8,-9,-7,24,-6,24,24,24,-144,24,-10,24,-15,-24,-28,-143,24,24,24,24,-30,-29,]),'MINUS':([5,8,11,14,16,17,20,24,26,31,32,34,36,37,42,50,53,55,57,63,64,67,68,69,70,71,72,73,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,106,107,110,111,112,113,114,116,117,119,126,139,141,159,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,195,204,210,211,212,214,215,218,219,220,223,225,226,227,229,231,236,241,242,243,244,247,260,270,273,278,279,290,292,294,296,297,302,308,325,],[-67,-69,-66,-70,76,-71,-169,76,-83,114,-72,-168,-68,76,-23,76,-23,76,76,76,-141,-129,-140,-130,-66,-128,114,76,-97,-137,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-114,-105,-155,-73,76,-106,-115,-104,-116,76,76,-171,-23,76,-109,76,-112,-113,-121,-124,-125,-110,-120,76,-122,-117,-111,-118,-123,-119,76,-99,76,-154,-181,76,-170,76,-74,76,76,76,76,76,-86,-96,76,114,76,-98,76,-79,76,76,-180,-66,76,76,-135,76,76,76,-76,76,76,76,-82,-136,]),'THEN':([5,8,14,17,20,26,34,36,53,64,65,67,68,69,70,71,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,173,189,204,211,214,225,226,229,236,242,247,275,278,294,301,304,308,322,323,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,187,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,227,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,187,-135,-76,227,-87,-82,227,-88,-136,]),'IF':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,73,98,102,110,112,119,126,129,159,167,187,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[16,16,-5,-8,-9,73,-7,16,73,-6,73,16,73,73,16,73,73,73,16,-144,-155,73,73,73,16,73,-10,16,73,-15,-154,-24,-28,73,73,-143,73,73,73,73,73,73,73,16,16,73,73,73,73,73,73,73,73,73,73,73,16,16,-30,-29,]),'RBRACKET':([5,8,14,17,20,26,34,36,53,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,142,143,149,152,153,155,163,164,165,169,189,196,197,204,211,214,225,226,229,236,237,238,242,247,255,256,261,262,263,264,267,268,278,281,282,283,284,294,295,299,304,307,308,317,318,323,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-75,214,-42,-49,-47,-45,-48,-43,-44,-109,-99,242,-80,-181,-170,-74,-86,-96,-94,-98,278,-80,-79,-180,-78,294,-61,298,-64,-63,300,-59,-135,-80,-81,308,-54,-76,-50,-51,-87,325,-82,-52,-62,-88,-136,]),'ICONST':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,224,227,231,241,243,244,270,273,279,290,292,296,297,302,],[75,75,75,75,75,75,75,75,-107,75,-108,-114,-105,-155,75,-106,-115,-104,-116,75,75,75,75,-112,-113,-121,-124,-125,-110,-120,75,-122,-117,-111,-118,-123,-119,75,75,-154,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ASSIGN':([5,8,11,14,17,20,26,31,32,34,36,42,53,58,60,61,70,106,107,108,109,111,113,114,115,116,117,118,122,136,139,141,149,150,151,152,153,155,156,157,158,160,161,162,163,164,165,194,204,211,214,216,221,242,247,294,295,299,300,308,319,320,],[-67,-69,-66,-70,-71,-169,-83,110,-72,-168,-68,-23,-23,-21,159,-23,-66,-114,-105,-156,195,-73,-106,-115,-158,-104,-116,-157,202,210,-171,-23,-42,220,-40,-49,-47,-45,-41,-57,-37,-56,-39,-38,-48,-43,-44,241,-181,-170,-74,-22,-55,-79,-180,-76,-50,-51,-58,-82,-65,-60,]),'EXIT':([0,1,2,4,10,21,22,30,46,56,98,102,129,167,187,192,200,206,213,233,234,326,335,339,344,],[18,18,-5,-8,-9,-7,18,-6,18,18,18,-144,18,-10,18,-15,-24,-28,-143,18,18,18,18,-30,-29,]),'ELSE':([5,8,14,17,20,26,34,36,46,53,54,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,102,111,128,139,169,186,189,204,211,213,214,225,226,228,229,234,235,236,242,247,269,271,277,278,294,304,306,308,321,323,325,332,],[-67,-69,-70,-71,-169,-83,-168,-68,-207,-23,-167,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-144,-73,-166,-171,-109,233,-99,-181,-170,-143,-74,-86,-96,273,-94,-207,-161,-98,-79,-180,-89,273,-165,-135,-76,-87,233,-82,-91,-88,-136,-92,]),'RETURNS':([309,],[327,]),'RPAREN':([5,8,14,17,20,26,34,36,53,55,61,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,126,137,138,139,149,151,152,153,155,156,157,158,160,161,162,163,164,165,168,169,189,203,204,211,214,221,225,226,229,236,242,247,254,258,266,278,284,285,287,294,295,299,300,304,308,310,317,319,320,323,325,329,330,337,341,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,139,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,204,211,-182,-171,-42,-40,-49,-47,-45,-41,-57,-37,-56,-39,-38,-48,-43,-44,225,-109,-99,247,-181,-170,-74,-55,-86,-96,-94,-98,-79,-180,-183,295,299,-135,-54,309,-31,-76,-50,-51,-58,-87,-82,-34,-52,-65,-60,-88,-136,-33,-32,340,343,]),'$end':([2,4,7,10,21,22,30,45,98,99,100,102,167,191,192,200,206,213,339,344,],[-5,-8,-1,-9,-7,-207,-6,0,-207,-2,-4,-144,-10,-3,-15,-24,-28,-143,-30,-29,]),'BOOL':([58,60,61,105,154,202,209,216,219,250,286,297,298,334,],[-21,163,-23,163,163,163,163,-22,163,163,163,163,163,163,]),'SCONST':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[81,81,81,81,81,81,81,81,-107,81,-108,-114,-105,-155,81,-106,-115,-104,-116,81,81,81,81,-112,-113,-121,-124,-125,-110,-120,81,-122,-117,-111,-118,-123,-119,81,81,-154,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'FALSE':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[78,78,78,78,78,78,78,78,-107,78,-108,-114,-105,-155,78,-106,-115,-104,-116,78,78,78,78,-112,-113,-121,-124,-125,-110,-120,78,-122,-117,-111,-118,-123,-119,78,78,-154,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'SYN':([0,2,4,10,21,22,30,98,102,167,192,200,206,213,326,335,339,344,],[12,-5,-8,-9,-7,12,-6,12,-144,-10,-15,-24,-28,-143,12,12,-30,-29,]),'FI':([5,8,14,17,20,26,34,36,46,53,54,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,102,111,128,139,169,186,189,204,211,213,214,225,226,229,230,234,235,236,242,247,272,276,277,278,294,303,304,305,306,308,323,324,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-207,-23,-167,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-144,-73,-166,-171,-109,232,-99,-181,-170,-143,-74,-86,-96,-94,274,-207,-161,-98,-79,-180,304,-162,-165,-135,-76,323,-87,-90,-164,-82,-88,-163,-136,]),'ELSIF':([5,8,14,17,20,26,34,36,46,53,54,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,102,111,128,139,169,186,189,204,211,213,214,225,226,228,229,234,235,236,242,247,269,271,277,278,294,304,306,308,321,323,325,332,],[-67,-69,-70,-71,-169,-83,-168,-68,-207,-23,-167,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-144,-73,-166,-171,-109,231,-99,-181,-170,-143,-74,-86,-96,270,-94,-207,-161,-98,-79,-180,-89,302,-165,-135,-76,-87,231,-82,-91,-88,-136,-92,]),'ASC':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[25,25,-5,-8,-9,25,-7,25,25,-6,25,25,25,25,25,25,25,25,25,-107,25,-108,25,-144,-114,-105,-155,25,-106,-115,-104,-116,25,25,25,25,-10,25,-112,-113,-121,-124,-125,-110,-120,25,-122,-117,-111,-118,-123,-119,25,25,25,-15,-154,-24,-28,25,25,-143,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-30,-29,]),'NOTEQ':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,178,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'DIVIDE':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,141,169,189,204,211,214,225,226,236,242,247,260,278,294,308,325,],[-67,-69,-66,-70,-71,-169,-83,107,-72,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,-97,-137,-139,-127,-142,-132,-138,107,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-23,-109,-99,-181,-170,-74,-86,107,-98,-79,-180,-66,-135,-76,-82,-136,]),'DCL':([0,2,4,10,21,22,30,98,102,167,192,200,206,213,326,335,339,344,],[28,-5,-8,-9,-7,28,-6,28,-144,-10,-15,-24,-28,-143,28,28,-30,-29,]),'TO':([5,8,14,17,20,26,34,36,53,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,253,278,289,291,294,304,308,312,314,323,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,292,-135,292,292,-76,-87,-82,292,-202,-88,-136,]),'LENGTH':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[29,29,-5,-8,-9,29,-7,29,29,-6,29,29,29,29,29,29,29,29,29,-107,29,-108,29,-144,-114,-105,-155,29,-106,-115,-104,-116,29,29,29,29,-10,29,-112,-113,-121,-124,-125,-110,-120,29,-122,-117,-111,-118,-123,-119,29,29,29,-15,-154,-24,-28,29,29,-143,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-30,-29,]),'TRUE':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[83,83,83,83,83,83,83,83,-107,83,-108,-114,-105,-155,83,-106,-115,-104,-116,83,83,83,83,-112,-113,-121,-124,-125,-110,-120,83,-122,-117,-111,-118,-123,-119,83,83,-154,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'LBRACKET':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,75,78,80,81,82,83,85,86,87,88,89,92,94,111,139,141,148,166,169,204,211,214,225,242,247,260,278,294,308,325,],[-67,-69,57,-70,-71,-169,-83,112,-72,-168,-68,-23,-23,-141,-129,-140,-130,57,-128,-137,-139,-127,-142,-132,-138,112,-72,-134,-126,-131,190,-133,-73,-171,-23,219,224,112,-181,-170,-74,-86,-79,-180,57,-135,-76,-82,-136,]),'LOC':([61,149,151,152,153,155,156,157,158,160,161,162,163,164,165,221,295,299,300,310,319,320,337,],[-23,-42,-40,-49,-47,-45,-41,-57,-37,-56,-39,-38,-48,-43,-44,-55,-50,-51,-58,329,-65,-60,341,]),'READ':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[33,33,-5,-8,-9,33,-7,33,33,-6,33,33,33,33,33,33,33,33,33,-107,33,-108,33,-144,-114,-105,-155,33,-106,-115,-104,-116,33,33,33,33,-10,33,-112,-113,-121,-124,-125,-110,-120,33,-122,-117,-111,-118,-123,-119,33,33,33,-15,-154,-24,-28,33,33,-143,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,-29,]),'COLON':([5,8,11,14,17,20,26,34,36,42,53,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,142,144,169,189,197,198,204,211,214,225,226,229,236,238,242,247,257,259,260,278,294,304,308,323,325,],[-67,-69,56,-70,-71,-169,-83,-168,-68,127,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-77,215,-109,-99,-53,244,-181,-170,-74,-86,-96,-94,-98,279,-79,-180,-53,296,-66,-135,-76,-87,-82,-88,-136,]),'LTEQUAL':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,175,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'CONCAT':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,72,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,141,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-66,-70,-71,-169,-83,117,-72,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,117,-97,-137,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-23,-109,-99,-181,-170,-74,-86,-96,117,-98,-79,-180,-66,-135,-76,-82,-136,]),'END':([2,4,10,21,30,98,100,102,167,191,192,200,206,213,326,333,335,338,339,344,],[-5,-8,-9,-7,-6,-207,-4,-144,-10,-3,-15,-24,-28,-143,-207,336,-207,342,-30,-29,]),'CHARS':([58,60,61,105,154,202,216,286,298,334,],[-21,166,-23,166,166,166,-22,166,166,166,]),'TYPE':([0,2,4,10,21,22,30,98,102,167,192,200,206,213,326,335,339,344,],[35,-5,-8,-9,-7,35,-6,35,-144,-10,-15,-24,-28,-143,35,35,-30,-29,]),'PROC':([127,],[205,]),'WHILE':([1,5,8,14,17,20,26,34,36,49,53,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,133,134,135,139,149,152,153,155,163,164,165,169,189,204,211,214,225,226,229,236,242,247,251,278,288,293,294,295,299,304,308,313,315,316,323,325,331,],[50,-67,-69,-70,-71,-169,-83,-168,-68,50,-23,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-195,-197,-196,-171,-42,-49,-47,-45,-48,-43,-44,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-205,-135,-204,-201,-76,-50,-51,-87,-82,-199,-200,-203,-88,-136,-198,]),'FOR':([1,],[51,]),'CHAR':([58,60,61,105,154,202,209,216,219,250,286,297,298,334,],[-21,152,-23,152,152,152,152,-22,152,152,152,152,152,152,]),'RETURN':([0,1,2,4,10,21,22,30,46,56,98,102,129,167,187,192,200,206,213,233,234,326,335,339,344,],[37,37,-5,-8,-9,-7,37,-6,37,37,37,-144,37,-10,37,-15,-24,-28,-143,37,37,37,37,-30,-29,]),'EQUAL':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,185,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'NULL':([16,24,37,50,55,57,63,73,76,90,95,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[64,64,64,64,64,64,64,64,-107,64,-108,-114,-105,-155,64,-106,-115,-104,-116,64,64,64,64,-112,-113,-121,-124,-125,-110,-120,64,-122,-117,-111,-118,-123,-119,64,64,-154,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'MODULO':([5,8,11,14,17,20,26,31,32,34,36,42,53,64,67,68,69,70,71,74,75,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,141,169,189,204,211,214,225,226,236,242,247,260,278,294,308,325,],[-67,-69,-66,-70,-71,-169,-83,113,-72,-168,-68,-23,-23,-141,-129,-140,-130,-66,-128,-97,-137,-139,-127,-142,-132,-138,113,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-23,-109,-99,-181,-170,-74,-86,113,-98,-79,-180,-66,-135,-76,-82,-136,]),'PRINT':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[38,38,-5,-8,-9,38,-7,38,38,-6,38,38,38,38,38,38,38,38,38,-107,38,-108,38,-144,-114,-105,-155,38,-106,-115,-104,-116,38,38,38,38,-10,38,-112,-113,-121,-124,-125,-110,-120,38,-122,-117,-111,-118,-123,-119,38,38,38,-15,-154,-24,-28,38,38,-143,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-30,-29,]),'ABS':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[40,40,-5,-8,-9,40,-7,40,40,-6,40,40,40,40,40,40,40,40,40,-107,40,-108,40,-144,-114,-105,-155,40,-106,-115,-104,-116,40,40,40,40,-10,40,-112,-113,-121,-124,-125,-110,-120,40,-122,-117,-111,-118,-123,-119,40,40,40,-15,-154,-24,-28,40,40,-143,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-30,-29,]),'OD':([1,46,48,54,102,128,129,207,213,],[-207,-207,130,-167,-144,-166,-207,249,-143,]),'ID':([0,1,2,4,10,12,16,18,21,22,24,28,30,35,37,46,50,51,55,56,57,58,60,61,63,66,73,76,90,95,98,102,105,106,107,110,112,113,114,116,117,119,126,129,145,146,154,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,193,195,200,201,202,206,209,210,212,213,215,216,218,219,220,223,227,231,233,234,241,243,244,248,250,270,273,279,286,290,292,296,297,298,302,311,326,334,335,339,344,],[42,53,-5,-8,-9,61,53,96,-7,42,53,61,-6,61,53,53,53,61,53,141,53,-21,61,-23,53,53,53,-107,53,-108,42,-144,61,-114,-105,-155,53,-106,-115,-104,-116,53,53,53,61,61,61,53,-10,53,-112,-113,-121,-124,-125,-110,-120,53,-122,-117,-111,-118,-123,-119,53,53,53,-15,61,-154,-24,61,61,-28,61,53,53,-143,53,-22,53,53,53,53,53,53,53,53,53,53,53,61,61,53,53,53,61,53,53,53,53,61,53,61,42,61,42,-30,-29,]),'OR':([5,8,14,17,20,26,34,36,53,64,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,111,139,169,189,204,211,214,225,226,229,236,242,247,260,278,294,308,325,],[-67,-69,-70,-71,-169,-83,-168,-68,-23,-141,-129,-140,-130,-66,-128,-93,-97,-137,183,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-73,-171,-109,-99,-181,-170,-74,-86,-96,-94,-98,-79,-180,-66,-135,-76,-82,-136,]),'SEMI':([3,5,8,13,14,15,17,19,20,26,27,32,34,36,37,39,41,43,47,49,52,53,59,61,62,64,65,67,68,69,70,71,72,74,75,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,96,97,101,103,104,111,120,121,123,124,125,130,131,132,133,134,135,139,140,149,151,152,153,155,156,157,158,160,161,162,163,164,165,169,189,194,199,204,211,214,217,221,222,225,226,229,232,236,239,240,242,245,246,247,249,251,265,274,278,280,288,293,294,295,299,300,304,308,309,313,315,316,319,320,323,325,328,331,336,340,342,343,],[-151,-67,-69,-149,-70,-150,-71,-145,-169,-83,102,-147,-168,-68,-207,-146,-152,-148,129,-193,-194,-23,-11,-23,167,-141,-85,-129,-140,-130,-66,-128,-93,-97,-137,-84,-139,-127,-142,-132,-138,-95,-101,-72,-134,-126,-131,-100,-103,-102,-133,-185,-184,-189,192,-16,-73,200,-25,-187,-186,-188,-191,-192,-206,-195,-197,-196,-171,213,-42,-40,-49,-47,-45,-41,-57,-37,-56,-39,-38,-48,-43,-44,-109,-99,-19,-153,-181,-170,-74,-12,-55,-14,-86,-96,-94,-160,-98,-17,-18,-79,-26,-27,-180,-190,-205,-13,-159,-135,-20,-204,-201,-76,-50,-51,-58,-87,-82,326,-199,-200,-203,-65,-60,-88,-136,335,-198,339,-36,344,-35,]),'LOWER':([0,1,2,4,10,16,21,22,24,30,37,46,50,55,56,57,63,66,73,76,90,95,98,102,106,107,110,112,113,114,116,117,119,126,129,159,167,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,192,195,200,206,210,212,213,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,339,344,],[44,44,-5,-8,-9,44,-7,44,44,-6,44,44,44,44,44,44,44,44,44,-107,44,-108,44,-144,-114,-105,-155,44,-106,-115,-104,-116,44,44,44,44,-10,44,-112,-113,-121,-124,-125,-110,-120,44,-122,-117,-111,-118,-123,-119,44,44,44,-15,-154,-24,-28,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),'NOT':([16,24,37,50,55,57,63,73,106,107,110,112,113,114,116,117,119,126,159,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,188,190,195,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[95,95,95,95,95,95,95,95,-114,-105,-155,95,-106,-115,-104,-116,95,95,95,95,-112,-113,-121,-124,-125,-110,-120,95,-122,-117,-111,-118,-123,-119,95,95,-154,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'iteration':([51,],[133,]),'end_value':([253,289,291,312,],[293,313,315,331,]),'mode_definition':([35,201,],[121,121,]),'if_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'conditional_expression':([16,24,37,50,55,57,63,73,112,119,126,159,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'step_value':([253,],[289,]),'statement_list':([0,],[7,]),'string_slice':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'upper_bound':([244,296,],[283,317,]),'discrete_range_mode':([60,105,154,202,209,219,250,286,297,298,334,],[155,155,155,155,155,155,155,155,155,155,155,]),'identifier':([0,1,12,16,22,24,28,35,37,46,50,51,55,56,57,60,63,66,73,90,98,105,112,119,126,129,145,146,154,159,170,179,187,188,190,193,201,202,209,210,212,215,218,219,220,223,227,231,233,234,241,243,244,248,250,270,273,279,286,290,292,296,297,298,302,311,326,334,335,],[11,11,58,70,11,70,58,58,70,11,70,136,70,70,70,156,70,70,70,70,11,156,70,70,70,11,58,58,156,70,70,70,11,70,70,58,58,156,252,70,70,70,70,260,70,70,70,70,11,11,70,70,70,58,252,70,70,70,156,70,70,70,260,156,70,58,11,156,11,]),'procedure_definition':([127,],[206,]),'builtin_name':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'result_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'then_clause':([79,275,],[186,306,]),'formal_parameter':([248,311,],[287,287,]),'parameter_list':([55,126,212,],[137,203,254,]),'relational_operator':([77,],[177,]),'array_slice':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'control_part':([1,],[47,]),'then_expression':([173,301,322,],[228,321,332,]),'reference_mode':([60,105,154,202,286,298,334,],[161,161,161,161,161,161,161,]),'newmode_statement':([0,22,98,326,335,],[21,21,21,21,21,]),'operand0':([16,24,37,50,55,57,63,73,112,119,126,159,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'boolean_mode':([60,105,154,202,209,219,250,286,297,298,334,],[164,164,164,164,164,164,164,164,164,164,164,]),'formal_parameter_list':([248,311,],[285,330,]),'declaration':([28,193,],[104,104,]),'arithmetic_multiplicative_operator':([31,84,226,],[118,188,188,]),'result_spec':([309,],[328,]),'literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'discrete_mode_name':([60,105,154,202,209,219,250,286,297,298,334,],[147,147,147,147,147,147,147,147,147,147,147,]),'value_array_element':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action':([0,1,22,46,56,98,129,187,233,234,326,335,],[27,27,27,27,140,27,27,27,27,27,27,27,]),'arithmetic_additive_operator':([31,72,229,],[108,171,171,]),'integer_mode':([60,105,154,202,209,219,250,286,297,298,334,],[149,149,149,149,149,149,149,149,149,149,149,]),'mode':([60,105,154,202,286,298,334,],[150,194,221,246,310,319,337,]),'literal_range':([218,219,223,297,],[258,263,266,263,]),'operand1':([16,24,37,50,55,57,63,73,112,119,126,159,179,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[72,72,72,72,72,72,72,72,72,72,72,72,229,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'synonym_statement':([0,22,98,326,335,],[30,30,30,30,30,]),'discrete_mode':([60,105,154,202,209,219,250,286,297,298,334,],[162,162,162,162,251,264,288,162,264,162,162,]),'array_location':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[31,31,85,31,85,85,31,85,85,31,85,85,169,85,85,31,85,85,85,31,85,85,85,31,85,85,85,85,85,85,85,85,85,85,85,31,31,85,85,85,85,85,85,85,85,85,85,85,31,31,]),'call_action':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[32,32,86,32,86,86,32,86,86,32,86,86,86,86,86,32,86,86,86,32,86,86,86,32,86,86,86,86,86,86,86,86,86,86,86,32,32,86,86,86,86,86,86,86,86,86,86,86,32,32,]),'character_string_literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'element_mode':([298,],[320,]),'procedure_call':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'operand2':([16,24,37,50,55,57,63,73,112,119,126,159,170,179,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[84,84,84,84,84,84,84,84,84,84,84,84,226,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'operator1':([77,],[179,]),'range_enumeration':([51,],[134,]),'value_array_slice':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'synonym_list':([12,146,],[62,217,]),'while_control':([1,49,],[52,131,]),'operand4':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[91,91,91,91,91,91,91,91,189,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'action_statement_nullable':([1,46,129,234,],[48,128,207,277,]),'primitive_value':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'referenced_location':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'empty':([1,22,37,46,98,129,234,326,335,],[54,100,125,54,100,54,54,100,100,]),'empty_literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'expression':([16,24,37,50,55,57,63,73,112,119,126,159,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[79,101,123,132,138,142,168,173,197,199,138,222,238,253,138,255,257,257,265,257,269,275,280,281,284,301,305,307,314,316,284,257,322,]),'declaration_statement':([0,22,98,326,335,],[2,2,2,2,2,]),'dereferenced_reference':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'parenthesized_expression':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'else_clause':([186,306,],[230,324,]),'exit_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'integer_literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,224,227,231,241,243,244,270,273,279,290,292,296,297,302,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,268,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'membership_operator':([77,],[182,]),'procedure_statement':([0,22,98,326,335,],[10,10,10,10,10,]),'array_mode':([60,105,154,202,286,298,334,],[157,157,157,157,157,157,157,]),'array_element':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'character_literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'return_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'closed_dyadic_operator':([31,],[109,]),'initialization':([194,],[240,]),'string_mode':([60,105,154,202,286,298,334,],[160,160,160,160,160,160,160,]),'bracketed_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'newmode_list':([35,201,],[120,245,]),'builtin_call':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'statement':([0,22,98,326,335,],[22,98,98,98,98,]),'identifier_list':([12,28,35,145,146,193,201,248,311,],[60,105,122,216,60,105,122,286,286,]),'action_statement':([0,1,22,46,98,129,187,233,234,326,335,],[4,46,4,46,4,46,234,234,46,4,4,]),'mode_name':([60,105,154,202,286,298,334,],[158,158,158,158,158,158,158,]),'assigning_operator':([31,],[119,]),'start_element':([57,],[143,]),'statement_nullable':([22,98,326,335,],[99,191,333,338,]),'location':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'index_mode':([219,297,],[261,261,]),'index_mode_list':([219,297,],[262,318,]),'for_control':([1,],[49,]),'else_expression':([228,271,],[272,303,]),'composite_mode':([60,105,154,202,286,298,334,],[151,151,151,151,151,151,151,]),'operator2':([72,229,],[170,170,]),'label_id':([18,],[97,]),'character_mode':([60,105,154,202,209,219,250,286,297,298,334,],[165,165,165,165,165,165,165,165,165,165,165,]),'left_element':([57,],[144,]),'result':([37,],[124,]),'declaration_list':([28,193,],[103,239,]),'expression_list':([112,190,243,],[196,237,282,]),'boolean_literal':([16,24,37,50,55,57,63,73,90,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'lower_bound':([112,218,219,223,297,],[198,259,259,259,259,]),'elsif_expression':([228,],[271,]),'right_element':([215,],[256,]),'string_element':([0,1,16,22,24,37,46,50,55,56,57,63,66,73,90,98,112,119,126,129,159,170,179,187,188,190,210,212,215,218,219,220,223,227,231,233,234,241,243,244,270,273,279,290,292,296,297,302,326,335,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'step_enumeration':([51,],[135,]),'monadic_operator':([16,24,37,50,55,57,63,73,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'action_statement_list':([187,233,],[235,276,]),'assignment_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'string_length':([224,],[267,]),'synonym_definition':([12,146,],[59,59,]),'do_action':([0,1,22,46,56,98,129,187,233,234,326,335,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'operand3':([16,24,37,50,55,57,63,73,112,119,126,159,170,179,188,190,210,212,215,218,219,220,223,227,231,241,243,244,270,273,279,290,292,296,297,302,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,236,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'string_concatenation_operator':([31,72,229,],[115,172,172,]),'program':([0,],[45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',176),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',180),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',181),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',190),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',201),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',205),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',206),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',220),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',227),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',228),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',233),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',236),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',240),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',255),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',259),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',263),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',267),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',281),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',285),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',289),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',296),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',308),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',312),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',316),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',320),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',321),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',330),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',331),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',335),
  ('location -> identifier','location',1,'p_location','Parser.py',346),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',347),
  ('location -> string_element','location',1,'p_location','Parser.py',348),
  ('location -> string_slice','location',1,'p_location','Parser.py',349),
  ('location -> array_element','location',1,'p_location','Parser.py',350),
  ('location -> array_slice','location',1,'p_location','Parser.py',351),
  ('location -> call_action','location',1,'p_location','Parser.py',352),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',356),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',360),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',364),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',368),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',372),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',376),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',380),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',384),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',385),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',392),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',396),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',407),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',419),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',420),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',424),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',428),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',432),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',433),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',448),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',449),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',456),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',457),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',464),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',465),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',473),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',474),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',505),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',514),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',515),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',524),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',539),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',562),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',566),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',570),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',578),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',587),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',591),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',595),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',606),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',607),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',612),
  ('action -> assignment_action','action',1,'p_action','Parser.py',613),
  ('action -> call_action','action',1,'p_action','Parser.py',614),
  ('action -> exit_action','action',1,'p_action','Parser.py',615),
  ('action -> result_action','action',1,'p_action','Parser.py',616),
  ('action -> return_action','action',1,'p_action','Parser.py',617),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',626),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',630),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',631),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',641),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',646),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',652),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',663),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',675),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',676),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',693),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',694),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',698),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',699),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',715),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',716),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',720),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',721),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',730),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',734),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',738),
  ('result -> expression','result',1,'p_result','Parser.py',742),
  ('result -> empty','result',1,'p_result','Parser.py',743),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',746),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',754),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',755),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',762),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',763),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',764),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',768),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',780),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',792),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',796),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',800),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',801),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',808),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',814),
]

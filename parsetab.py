
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT FALSE NUM DOWN CHARS INT TRUE ABS DCL RESULT ELSE RETURN FOR EXIT RETURNS CHAR READ LENGTH IN END WHILE FI SYN NULL LOWER BY REF BOOL PRINT DO LOC THEN ASC UPPER TYPE PROC OD ELSIF ARRAY IF TOprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | boolean_expression\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENboolean_expression : expression AND expression\n                              | expression OR expression\n                              | expression EQUAL expression\n                              | expression NOTEQ expression\n                              | expression GREATER expression\n                              | expression GTEQUAL expression\n                              | expression LESS expression\n                              | expression LTEQUAL expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF boolean_expression then_clause else_clause FI\n                     | IF boolean_expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF boolean_expression then_clause else_clause\n                       | ELSIF boolean_expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'NOT':([7,40,45,49,50,51,52,53,54,55,58,59,64,65,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[60,60,60,-115,-113,-155,60,-123,-122,-124,-114,60,60,60,60,60,60,60,-154,-125,60,-119,60,60,60,60,60,60,60,60,60,60,-120,-121,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ABS':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[5,-8,5,-7,5,-5,5,5,-6,-9,5,-115,-113,-155,5,-123,-122,-124,-114,5,-117,5,5,5,5,-116,5,5,5,5,5,5,5,-144,-154,-125,5,-119,5,5,5,5,5,5,5,5,5,5,5,-120,-121,5,-24,5,-10,-28,5,-15,5,5,5,5,5,5,5,5,5,5,-143,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-30,-29,]),'$end':([3,6,13,14,15,23,41,43,105,106,107,122,158,181,187,192,205,243,349,352,],[-8,-1,-7,0,-206,-5,-6,-9,-206,-4,-2,-144,-24,-10,-3,-28,-15,-143,-30,-29,]),'NUM':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[36,-8,36,-7,36,-5,36,36,-6,-9,36,-115,-113,-155,36,-123,-122,-124,-114,36,-117,36,36,36,36,-116,36,36,36,36,36,36,36,-144,-154,-125,36,-119,36,36,36,36,36,36,36,36,36,36,36,-120,-121,36,-24,36,-10,-28,36,-15,36,36,36,36,36,36,36,36,36,36,-143,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-30,-29,]),'ARROW':([1,7,10,12,19,20,29,32,33,34,37,38,39,40,45,48,49,50,51,52,53,54,55,58,59,60,61,64,65,68,72,73,89,93,104,108,110,119,129,134,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,182,190,194,207,208,209,212,228,236,239,240,241,244,245,246,247,249,251,255,262,263,267,277,296,300,305,308,310,316,318,],[48,62,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,62,62,-73,-115,-113,-155,62,-123,-122,-124,-114,62,-117,48,62,62,-66,-23,62,-116,-72,62,62,62,62,-154,48,-125,62,-119,62,62,62,62,62,62,62,62,62,62,-120,-121,62,62,-23,-171,-181,-79,62,62,62,62,62,62,62,62,62,-74,62,-170,-180,62,62,62,62,62,-66,-82,62,62,62,-76,62,62,]),'TIMES':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,134,148,182,190,194,207,211,230,231,245,247,249,266,277,296,310,323,],[50,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,-110,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,50,-111,-129,-141,-72,-137,-118,-108,-23,-171,-181,-79,-87,-107,50,-74,-170,-180,-135,-66,-82,-76,-136,]),'LOC':([96,161,162,163,166,168,169,170,171,172,173,174,177,178,179,238,304,306,309,313,326,327,344,],[-23,-57,-43,-39,-41,-37,-45,-38,-49,-40,-44,-42,-47,-48,-56,-55,-51,-50,-58,333,-65,-60,348,]),'LPAREN':([5,7,17,18,19,21,22,24,28,31,36,40,45,49,50,51,52,53,54,55,58,59,60,64,65,72,73,89,96,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,162,165,166,169,170,171,173,174,175,177,178,182,191,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,277,281,292,293,300,304,305,306,308,316,318,319,330,],[-172,64,108,-178,110,-173,-175,-179,-176,-177,-174,64,64,-115,-113,-155,64,-123,-122,-124,-114,64,-117,64,64,110,64,-116,-23,64,64,64,64,-154,-125,64,-119,64,64,64,64,64,64,64,64,64,64,-120,-121,64,-43,64,-46,-45,239,-49,-44,-42,240,-47,-48,110,248,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-46,239,239,-46,64,-51,64,-50,64,64,64,239,340,]),'UPPER':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[22,-8,22,-7,22,-5,22,22,-6,-9,22,-115,-113,-155,22,-123,-122,-124,-114,22,-117,22,22,22,22,-116,22,22,22,22,22,22,22,-144,-154,-125,22,-119,22,22,22,22,22,22,22,22,22,22,22,-120,-121,22,-24,22,-10,-28,22,-15,22,22,22,22,22,22,22,22,22,22,-143,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-30,-29,]),'TYPE':([0,3,13,15,23,41,43,105,122,158,181,192,205,243,331,342,349,352,],[8,-8,-7,8,-5,-6,-9,8,-144,-24,-10,-28,-15,-143,8,8,-30,-29,]),'LESS':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,145,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,145,-85,145,145,145,-118,145,-85,-108,145,145,-171,-181,145,-79,-103,-87,145,-92,145,-95,145,-94,-93,145,145,-107,-105,145,-74,-170,-180,145,145,145,-135,-85,145,145,-66,145,145,145,-82,145,-85,-96,145,-76,-85,-97,-136,145,145,]),'PLUS':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,134,148,182,190,194,207,210,211,230,231,245,247,249,266,277,296,310,323,],[54,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,-110,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,54,-141,-72,-137,-118,-108,-23,-171,-181,-79,54,-87,-107,-105,-74,-170,-180,-135,-66,-82,-76,-136,]),'PRINT':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[24,-8,24,-7,24,-5,24,24,-6,-9,24,-115,-113,-155,24,-123,-122,-124,-114,24,-117,24,24,24,24,-116,24,24,24,24,24,24,24,-144,-154,-125,24,-119,24,24,24,24,24,24,24,24,24,24,24,-120,-121,24,-24,24,-10,-28,24,-15,24,24,24,24,24,24,24,24,24,24,-143,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,-29,]),'RESULT':([0,3,13,15,23,35,41,43,103,105,112,122,150,158,181,192,197,205,224,229,243,331,342,349,352,],[40,-8,-7,40,-5,40,-6,-9,40,40,40,-144,40,-24,-10,-28,40,-15,40,40,-143,40,40,-30,-29,]),'REF':([95,96,101,123,157,167,232,289,307,340,],[-21,-23,167,167,167,167,-22,167,167,167,]),'LBRACKET':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,79,80,81,82,83,84,86,90,92,93,94,134,176,180,182,190,194,207,211,245,247,249,266,277,296,310,323,],[59,-83,104,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,59,-132,-131,104,-134,-23,149,-127,-126,-128,-142,-130,-139,-140,-138,-133,-129,-141,-72,-137,59,241,242,-23,-171,-181,-79,-87,-74,-170,-180,-135,104,-82,-76,-136,]),'EQUAL':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,140,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,140,-85,140,140,140,-118,140,-85,-108,140,140,-171,-181,140,-79,-103,-87,-90,-92,140,-95,140,-94,-93,-91,140,-107,-105,140,-74,-170,-180,140,140,140,-135,-85,140,140,-66,140,140,140,-82,140,-85,-96,140,-76,-85,-97,-136,140,140,]),'RBRACKET':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,121,131,132,134,148,162,169,171,173,174,177,178,185,186,190,194,207,210,211,214,215,216,217,218,219,220,221,222,223,230,231,245,247,249,257,258,259,260,266,278,279,280,281,282,283,284,285,296,299,302,304,306,310,322,323,325,328,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-85,207,-80,-118,-108,-43,-45,-49,-44,-42,-47,-48,-75,245,-171,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,266,-80,-107,-105,-74,-170,-180,-81,-80,296,-54,-135,307,-64,-61,-63,309,-59,-78,310,-82,-96,323,-51,-50,-76,-97,-136,-52,-62,]),'LENGTH':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[31,-8,31,-7,31,-5,31,31,-6,-9,31,-115,-113,-155,31,-123,-122,-124,-114,31,-117,31,31,31,31,-116,31,31,31,31,31,31,31,-144,-154,-125,31,-119,31,31,31,31,31,31,31,31,31,31,31,-120,-121,31,-24,31,-10,-28,31,-15,31,31,31,31,31,31,31,31,31,31,-143,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-29,]),'READ':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[18,-8,18,-7,18,-5,18,18,-6,-9,18,-115,-113,-155,18,-123,-122,-124,-114,18,-117,18,18,18,18,-116,18,18,18,18,18,18,18,-144,-154,-125,18,-119,18,18,18,18,18,18,18,18,18,18,18,-120,-121,18,-24,18,-10,-28,18,-15,18,18,18,18,18,18,18,18,18,18,-143,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-30,-29,]),'SEMI':([2,4,9,10,16,20,25,26,29,30,32,33,34,37,38,39,42,45,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,98,99,100,102,111,114,115,116,120,121,124,125,126,127,128,130,134,148,161,162,163,166,168,169,170,171,172,173,174,177,178,179,183,190,194,196,198,199,200,201,203,204,207,210,211,214,215,216,217,218,219,220,221,226,230,231,233,234,235,237,238,245,247,249,254,256,266,269,272,290,292,295,296,299,304,306,309,310,312,315,319,322,323,326,327,332,335,336,337,343,345,347,350,351,],[-146,-149,-151,-83,-150,-70,-148,-145,-67,-152,-147,-168,-69,-68,-169,-71,122,-206,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-23,158,-25,-11,181,-184,197,-193,-192,-188,-85,205,-16,-185,-186,-187,-153,-118,-108,-57,-43,-39,-41,-37,-45,-38,-49,-40,-44,-42,-47,-48,-56,243,-171,-181,-190,-191,-195,-196,-194,-205,-19,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-160,-107,-105,-27,-26,-12,-14,-55,-74,-170,-180,-18,-17,-135,-159,-13,-189,-204,-20,-82,-96,-51,-50,-58,-76,331,-200,-203,-97,-136,-65,-60,342,-198,-202,-199,-197,349,-36,352,-35,]),'END':([3,13,23,41,43,105,106,122,158,181,187,192,205,243,331,341,342,346,349,352,],[-8,-7,-5,-6,-9,-206,-4,-144,-24,-10,-3,-28,-15,-143,-206,345,-206,350,-30,-29,]),'RETURNS':([312,],[330,]),'ARRAY':([95,96,101,123,157,167,232,289,307,340,],[-21,-23,176,176,176,176,-22,176,176,176,]),'ID':([0,3,7,8,11,13,15,23,27,35,40,41,43,44,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,95,96,101,103,104,105,108,110,112,118,119,122,123,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,156,157,158,159,160,165,167,181,192,197,205,206,208,209,212,224,228,229,232,236,239,240,241,243,244,246,248,251,252,255,262,263,267,289,294,300,305,307,308,311,316,318,331,340,342,349,352,],[19,-8,72,96,96,-7,19,-5,96,72,72,-6,-9,96,72,-115,-113,-155,72,-123,-122,-124,-114,72,-117,72,72,72,72,-116,-21,-23,96,182,72,19,72,72,72,96,72,-144,96,-154,-125,72,-119,72,72,72,72,72,72,72,72,72,72,72,-120,-121,72,96,96,-24,96,96,72,96,-10,-28,72,-15,96,72,72,72,72,72,72,-22,72,72,72,72,-143,72,72,96,72,96,72,72,72,72,96,96,72,72,96,72,96,72,72,19,96,19,-30,-29,]),'FI':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,112,117,121,122,134,148,151,190,194,195,207,210,211,214,215,216,217,218,219,220,221,224,225,227,230,231,243,245,247,249,264,266,268,271,296,297,299,301,303,310,322,323,324,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-206,-167,-85,-144,-118,-108,226,-171,-181,-166,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-206,-161,269,-107,-105,-143,-74,-170,-180,299,-135,-165,-162,-82,-99,-96,322,-164,-76,-97,-136,-163,]),'PROC':([109,],[191,]),'COMMA':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,99,100,121,125,132,134,148,161,162,163,166,168,169,170,171,172,173,174,177,178,179,188,190,194,204,207,210,211,214,215,216,217,218,219,220,221,223,230,231,233,237,238,245,247,249,254,258,260,266,272,279,280,281,287,295,296,299,304,306,309,310,313,322,323,325,326,327,333,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,156,-23,159,160,-85,206,208,-118,-108,-57,-43,-39,-41,-37,-45,-38,-49,-40,-44,-42,-47,-48,-56,246,-171,-181,-19,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,208,-107,-105,-27,-14,-55,-74,-170,-180,-18,208,-54,-135,-13,-64,308,-63,311,-20,-82,-96,-51,-50,-58,-76,-34,-97,-136,-52,-65,-60,-33,]),'ASC':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[21,-8,21,-7,21,-5,21,21,-6,-9,21,-115,-113,-155,21,-123,-122,-124,-114,21,-117,21,21,21,21,-116,21,21,21,21,21,21,21,-144,-154,-125,21,-119,21,21,21,21,21,21,21,21,21,21,21,-120,-121,21,-24,21,-10,-28,21,-15,21,21,21,21,21,21,21,21,21,21,-143,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-30,-29,]),'ELSE':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,112,117,121,122,134,148,151,190,194,195,207,210,211,213,214,215,216,217,218,219,220,221,224,225,230,231,243,245,247,249,261,265,266,268,296,299,303,310,320,322,323,339,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-206,-167,-85,-144,-118,-108,229,-171,-181,-166,-79,-103,-87,262,-90,-92,-89,-95,-88,-94,-93,-91,-206,-161,-107,-105,-143,-74,-170,-180,-98,262,-135,-165,-82,-96,229,-76,-100,-97,-136,-101,]),'LTEQUAL':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,143,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,143,-85,143,143,143,-118,143,-85,-108,143,143,-171,-181,143,-79,-103,-87,143,-92,143,-95,143,-94,-93,143,143,-107,-105,143,-74,-170,-180,143,143,143,-135,-85,143,143,-66,143,143,143,-82,143,-85,-96,143,-76,-85,-97,-136,143,143,]),'CHARS':([95,96,101,123,157,167,232,289,307,340,],[-21,-23,180,180,180,180,-22,180,180,180,]),'CONCAT':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,134,148,182,190,194,207,210,211,230,231,245,247,249,266,277,296,310,323,],[55,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,-110,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,55,-141,-72,-137,-118,-108,-23,-171,-181,-79,55,-87,-107,-105,-74,-170,-180,-135,-66,-82,-76,-136,]),'GREATER':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,141,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,141,-85,141,141,141,-118,141,-85,-108,141,141,-171,-181,141,-79,-103,-87,141,-92,141,-95,141,-94,-93,141,141,-107,-105,141,-74,-170,-180,141,141,141,-135,-85,141,141,-66,141,141,141,-82,141,-85,-96,141,-76,-85,-97,-136,141,141,]),'AND':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,144,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,144,-85,144,144,144,-118,144,-85,-108,144,144,-171,-181,144,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,144,-107,-105,144,-74,-170,-180,144,144,144,-135,-85,144,144,-66,144,144,144,-82,144,-85,-96,144,-76,-85,-97,-136,144,144,]),'EXIT':([0,3,13,15,23,35,41,43,103,105,112,122,150,158,181,192,197,205,224,229,243,331,342,349,352,],[27,-8,-7,27,-5,27,-6,-9,27,27,27,-144,27,-24,-10,-28,27,-15,27,27,-143,27,27,-30,-29,]),'CHAR':([95,96,101,123,157,167,232,241,252,289,294,307,308,340,],[-21,-23,171,171,171,171,-22,171,171,171,171,171,171,171,]),'FOR':([35,],[118,]),'DIVIDE':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,134,148,182,190,194,207,211,230,231,245,247,249,266,277,296,310,323,],[58,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,-110,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,58,-111,-129,-141,-72,-137,-118,-108,-23,-171,-181,-79,-87,-107,58,-74,-170,-180,-135,-66,-82,-76,-136,]),'RETURN':([0,3,13,15,23,35,41,43,103,105,112,122,150,158,181,192,197,205,224,229,243,331,342,349,352,],[45,-8,-7,45,-5,45,-6,-9,45,45,45,-144,45,-24,-10,-28,45,-15,45,45,-143,45,45,-30,-29,]),'TO':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,121,134,148,190,194,207,210,211,214,215,216,217,218,219,220,221,230,231,245,247,249,266,291,296,299,310,314,317,322,323,334,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-85,-118,-108,-171,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-74,-170,-180,-135,316,-82,-96,-76,316,316,-97,-136,316,-201,]),'SCONST':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[80,80,80,-115,-113,-155,80,-123,-122,-124,-114,80,-117,80,80,80,-116,80,80,80,80,-154,-125,80,-119,80,80,80,80,80,80,80,80,80,80,-120,-121,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'BY':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,121,134,148,190,194,207,210,211,214,215,216,217,218,219,220,221,230,231,245,247,249,266,291,296,299,310,322,323,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-85,-118,-108,-171,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-74,-170,-180,-135,318,-82,-96,-76,-97,-136,]),'OR':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,142,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,142,-85,142,142,142,-118,142,-85,-108,142,142,-171,-181,142,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,142,-107,-105,142,-74,-170,-180,142,142,142,-135,-85,142,142,-66,142,142,142,-82,142,-85,-96,142,-76,-85,-97,-136,142,142,]),'IF':([0,3,7,13,15,23,35,40,41,43,45,51,52,59,64,65,103,104,105,108,110,112,119,122,129,140,141,142,143,144,145,146,147,149,150,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[7,-8,65,-7,7,-5,7,65,-6,-9,65,-155,65,65,65,65,7,65,7,65,65,7,65,-144,-154,65,65,65,65,65,65,65,65,65,7,-24,65,-10,-28,7,-15,65,65,65,7,65,7,65,65,65,65,-143,65,65,65,65,65,65,65,65,65,65,65,65,7,7,-30,-29,]),'ASSIGN':([1,10,12,19,20,29,32,33,34,37,38,39,46,47,48,49,50,53,54,55,56,57,58,68,72,95,96,97,101,161,162,163,164,166,168,169,170,171,172,173,174,177,178,179,182,190,194,202,204,207,232,238,245,247,249,296,304,306,309,310,326,327,],[51,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,129,-157,-73,-115,-113,-123,-122,-124,-156,-158,-114,-66,-23,-21,-23,157,165,-57,-43,-39,236,-41,-37,-45,-38,-49,-40,-44,-42,-47,-48,-56,-23,-171,-181,251,255,-79,-22,-55,-74,-170,-180,-82,-51,-50,-58,-76,-65,-60,]),'ELSIF':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,112,117,121,122,134,148,151,190,194,195,207,210,211,213,214,215,216,217,218,219,220,221,224,225,230,231,243,245,247,249,261,265,266,268,296,299,303,310,320,322,323,339,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-206,-167,-85,-144,-118,-108,228,-171,-181,-166,-79,-103,-87,263,-90,-92,-89,-95,-88,-94,-93,-91,-206,-161,-107,-105,-143,-74,-170,-180,-98,300,-135,-165,-82,-96,228,-76,-100,-97,-136,-101,]),'WHILE':([10,20,29,33,34,35,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,116,121,134,148,162,169,171,173,174,177,178,190,194,199,200,201,207,210,211,214,215,216,217,218,219,220,221,230,231,245,247,249,266,292,296,299,304,306,310,315,319,322,323,335,336,337,343,],[-83,-70,-67,-168,-69,119,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,119,-85,-118,-108,-43,-45,-49,-44,-42,-47,-48,-171,-181,-195,-196,-194,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-74,-170,-180,-135,-204,-82,-96,-51,-50,-76,-200,-203,-97,-136,-198,-202,-199,-197,]),'TRUE':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[84,84,84,-115,-113,-155,84,-123,-122,-124,-114,84,-117,84,84,84,-116,84,84,84,84,-154,-125,84,-119,84,84,84,84,84,84,84,84,84,84,-120,-121,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'DO':([0,3,13,15,23,35,41,43,103,105,112,122,150,158,181,192,197,205,224,229,243,331,342,349,352,],[35,-8,-7,35,-5,35,-6,-9,35,35,35,-144,35,-24,-10,-28,35,-15,35,35,-143,35,35,-30,-29,]),'FALSE':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[82,82,82,-115,-113,-155,82,-123,-122,-124,-114,82,-117,82,82,82,-116,82,82,82,82,-154,-125,82,-119,82,82,82,82,82,82,82,82,82,82,-120,-121,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RPAREN':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,108,110,121,134,138,148,161,162,163,166,168,169,170,171,172,173,174,177,178,179,188,189,190,193,194,207,210,211,214,215,216,217,218,219,220,221,230,231,238,245,247,249,260,266,274,276,286,287,288,296,299,304,306,309,310,313,322,323,325,326,327,329,333,344,348,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-23,190,194,-85,-118,211,-108,-57,-43,-39,-41,-37,-45,-38,-49,-40,-44,-42,-47,-48,-56,-182,247,-171,249,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-55,-74,-170,-180,-54,-135,304,306,-183,-31,312,-82,-96,-51,-50,-58,-76,-34,-97,-136,-52,-65,-60,-32,-33,347,351,]),'CCONST':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[83,83,83,-115,-113,-155,83,-123,-122,-124,-114,83,-117,83,83,83,-116,83,83,83,83,-154,-125,83,-119,83,83,83,83,83,83,83,83,83,83,-120,-121,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'BOOL':([95,96,101,123,157,167,232,241,252,289,294,307,308,340,],[-21,-23,178,178,178,178,-22,178,178,178,178,178,178,178,]),'GTEQUAL':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,146,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,146,-85,146,146,146,-118,146,-85,-108,146,146,-171,-181,146,-79,-103,-87,146,-92,146,-95,146,-94,-93,146,146,-107,-105,146,-74,-170,-180,146,146,146,-135,-85,146,146,-66,146,146,146,-82,146,-85,-96,146,-76,-85,-97,-136,146,146,]),'THEN':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,121,134,139,148,190,194,207,210,211,214,215,216,217,218,219,220,221,230,231,245,247,249,266,270,296,298,299,310,321,322,323,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,150,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-85,-118,212,-108,-171,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-74,-170,-180,-135,150,-82,212,-96,-76,212,-97,-136,]),'IN':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,134,148,190,194,202,207,210,211,230,231,245,247,249,253,266,277,296,310,323,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,135,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-23,-118,-108,-171,-181,252,-79,-103,-87,-107,-105,-74,-170,-180,294,-135,-66,-82,-76,-136,]),'DOWN':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,121,134,148,190,194,202,207,210,211,214,215,216,217,218,219,220,221,230,231,245,247,249,266,291,296,299,310,314,322,323,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-23,-85,-118,-108,-171,-181,253,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,-107,-105,-74,-170,-180,-135,317,-82,-96,-76,334,-97,-136,-201,]),'OD':([35,112,113,117,122,195,197,243,250,],[-206,-206,196,-167,-144,-166,-206,-143,290,]),'MINUS':([1,7,10,12,19,20,29,32,33,34,37,38,39,40,45,48,49,50,51,52,53,54,55,58,59,61,64,65,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,104,108,110,119,129,134,135,136,137,140,141,142,143,144,145,146,147,148,149,152,153,154,155,165,182,190,194,207,208,209,210,211,212,228,230,231,236,239,240,241,244,245,246,247,249,251,255,262,263,266,267,277,296,300,305,308,310,316,318,323,],[53,89,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,89,89,-73,-115,-113,-155,89,-123,-122,-124,-114,89,-110,89,89,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,53,-141,-72,-137,89,89,89,89,-154,-118,-125,89,-119,89,89,89,89,89,89,89,89,-108,89,89,-120,-121,89,89,-23,-171,-181,-79,89,89,53,-87,89,89,-107,-105,89,89,89,89,89,-74,89,-170,-180,89,89,89,89,-135,89,-66,-82,89,89,89,-76,89,89,-136,]),'MODULO':([1,10,12,19,20,29,32,33,34,37,38,39,48,61,66,67,68,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,134,148,182,190,194,207,211,230,231,245,247,249,266,277,296,310,323,],[49,-83,-66,-23,-70,-67,-72,-168,-69,-68,-169,-71,-73,-110,-132,-131,-66,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,49,-111,-129,-141,-72,-137,-118,-108,-23,-171,-181,-79,-87,-107,49,-74,-170,-180,-135,-66,-82,-76,-136,]),'COLON':([10,12,19,20,29,33,34,37,38,39,48,61,63,66,67,68,70,71,72,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,121,132,133,134,148,184,185,190,194,207,210,211,214,215,216,217,218,219,220,221,223,230,231,245,247,249,266,273,275,277,296,299,310,322,323,],[-83,103,109,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,-86,-134,-23,-112,-127,-126,-109,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,-85,-53,209,-118,-108,244,-77,-171,-181,-79,-103,-87,-90,-92,-89,-95,-88,-94,-93,-91,267,-107,-105,-74,-170,-180,-135,-53,305,-66,-82,-96,-76,-97,-136,]),'INT':([95,96,101,123,157,167,232,241,252,289,294,307,308,340,],[-21,-23,177,177,177,177,-22,177,177,177,177,177,177,177,]),'DCL':([0,3,13,15,23,41,43,105,122,158,181,192,205,243,331,342,349,352,],[44,-8,-7,44,-5,-6,-9,44,-144,-24,-10,-28,-15,-143,44,44,-30,-29,]),'NULL':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[92,92,92,-115,-113,-155,92,-123,-122,-124,-114,92,-117,92,92,92,-116,92,92,92,92,-154,-125,92,-119,92,92,92,92,92,92,92,92,92,92,-120,-121,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'LOWER':([0,3,7,13,15,23,35,40,41,43,45,49,50,51,52,53,54,55,58,59,60,62,64,65,73,89,103,104,105,108,110,112,119,122,129,135,136,137,140,141,142,143,144,145,146,147,149,150,152,153,154,155,158,165,181,192,197,205,208,209,212,224,228,229,236,239,240,241,243,244,246,251,255,262,263,267,300,305,308,316,318,331,342,349,352,],[28,-8,28,-7,28,-5,28,28,-6,-9,28,-115,-113,-155,28,-123,-122,-124,-114,28,-117,28,28,28,28,-116,28,28,28,28,28,28,28,-144,-154,-125,28,-119,28,28,28,28,28,28,28,28,28,28,28,-120,-121,28,-24,28,-10,-28,28,-15,28,28,28,28,28,28,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'SYN':([0,3,13,15,23,41,43,105,122,158,181,192,205,243,331,342,349,352,],[11,-8,-7,11,-5,-6,-9,11,-144,-24,-10,-28,-15,-143,11,11,-30,-29,]),'ICONST':([7,40,45,49,50,51,52,53,54,55,58,59,60,64,65,73,89,104,108,110,119,129,135,136,137,140,141,142,143,144,145,146,147,149,152,153,154,155,165,208,209,212,228,236,239,240,241,242,244,246,251,255,262,263,267,300,305,308,316,318,],[94,94,94,-115,-113,-155,94,-123,-122,-124,-114,94,-117,94,94,94,-116,94,94,94,94,-154,-125,94,-119,94,94,94,94,94,94,94,94,94,94,-120,-121,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'NOTEQ':([10,20,29,33,34,37,38,39,48,61,63,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,120,121,127,130,132,134,138,139,148,185,188,190,194,203,207,210,211,214,215,216,217,218,219,220,221,223,230,231,237,245,247,249,258,260,261,266,270,272,273,277,284,291,295,296,297,298,299,302,310,321,322,323,336,338,],[-83,-70,-67,-168,-69,-68,-169,-71,-73,-110,-84,-132,-131,-66,147,-86,-134,-23,-112,-127,-126,-109,-85,-128,-142,-130,-139,-140,-138,-106,-133,-104,-111,-129,-102,-141,-72,-137,147,-85,147,147,147,-118,147,-85,-108,147,147,-171,-181,147,-79,-103,-87,-90,-92,147,-95,147,-94,-93,-91,147,-107,-105,147,-74,-170,-180,147,147,147,-135,-85,147,147,-66,147,147,147,-82,147,-85,-96,147,-76,-85,-97,-136,147,147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array_location':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[1,61,1,1,61,61,61,61,134,61,61,61,1,61,1,61,61,1,61,61,61,61,61,61,61,61,61,61,61,1,61,61,61,1,61,61,61,1,61,1,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,1,1,]),'assignment_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'array_mode':([101,123,157,167,289,307,340,],[161,161,161,161,161,161,161,]),'else_clause':([151,303,],[227,324,]),'then_clause':([78,270,],[151,303,]),'operand0':([7,40,45,52,59,64,65,104,108,110,119,140,141,142,143,144,145,146,147,149,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'exit_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'assigning_operator':([1,],[52,]),'if_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'expression_list':([59,149,208,],[131,222,257,]),'declaration_list':([44,206,],[124,256,]),'identifier':([0,7,8,11,15,27,35,40,44,45,52,59,62,64,65,73,101,103,104,105,108,110,112,118,119,123,136,140,141,142,143,144,145,146,147,149,150,152,155,156,157,159,160,165,167,197,206,208,209,212,224,228,229,236,239,240,241,244,246,248,251,252,255,262,263,267,289,294,300,305,307,308,311,316,318,331,340,342,],[12,68,95,95,12,111,12,68,95,68,68,68,68,68,68,68,166,68,68,12,68,68,12,202,68,166,68,68,68,68,68,68,68,68,68,68,12,68,68,95,166,95,95,68,166,12,95,68,68,68,12,68,12,68,68,68,277,68,68,95,68,293,68,68,68,68,166,293,68,68,166,277,95,68,68,12,166,12,]),'action_statement_list':([150,229,],[225,271,]),'result_spec':([312,],[332,]),'character_string_literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'statement':([0,15,105,331,342,],[15,105,105,105,105,]),'index_mode_list':([241,308,],[278,328,]),'step_enumeration':([118,],[199,]),'left_element':([104,],[184,]),'range_enumeration':([118,],[200,]),'formal_parameter':([248,311,],[287,287,]),'right_element':([244,],[285,]),'conditional_expression':([7,40,45,52,59,64,65,104,108,110,119,140,141,142,143,144,145,146,147,149,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'discrete_mode_name':([101,123,157,167,241,252,289,294,307,308,340,],[175,175,175,175,175,175,175,175,175,175,175,]),'for_control':([35,],[116,]),'string_concatenation_operator':([1,91,210,],[57,154,154,]),'procedure_call':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'literal_range':([239,240,241,308,],[274,276,279,279,]),'array_slice':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'else_expression':([213,265,],[264,301,]),'end_value':([291,314,317,334,],[315,335,337,343,]),'empty':([15,35,45,105,112,197,224,331,342,],[106,117,128,106,117,117,117,106,106,]),'primitive_value':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'reference_mode':([101,123,157,167,289,307,340,],[163,163,163,163,163,163,163,]),'bracketed_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'boolean_mode':([101,123,157,167,241,252,289,294,307,308,340,],[162,162,162,162,162,162,162,162,162,162,162,]),'literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'operand4':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[77,77,77,77,77,77,77,148,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'start_element':([104,],[186,]),'boolean_expression':([7,40,45,52,59,64,65,104,108,110,119,140,141,142,143,144,145,146,147,149,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[78,121,121,121,121,121,139,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,270,121,121,121,121,121,121,121,121,121,298,121,321,121,121,121,121,]),'parameter_list':([108,110,246,],[189,193,286,]),'lower_bound':([59,239,240,241,308,],[133,275,275,275,275,]),'mode':([101,123,157,167,289,307,340,],[164,204,233,238,313,326,344,]),'arithmetic_additive_operator':([1,91,210,],[56,153,153,]),'arithmetic_multiplicative_operator':([1,87,231,],[47,152,152,]),'integer_literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,242,244,246,251,255,262,263,267,300,305,308,316,318,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,283,81,81,81,81,81,81,81,81,81,81,81,81,]),'step_value':([291,],[314,]),'operator1':([63,],[136,]),'operand3':([7,40,45,52,59,64,65,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,230,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'character_mode':([101,123,157,167,241,252,289,294,307,308,340,],[173,173,173,173,173,173,173,173,173,173,173,]),'builtin_call':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'referenced_location':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'procedure_statement':([0,15,105,331,342,],[43,43,43,43,43,]),'string_length':([242,],[282,]),'string_mode':([101,123,157,167,289,307,340,],[179,179,179,179,179,179,179,]),'location':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'action_statement':([0,15,35,105,112,150,197,224,229,331,342,],[3,3,112,3,112,224,112,112,224,3,3,]),'result_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'array_element':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'while_control':([35,116,],[115,198,]),'result':([45,],[126,]),'operand2':([7,40,45,52,59,64,65,104,108,110,119,136,140,141,142,143,144,145,146,147,149,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,231,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'string_element':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'character_literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'action_statement_nullable':([35,112,197,224,],[113,195,250,268,]),'boolean_literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'statement_list':([0,],[6,]),'index_mode':([241,308,],[280,280,]),'string_slice':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'newmode_statement':([0,15,105,331,342,],[13,13,13,13,13,]),'control_part':([35,],[114,]),'program':([0,],[14,]),'mode_name':([101,123,157,167,289,307,340,],[168,168,168,168,168,168,168,]),'declaration':([44,206,],[125,125,]),'return_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'builtin_name':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expression':([7,40,45,52,59,64,65,104,108,110,119,140,141,142,143,144,145,146,147,149,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[69,120,127,130,132,138,69,185,188,188,203,214,215,216,217,218,219,220,221,223,237,258,260,261,69,272,273,273,273,284,188,291,295,297,69,302,69,260,273,336,338,]),'value_array_element':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'action':([0,15,35,103,105,112,150,197,224,229,331,342,],[42,42,42,183,42,42,42,42,42,42,42,42,]),'procedure_definition':([109,],[192,]),'identifier_list':([8,11,44,156,159,160,206,248,311,],[97,101,123,232,97,101,123,289,289,]),'synonym_list':([11,160,],[102,235,]),'formal_parameter_list':([248,311,],[288,329,]),'declaration_statement':([0,15,105,331,342,],[23,23,23,23,23,]),'element_mode':([307,],[327,]),'discrete_mode':([101,123,157,167,241,252,289,294,307,308,340,],[170,170,170,170,281,292,170,319,170,281,170,]),'initialization':([204,],[254,]),'monadic_operator':([7,40,45,52,59,64,65,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'then_expression':([139,298,321,],[213,320,339,]),'empty_literal':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'do_action':([0,15,35,103,105,112,150,197,224,229,331,342,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'value_array_slice':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'synonym_definition':([11,160,],[100,100,]),'iteration':([118,],[201,]),'call_action':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[32,93,32,32,93,93,93,93,93,93,93,93,32,93,32,93,93,32,93,93,93,93,93,93,93,93,93,93,93,32,93,93,93,32,93,93,93,32,93,32,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,32,32,]),'dereferenced_reference':([0,7,15,35,40,45,52,59,62,64,65,73,103,104,105,108,110,112,119,136,140,141,142,143,144,145,146,147,149,150,152,155,165,197,208,209,212,224,228,229,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,331,342,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'discrete_range_mode':([101,123,157,167,241,252,289,294,307,308,340,],[169,169,169,169,169,169,169,169,169,169,169,]),'closed_dyadic_operator':([1,],[46,]),'composite_mode':([101,123,157,167,289,307,340,],[172,172,172,172,172,172,172,]),'operator2':([91,210,],[155,155,]),'integer_mode':([101,123,157,167,241,252,289,294,307,308,340,],[174,174,174,174,174,174,174,174,174,174,174,]),'mode_definition':([8,159,],[99,99,]),'synonym_statement':([0,15,105,331,342,],[41,41,41,41,41,]),'membership_operator':([63,],[137,]),'statement_nullable':([15,105,331,342,],[107,187,341,346,]),'parenthesized_expression':([7,40,45,52,59,64,65,73,104,108,110,119,136,140,141,142,143,144,145,146,147,149,152,155,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'operand1':([7,40,45,52,59,64,65,104,108,110,119,136,140,141,142,143,144,145,146,147,149,165,208,209,212,228,236,239,240,241,244,246,251,255,262,263,267,300,305,308,316,318,],[91,91,91,91,91,91,91,91,91,91,91,210,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'newmode_list':([8,159,],[98,234,]),'elsif_expression':([213,],[265,]),'upper_bound':([209,305,],[259,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> boolean_expression','expression',1,'p_expression','Parser.py',416),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',417),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',421),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','Parser.py',425),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','Parser.py',426),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',427),
  ('boolean_expression -> expression NOTEQ expression','boolean_expression',3,'p_boolean_expression','Parser.py',428),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','Parser.py',429),
  ('boolean_expression -> expression GTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',430),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','Parser.py',431),
  ('boolean_expression -> expression LTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',432),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',534),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',535),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',540),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',544),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',549),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',564),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',571),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',572),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',576),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',580),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',588),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',593),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',597),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',601),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',605),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',616),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',617),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',622),
  ('action -> assignment_action','action',1,'p_action','Parser.py',623),
  ('action -> call_action','action',1,'p_action','Parser.py',624),
  ('action -> exit_action','action',1,'p_action','Parser.py',625),
  ('action -> result_action','action',1,'p_action','Parser.py',626),
  ('action -> return_action','action',1,'p_action','Parser.py',627),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',632),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',636),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',640),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',641),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',647),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',651),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','Parser.py',652),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',656),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',661),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','Parser.py',662),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',673),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',685),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',686),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',703),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',704),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',708),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',709),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',721),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',725),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',726),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',730),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',731),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',740),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',748),
  ('result -> expression','result',1,'p_result','Parser.py',752),
  ('result -> empty','result',1,'p_result','Parser.py',753),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',756),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',764),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',765),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',772),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',773),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',774),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',778),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',783),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',789),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',790),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',802),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',806),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',810),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',811),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',818),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',824),
]

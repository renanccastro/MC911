
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT TO READ FI NULL INT LOC IN BY TRUE ABS REF THEN ASC FALSE DO LOWER TYPE ELSE DOWN LENGTH DCL UPPER END RESULT ELSIF WHILE IF RETURN BOOL FOR CHAR EXIT SYN ARRAY PROC RETURNS NUM PRINT OD CHARSprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS\n                            | NOTreferenced_location : ARROW array_locationoperator1 : relational_operator\n                     | membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT label_idlabel_id : IDreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'ASC':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[1,1,-8,-7,-6,1,1,1,1,-5,-9,1,1,-108,-107,1,1,1,1,1,1,1,-155,-106,-104,-114,-116,-105,1,1,-115,1,1,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,1,-125,-120,-113,1,-112,1,1,-15,1,-10,1,1,-24,-154,-28,1,1,1,1,1,-143,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-30,-29,]),'RESULT':([0,4,10,11,12,14,38,39,85,87,96,127,150,184,187,190,192,205,224,234,238,327,334,339,343,],[2,-8,-7,-6,2,2,-5,-9,2,2,2,-144,-15,2,-10,2,-24,-28,-143,2,2,2,2,-30,-29,]),'DCL':([0,4,10,11,14,38,39,96,127,150,187,192,205,224,327,334,339,343,],[3,-8,-7,-6,3,-5,-9,3,-144,-15,-10,-24,-28,-143,3,3,-30,-29,]),'CONCAT':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,172,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-66,-67,-83,-168,-69,-71,111,-169,-68,-72,-70,-23,-130,-138,-128,-66,-100,-127,-126,-140,-132,-139,-97,111,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-23,-171,-181,111,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'BOOL':([80,82,83,100,151,194,215,217,229,271,285,294,296,335,],[-21,-23,169,169,169,169,-22,169,169,169,169,169,169,169,]),'TIMES':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,53,55,57,59,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,172,202,204,210,211,214,225,242,245,247,254,256,300,308,315,],[-66,-67,-83,-168,-69,-71,108,-169,-68,-72,-70,-23,-130,-138,-128,-66,-100,-127,-126,-140,-132,-139,-97,-131,-101,-137,-133,-134,-72,-102,-103,-142,108,-129,-141,-23,-73,-99,-109,-23,-171,-181,108,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'FI':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,87,88,112,127,141,145,176,191,202,204,209,210,211,214,224,225,234,235,239,242,245,247,251,254,276,278,289,291,292,300,307,308,313,315,325,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-207,-167,-73,-144,-99,-109,-166,237,-171,-181,-94,-96,-86,-98,-143,-74,-207,-161,279,-79,-170,-180,291,-135,-165,-162,313,-87,-90,-76,-164,-82,-88,-136,-163,]),'EQUAL':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,130,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'TO':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,270,291,300,302,303,308,313,315,322,324,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,301,-87,-76,301,301,-82,-88,-136,301,-202,]),'LBRACKET':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,55,57,59,61,62,65,67,69,70,71,72,74,75,77,78,79,112,145,152,165,172,202,204,211,225,242,245,247,254,256,300,308,315,],[86,-67,-83,-168,-69,-71,115,-169,-68,-72,-70,-23,-130,-138,-128,86,-127,-126,-140,-132,-139,-131,115,-137,-133,-134,-72,147,-142,-129,-141,-23,-73,115,217,219,-23,-171,-181,-86,-74,-79,-170,-180,-135,86,-76,-82,-136,]),'NOT':([2,19,29,50,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[56,56,56,56,56,56,56,-155,-106,-104,-114,-116,-105,56,56,-115,56,56,-118,-119,-123,-122,-124,-111,-117,-110,-121,56,-125,-120,-113,56,-112,56,56,56,-154,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'TRUE':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[47,47,47,47,47,-108,-107,47,47,47,-155,-106,-104,-114,-116,-105,47,47,-115,47,47,-118,-119,-123,-122,-124,-111,-117,-110,-121,47,-125,-120,-113,47,-112,47,47,47,-154,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ABS':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[9,9,-8,-7,-6,9,9,9,9,-5,-9,9,9,-108,-107,9,9,9,9,9,9,9,-155,-106,-104,-114,-116,-105,9,9,-115,9,9,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,9,-125,-120,-113,9,-112,9,9,-15,9,-10,9,9,-24,-154,-28,9,9,9,9,9,-143,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-30,-29,]),'DOWN':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,82,112,141,145,181,202,204,209,210,211,214,225,242,245,247,254,270,291,300,303,308,313,315,324,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-23,-73,-99,-109,228,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,302,-87,-76,322,-82,-88,-136,-202,]),'PROC':([126,],[206,]),'COMMA':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,82,84,98,103,112,141,145,153,154,155,156,157,158,159,160,162,163,164,166,167,168,169,198,201,202,204,209,210,211,213,214,216,220,225,232,241,242,245,247,254,260,261,262,266,275,280,283,287,291,297,298,299,300,308,309,313,315,316,317,318,326,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,149,-23,170,186,193,-73,-99,-109,-40,-42,-39,-41,-57,-49,-47,-45,-37,-56,-44,-19,-43,-38,-48,244,246,-171,-181,-94,-96,-86,244,-98,-55,-18,-74,-14,-27,-79,-170,-180,-135,296,-64,-63,-20,-13,-54,244,311,-87,-50,-58,-51,-76,-82,-34,-88,-136,-60,-65,-52,-33,]),'GREATER':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,137,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'OD':([12,87,88,91,127,176,184,224,230,],[-207,-207,-167,179,-144,-166,-207,-143,274,]),'SEMI':([6,7,8,16,17,20,21,22,23,24,25,29,30,32,34,40,41,45,46,47,48,49,51,53,54,55,57,58,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,84,89,93,94,98,99,102,103,112,119,120,121,122,123,141,145,153,154,155,156,157,158,159,160,162,163,164,166,167,168,169,171,177,178,179,180,182,183,199,202,204,209,210,211,214,216,220,223,225,231,232,237,240,241,242,245,247,254,266,273,274,275,279,291,297,298,299,300,305,306,308,310,313,315,316,317,320,321,323,328,332,336,340,342,344,],[-67,-152,-83,-168,-150,-151,-69,-146,-71,-145,-149,-207,-169,-68,-147,-70,-148,127,-130,-138,-128,-66,-84,-100,-85,-127,-126,-189,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,150,-23,-16,-193,184,-194,-11,187,192,-25,-73,-188,-186,-187,-184,-185,-99,-109,-40,-42,-39,-41,-57,-49,-47,-45,-37,-56,-44,-19,-43,-38,-48,224,-192,-206,-191,-197,-196,-195,-153,-171,-181,-94,-96,-86,-98,-55,-18,-17,-74,-12,-14,-160,-26,-27,-79,-170,-180,-135,-20,-205,-190,-13,-159,-87,-50,-58,-51,-76,-201,-204,-82,327,-88,-136,-60,-65,-203,-200,-199,334,-198,339,343,-36,-35,]),'WHILE':([6,8,12,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,89,112,141,145,154,158,159,160,164,167,169,180,182,183,202,204,209,210,211,214,225,242,245,247,254,273,291,297,299,300,305,306,308,313,315,320,321,323,332,],[-67,-83,90,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,90,-73,-99,-109,-42,-49,-47,-45,-44,-43,-48,-197,-196,-195,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-205,-87,-50,-51,-76,-201,-204,-82,-88,-136,-203,-200,-199,-198,]),'LESS':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,131,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'DO':([0,4,10,11,12,14,38,39,85,87,96,127,150,184,187,190,192,205,224,234,238,327,334,339,343,],[12,-8,-7,-6,12,12,-5,-9,12,12,12,-144,-15,12,-10,12,-24,-28,-143,12,12,12,12,-30,-29,]),'END':([4,10,11,38,39,95,96,127,150,185,187,192,205,224,327,333,334,337,339,343,],[-8,-7,-6,-5,-9,-4,-207,-144,-15,-3,-10,-24,-28,-143,-207,336,-207,340,-30,-29,]),'UPPER':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[13,13,-8,-7,-6,13,13,13,13,-5,-9,13,13,-108,-107,13,13,13,13,13,13,13,-155,-106,-104,-114,-116,-105,13,13,-115,13,13,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,13,-125,-120,-113,13,-112,13,13,-15,13,-10,13,13,-24,-154,-28,13,13,13,13,13,-143,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-30,-29,]),'SYN':([0,4,10,11,14,38,39,96,127,150,187,192,205,224,327,334,339,343,],[15,-8,-7,-6,15,-5,-9,15,-144,-15,-10,-24,-28,-143,15,15,-30,-29,]),'LTEQUAL':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,133,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'IN':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,82,112,141,145,181,202,204,209,210,211,214,225,228,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,139,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-23,-73,-99,-109,229,-171,-181,-94,-96,-86,-98,-74,271,-79,-170,-180,-135,-66,-76,-82,-136,]),'GTEQUAL':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,132,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'MINUS':([2,5,6,8,16,19,21,23,27,29,30,32,34,40,42,46,47,48,49,50,53,55,57,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,86,90,105,107,108,110,111,112,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,172,188,195,202,204,208,209,210,211,214,217,218,221,222,225,226,227,233,236,242,243,244,245,246,247,250,252,254,255,256,288,295,296,300,301,304,308,315,],[60,-66,-67,-83,-168,60,-69,-71,117,60,-169,-68,-72,-70,-23,-130,-138,-128,-66,60,-100,-127,-126,-140,-132,-139,-97,117,-131,-101,60,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,60,60,-155,-106,-104,-114,-116,-73,-105,60,60,-115,60,60,-118,-119,-123,-122,-124,-111,-117,-110,-121,60,-125,-120,-99,-113,60,-112,-109,60,60,-23,60,-154,-171,-181,60,117,-96,-86,-98,60,60,60,60,-74,60,60,60,60,-79,60,60,-170,60,-180,60,60,-135,60,-66,60,60,60,-76,60,60,-82,-136,]),'ASSIGN':([5,6,8,16,21,23,27,30,32,34,40,42,49,79,80,82,100,104,106,107,108,109,110,111,112,113,114,117,118,153,154,155,156,157,158,159,160,162,163,164,166,167,168,169,172,181,189,202,204,215,216,225,242,245,247,297,298,299,300,308,316,317,],[-66,-67,-83,-168,-69,-71,105,-169,-68,-72,-70,-23,-66,-23,-21,-23,188,194,195,-106,-104,-158,-114,-116,-73,-157,-105,-115,-156,-40,-42,-39,-41,-57,-49,-47,-45,-37,-56,-44,221,-43,-38,-48,-23,227,233,-171,-181,-22,-55,-74,-79,-170,-180,-50,-58,-51,-76,-82,-60,-65,]),'RPAREN':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,82,112,124,125,141,145,146,153,154,155,156,157,158,159,160,162,163,164,167,168,169,200,201,202,203,204,209,210,211,214,216,225,242,245,247,254,263,267,280,284,286,287,291,297,298,299,300,308,309,313,315,316,317,318,326,330,338,341,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-23,-73,202,204,-99,-109,211,-40,-42,-39,-41,-57,-49,-47,-45,-37,-56,-44,-43,-38,-48,245,-182,-171,247,-181,-94,-96,-86,-98,-55,-74,-79,-170,-180,-135,297,299,-54,-183,310,-31,-87,-50,-58,-51,-76,-82,-34,-88,-136,-60,-65,-52,-33,-32,342,344,]),'FALSE':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[62,62,62,62,62,-108,-107,62,62,62,-155,-106,-104,-114,-116,-105,62,62,-115,62,62,-118,-119,-123,-122,-124,-111,-117,-110,-121,62,-125,-120,-113,62,-112,62,62,62,-154,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'IF':([0,2,4,10,11,12,14,19,29,38,39,50,68,85,86,87,90,96,105,115,116,124,125,127,147,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[19,50,-8,-7,-6,19,19,50,50,-5,-9,50,50,19,50,19,50,19,-155,50,50,50,50,-144,50,-15,19,-10,50,19,-24,-154,-28,50,50,50,50,50,-143,50,50,50,19,50,19,50,50,50,50,50,50,50,50,50,50,50,19,19,-30,-29,]),'INT':([80,82,83,100,151,194,215,217,229,271,285,294,296,335,],[-21,-23,159,159,159,159,-22,159,159,159,159,159,159,159,]),'ELSIF':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,87,88,112,127,141,145,176,191,202,204,207,209,210,211,214,224,225,234,235,242,245,247,249,253,254,276,291,300,307,308,313,314,315,331,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-207,-167,-73,-144,-99,-109,-166,236,-171,-181,250,-94,-96,-86,-98,-143,-74,-207,-161,-79,-170,-180,288,-89,-135,-165,-87,-76,236,-82,-88,-91,-136,-92,]),'PLUS':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,172,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-66,-67,-83,-168,-69,-71,110,-169,-68,-72,-70,-23,-130,-138,-128,-66,-100,-127,-126,-140,-132,-139,-97,110,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-23,-171,-181,110,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'CCONST':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[59,59,59,59,59,-108,-107,59,59,59,-155,-106,-104,-114,-116,-105,59,59,-115,59,59,-118,-119,-123,-122,-124,-111,-117,-110,-121,59,-125,-120,-113,59,-112,59,59,59,-154,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'AND':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,135,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'ARROW':([2,5,6,8,16,19,21,23,27,29,30,32,34,40,42,49,50,52,56,60,67,68,72,79,86,90,105,107,108,110,111,112,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,147,148,172,188,195,202,204,208,217,218,221,222,225,226,227,233,236,242,243,244,245,246,247,250,252,255,256,288,295,296,300,301,304,308,],[66,-66,-67,-83,-168,66,-69,-71,112,66,-169,-68,-72,-70,-23,-66,66,66,-108,-107,112,66,-72,-23,66,66,-155,-106,-104,-114,-116,-73,-105,66,66,-115,66,66,-118,-119,-123,-122,-124,-111,-117,-110,-121,66,-125,-120,-113,66,-112,112,66,66,-23,66,-154,-171,-181,66,66,66,66,66,-74,66,66,66,66,-79,66,66,-170,66,-180,66,66,66,-66,66,66,66,-76,66,66,-82,]),'BY':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,270,291,300,308,313,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,304,-87,-76,-82,-88,-136,]),'RETURNS':([310,],[329,]),'LOC':([82,153,154,155,156,157,158,159,160,162,163,164,167,168,169,216,297,298,299,309,316,317,338,],[-23,-40,-42,-39,-41,-57,-49,-47,-45,-37,-56,-44,-43,-38,-48,-55,-50,-58,-51,326,-60,-65,341,]),'DIVIDE':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,53,55,57,59,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,172,202,204,210,211,214,225,242,245,247,254,256,300,308,315,],[-66,-67,-83,-168,-69,-71,114,-169,-68,-72,-70,-23,-130,-138,-128,-66,-100,-127,-126,-140,-132,-139,-97,-131,-101,-137,-133,-134,-72,-102,-103,-142,114,-129,-141,-23,-73,-99,-109,-23,-171,-181,114,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'MODULO':([5,6,8,16,21,23,27,30,32,34,40,42,46,47,48,49,53,55,57,59,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,172,202,204,210,211,214,225,242,245,247,254,256,300,308,315,],[-66,-67,-83,-168,-69,-71,107,-169,-68,-72,-70,-23,-130,-138,-128,-66,-100,-127,-126,-140,-132,-139,-97,-131,-101,-137,-133,-134,-72,-102,-103,-142,107,-129,-141,-23,-73,-99,-109,-23,-171,-181,107,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'CHAR':([80,82,83,100,151,194,215,217,229,271,285,294,296,335,],[-21,-23,158,158,158,158,-22,158,158,158,158,158,158,158,]),'TYPE':([0,4,10,11,14,38,39,96,127,150,187,192,205,224,327,334,339,343,],[26,-8,-7,-6,26,-5,-9,26,-144,-15,-10,-24,-28,-143,26,26,-30,-29,]),'ARRAY':([80,82,83,100,151,194,215,285,294,335,],[-21,-23,152,152,152,152,-22,152,152,152,]),'LPAREN':([1,2,9,13,19,29,33,35,36,37,42,43,44,50,52,56,60,68,79,82,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,154,156,158,159,160,161,164,167,168,169,172,188,195,206,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,256,262,272,273,288,295,296,297,299,301,304,306,329,],[-173,68,-172,-175,68,68,-179,-174,-178,124,125,-176,-177,68,68,-108,-107,68,125,-23,68,68,-155,-106,-104,-114,-116,-105,68,68,-115,68,68,-118,-119,-123,-122,-124,-111,-117,-110,-121,68,-125,-120,-113,68,-112,68,68,-42,-46,-49,-47,-45,218,-44,-43,222,-48,125,68,-154,248,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-46,222,-46,222,68,68,68,-50,-51,68,68,222,335,]),'FOR':([12,],[92,]),'COLON':([5,6,8,16,21,23,30,32,40,42,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,174,175,197,198,202,204,209,210,211,213,214,225,242,245,247,254,256,258,259,291,300,308,313,315,],[85,-67,-83,-168,-69,-71,-169,-68,-70,126,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-77,226,243,-53,-171,-181,-94,-96,-86,255,-98,-74,-79,-170,-180,-135,-66,295,-53,-87,-76,-82,-88,-136,]),'THEN':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,101,112,128,141,145,202,204,209,210,211,214,225,242,245,247,254,277,290,291,300,308,312,313,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,190,-73,208,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,190,208,-87,-76,-82,208,-88,-136,]),'NOTEQ':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,140,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'RETURN':([0,4,10,11,12,14,38,39,85,87,96,127,150,184,187,190,192,205,224,234,238,327,334,339,343,],[29,-8,-7,-6,29,29,-5,-9,29,29,29,-144,-15,29,-10,29,-24,-28,-143,29,29,29,29,-30,-29,]),'ELSE':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,87,88,112,127,141,145,176,191,202,204,207,209,210,211,214,224,225,234,235,242,245,247,249,253,254,276,291,300,307,308,313,314,315,331,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-207,-167,-73,-144,-99,-109,-166,238,-171,-181,252,-94,-96,-86,-98,-143,-74,-207,-161,-79,-170,-180,252,-89,-135,-165,-87,-76,238,-82,-88,-91,-136,-92,]),'EXIT':([0,4,10,11,12,14,38,39,85,87,96,127,150,184,187,190,192,205,224,234,238,327,334,339,343,],[31,-8,-7,-6,31,31,-5,-9,31,31,31,-144,-15,31,-10,31,-24,-28,-143,31,31,31,31,-30,-29,]),'PRINT':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[33,33,-8,-7,-6,33,33,33,33,-5,-9,33,33,-108,-107,33,33,33,33,33,33,33,-155,-106,-104,-114,-116,-105,33,33,-115,33,33,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,33,-125,-120,-113,33,-112,33,33,-15,33,-10,33,33,-24,-154,-28,33,33,33,33,33,-143,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,-29,]),'RBRACKET':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,54,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,154,158,159,160,164,167,169,173,174,196,198,202,204,209,210,211,212,213,214,225,242,245,247,254,257,260,261,262,264,265,268,269,280,281,282,283,291,293,297,299,300,308,313,315,318,319,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,-84,-100,-85,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-42,-49,-47,-45,-44,-43,-48,225,-75,242,-80,-171,-181,-94,-96,-86,254,-80,-98,-74,-79,-170,-180,-135,294,-61,-64,-63,-59,298,-78,300,-54,308,-81,-80,-87,315,-50,-51,-76,-82,-88,-136,-52,-62,]),'NUM':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[35,35,-8,-7,-6,35,35,35,35,-5,-9,35,35,-108,-107,35,35,35,35,35,35,35,-155,-106,-104,-114,-116,-105,35,35,-115,35,35,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,35,-125,-120,-113,35,-112,35,35,-15,35,-10,35,35,-24,-154,-28,35,35,35,35,35,-143,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-30,-29,]),'READ':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[36,36,-8,-7,-6,36,36,36,36,-5,-9,36,36,-108,-107,36,36,36,36,36,36,36,-155,-106,-104,-114,-116,-105,36,36,-115,36,36,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,36,-125,-120,-113,36,-112,36,36,-15,36,-10,36,36,-24,-154,-28,36,36,36,36,36,-143,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-30,-29,]),'OR':([6,8,16,21,23,30,32,40,46,47,48,49,51,53,55,57,59,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,112,141,145,202,204,209,210,211,214,225,242,245,247,254,256,300,308,315,],[-67,-83,-168,-69,-71,-169,-68,-70,-130,-138,-128,-66,129,-100,-127,-126,-140,-132,-139,-97,-93,-131,-101,-137,-133,-134,-72,-102,-103,-142,-95,-129,-141,-23,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'CHARS':([80,82,83,100,151,194,215,285,294,335,],[-21,-23,165,165,165,165,-22,165,165,165,]),'SCONST':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[75,75,75,75,75,-108,-107,75,75,75,-155,-106,-104,-114,-116,-105,75,75,-115,75,75,-118,-119,-123,-122,-124,-111,-117,-110,-121,75,-125,-120,-113,75,-112,75,75,75,-154,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ICONST':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,219,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[69,69,69,69,69,-108,-107,69,69,69,-155,-106,-104,-114,-116,-105,69,69,-115,69,69,-118,-119,-123,-122,-124,-111,-117,-110,-121,69,-125,-120,-113,69,-112,69,69,69,-154,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'REF':([80,82,83,100,151,194,215,285,294,335,],[-21,-23,151,151,151,151,-22,151,151,151,]),'$end':([4,10,11,14,18,28,38,39,95,96,97,127,150,185,187,192,205,224,339,343,],[-8,-7,-6,-207,-1,0,-5,-9,-4,-207,-2,-144,-15,-3,-10,-24,-28,-143,-30,-29,]),'NULL':([2,19,29,50,52,56,60,68,86,90,105,107,108,110,111,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,188,195,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[78,78,78,78,78,-108,-107,78,78,78,-155,-106,-104,-114,-116,-105,78,78,-115,78,78,-118,-119,-123,-122,-124,-111,-117,-110,-121,78,-125,-120,-113,78,-112,78,78,78,-154,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'LOWER':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[43,43,-8,-7,-6,43,43,43,43,-5,-9,43,43,-108,-107,43,43,43,43,43,43,43,-155,-106,-104,-114,-116,-105,43,43,-115,43,43,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,43,-125,-120,-113,43,-112,43,43,-15,43,-10,43,43,-24,-154,-28,43,43,43,43,43,-143,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-30,-29,]),'LENGTH':([0,2,4,10,11,12,14,19,29,38,39,50,52,56,60,66,68,85,86,87,90,96,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,150,184,187,188,190,192,195,205,208,217,218,221,222,224,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,339,343,],[44,44,-8,-7,-6,44,44,44,44,-5,-9,44,44,-108,-107,44,44,44,44,44,44,44,-155,-106,-104,-114,-116,-105,44,44,-115,44,44,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,44,-125,-120,-113,44,-112,44,44,-15,44,-10,44,44,-24,-154,-28,44,44,44,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),'ID':([0,2,3,4,10,11,12,14,15,19,26,29,31,38,39,50,52,56,60,66,68,80,82,83,85,86,87,90,92,96,100,105,107,108,110,111,114,115,116,117,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,147,148,149,150,151,170,184,186,187,188,190,192,193,194,195,205,208,215,217,218,221,222,224,226,227,229,233,234,236,238,243,244,246,248,250,252,255,271,285,288,294,295,296,301,304,311,327,334,335,339,343,],[42,79,82,-8,-7,-6,79,42,82,79,82,79,123,-5,-9,79,79,-108,-107,79,79,-21,-23,82,172,79,79,79,82,42,82,-155,-106,-104,-114,-116,-105,79,79,-115,79,79,-144,-118,-119,-123,-122,-124,-111,-117,-110,-121,79,-125,-120,-113,79,-112,79,79,82,-15,82,82,79,82,-10,79,79,-24,82,82,-154,-28,79,-22,79,79,79,79,-143,79,79,82,79,79,79,79,79,79,79,82,79,79,79,82,82,79,82,79,79,79,79,82,42,42,82,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'closed_dyadic_operator':([27,],[106,]),'integer_literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,219,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,264,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'value_array_slice':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'identifier':([0,2,3,12,14,15,19,26,29,50,52,66,68,83,85,86,87,90,92,96,100,115,116,124,125,138,143,147,148,149,151,170,184,186,188,190,193,194,208,217,218,221,222,226,227,229,233,234,236,238,243,244,246,248,250,252,255,271,285,288,294,295,296,301,304,311,327,334,335,],[5,49,80,5,5,80,49,80,49,49,49,49,49,156,49,49,5,49,181,5,156,49,49,49,49,49,49,49,49,80,156,80,5,80,49,5,80,156,49,256,49,49,49,49,49,272,49,5,49,5,49,49,49,80,49,49,49,272,156,49,156,49,256,49,49,80,5,5,156,]),'dereferenced_reference':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'referenced_location':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'do_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'statement':([0,14,96,327,334,],[14,96,96,96,96,]),'label_id':([31,],[122,]),'value_array_element':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'newmode_statement':([0,14,96,327,334,],[10,10,10,10,10,]),'mode':([83,100,151,194,285,294,335,],[166,189,216,241,309,317,338,]),'monadic_operator':([2,19,29,50,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'discrete_mode_name':([83,100,151,194,217,229,271,285,294,296,335,],[161,161,161,161,161,161,161,161,161,161,161,]),'membership_operator':([51,],[134,]),'declaration':([3,170,],[84,84,]),'procedure_call':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'procedure_definition':([126,],[205,]),'expression':([2,19,29,50,68,86,90,115,116,124,125,147,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[58,101,121,128,146,174,178,198,199,201,201,213,232,253,259,259,266,259,268,270,275,277,280,283,201,290,292,293,312,280,259,320,324,]),'relational_operator':([51,],[136,]),'arithmetic_additive_operator':([27,64,209,],[118,144,144,]),'then_clause':([101,277,],[191,307,]),'operator2':([64,209,],[143,143,]),'result_spec':([310,],[328,]),'operand1':([2,19,29,50,68,86,90,115,116,124,125,138,147,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[64,64,64,64,64,64,64,64,64,64,64,209,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'composite_mode':([83,100,151,194,285,294,335,],[153,153,153,153,153,153,153,]),'assignment_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'boolean_literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'identifier_list':([3,15,26,149,170,186,193,248,311,],[83,100,104,215,83,100,104,285,285,]),'array_slice':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'bracketed_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'array_mode':([83,100,151,194,285,294,335,],[157,157,157,157,157,157,157,]),'empty_literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'synonym_list':([15,186,],[99,231,]),'for_control':([12,],[89,]),'control_part':([12,],[93,]),'declaration_list':([3,170,],[81,223,]),'synonym_statement':([0,14,96,327,334,],[11,11,11,11,11,]),'program':([0,],[28,]),'elsif_expression':([207,],[249,]),'statement_nullable':([14,96,327,334,],[97,185,333,337,]),'character_string_literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'declaration_statement':([0,14,96,327,334,],[38,38,38,38,38,]),'character_mode':([83,100,151,194,217,229,271,285,294,296,335,],[164,164,164,164,164,164,164,164,164,164,164,]),'operand3':([2,19,29,50,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,214,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'builtin_name':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'action_statement_list':([190,238,],[235,278,]),'literal_range':([217,218,222,296,],[261,263,267,261,]),'upper_bound':([243,295,],[281,318,]),'mode_definition':([26,193,],[103,103,]),'character_literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'exit_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'formal_parameter':([248,311,],[287,287,]),'statement_list':([0,],[18,]),'lower_bound':([115,217,218,222,296,],[197,258,258,258,258,]),'newmode_list':([26,193,],[102,240,]),'parenthesized_expression':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'integer_mode':([83,100,151,194,217,229,271,285,294,296,335,],[154,154,154,154,154,154,154,154,154,154,154,]),'action_statement':([0,12,14,87,96,184,190,234,238,327,334,],[4,87,4,87,4,87,234,87,234,4,4,]),'empty':([12,14,29,87,96,184,234,327,334,],[88,95,119,88,95,88,88,95,95,]),'expression_list':([115,147,244,],[196,212,282,]),'else_clause':([191,307,],[239,325,]),'arithmetic_multiplicative_operator':([27,76,210,],[113,148,148,]),'then_expression':([128,290,312,],[207,314,331,]),'boolean_mode':([83,100,151,194,217,229,271,285,294,296,335,],[167,167,167,167,167,167,167,167,167,167,167,]),'array_element':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'location':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'discrete_range_mode':([83,100,151,194,217,229,271,285,294,296,335,],[160,160,160,160,160,160,160,160,160,160,160,]),'if_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'operand0':([2,19,29,50,68,86,90,115,116,124,125,147,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'operator1':([51,],[138,]),'step_enumeration':([92,],[182,]),'parameter_list':([124,125,246,],[200,203,284,]),'string_mode':([83,100,151,194,285,294,335,],[163,163,163,163,163,163,163,]),'operand4':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[53,53,53,53,141,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'conditional_expression':([2,19,29,50,68,86,90,115,116,124,125,147,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'mode_name':([83,100,151,194,285,294,335,],[162,162,162,162,162,162,162,]),'string_slice':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'result':([29,],[120,]),'string_length':([219,],[265,]),'range_enumeration':([92,],[180,]),'literal':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'return_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'formal_parameter_list':([248,311,],[286,330,]),'initialization':([166,],[220,]),'index_mode_list':([217,296,],[257,319,]),'iteration':([92,],[183,]),'string_element':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'left_element':([86,],[175,]),'synonym_definition':([15,186,],[98,98,]),'else_expression':([207,249,],[251,289,]),'reference_mode':([83,100,151,194,285,294,335,],[155,155,155,155,155,155,155,]),'string_concatenation_operator':([27,64,209,],[109,142,142,]),'action_statement_nullable':([12,87,184,234,],[91,176,230,276,]),'result_action':([0,12,14,85,87,96,184,190,234,238,327,334,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'index_mode':([217,296,],[260,260,]),'action':([0,12,14,85,87,96,184,190,234,238,327,334,],[45,45,45,171,45,45,45,45,45,45,45,45,]),'array_location':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[27,67,27,27,67,67,67,67,145,67,27,67,27,67,27,67,67,67,67,67,67,67,67,27,67,27,67,67,67,67,67,67,67,67,27,67,27,67,67,67,67,67,67,67,67,67,67,67,27,27,]),'while_control':([12,89,],[94,177,]),'start_element':([86,],[173,]),'builtin_call':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'call_action':([0,2,12,14,19,29,50,52,66,68,85,86,87,90,96,115,116,124,125,138,143,147,148,184,188,190,208,217,218,221,222,226,227,233,234,236,238,243,244,246,250,252,255,288,295,296,301,304,327,334,],[34,72,34,34,72,72,72,72,72,72,34,72,34,72,34,72,72,72,72,72,72,72,72,34,72,34,72,72,72,72,72,72,72,72,34,72,34,72,72,72,72,72,72,72,72,72,72,72,34,34,]),'operand2':([2,19,29,50,68,86,90,115,116,124,125,138,143,147,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[76,76,76,76,76,76,76,76,76,76,76,76,210,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'element_mode':([294,],[316,]),'primitive_value':([2,19,29,50,52,68,86,90,115,116,124,125,138,143,147,148,188,208,217,218,221,222,226,227,233,236,243,244,246,250,252,255,288,295,296,301,304,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'procedure_statement':([0,14,96,327,334,],[39,39,39,39,39,]),'right_element':([226,],[269,]),'assigning_operator':([27,],[116,]),'discrete_mode':([83,100,151,194,217,229,271,285,294,296,335,],[168,168,168,168,262,273,306,168,168,262,168,]),'step_value':([270,],[303,]),'end_value':([270,302,303,322,],[305,321,323,332,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',176),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',180),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',181),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',190),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',201),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',205),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',206),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',220),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',227),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',228),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',233),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',236),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',240),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',255),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',259),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',263),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',267),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',281),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',285),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',289),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',296),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',308),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',312),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',316),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',320),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',321),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',330),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',331),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',335),
  ('location -> identifier','location',1,'p_location','Parser.py',346),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',347),
  ('location -> string_element','location',1,'p_location','Parser.py',348),
  ('location -> string_slice','location',1,'p_location','Parser.py',349),
  ('location -> array_element','location',1,'p_location','Parser.py',350),
  ('location -> array_slice','location',1,'p_location','Parser.py',351),
  ('location -> call_action','location',1,'p_location','Parser.py',352),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',356),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',360),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',364),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',368),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',372),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',376),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',380),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',384),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',385),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',392),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',396),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',407),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',419),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',420),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',424),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',428),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',432),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',433),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',448),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',449),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',456),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',457),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',464),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',465),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',473),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',474),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',505),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',514),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',515),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',524),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',539),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',562),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',566),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',570),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',578),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',587),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',591),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',595),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',606),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',607),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',612),
  ('action -> assignment_action','action',1,'p_action','Parser.py',613),
  ('action -> call_action','action',1,'p_action','Parser.py',614),
  ('action -> exit_action','action',1,'p_action','Parser.py',615),
  ('action -> result_action','action',1,'p_action','Parser.py',616),
  ('action -> return_action','action',1,'p_action','Parser.py',617),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',626),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',630),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',631),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',641),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',646),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',652),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',663),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',675),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',676),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',693),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',694),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',698),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',699),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',715),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',716),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',720),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',721),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',730),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',734),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',738),
  ('result -> expression','result',1,'p_result','Parser.py',742),
  ('result -> empty','result',1,'p_result','Parser.py',743),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',746),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',754),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',755),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',762),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',763),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',764),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',768),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',780),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',792),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',796),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',800),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',801),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',808),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',814),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT CHARS OD INT WHILE LENGTH READ TRUE PROC IN END BOOL LOC PRINT ARRAY RETURNS LOWER IF CHAR ASC BY ELSE FALSE DOWN EXIT NULL UPPER FOR TO RETURN DO DCL RESULT ELSIF THEN FI TYPE ABS NUM SYN REFprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'TYPE':([0,2,8,24,27,40,41,87,107,127,158,174,198,245,318,331,341,342,],[1,-5,-8,-9,1,-7,-6,-144,1,-24,-28,-15,-10,-143,1,1,-30,-29,]),'RETURN':([0,2,8,24,27,33,40,41,87,107,110,125,127,158,167,174,195,198,236,239,245,318,331,341,342,],[4,-5,-8,-9,4,4,-7,-6,-144,4,4,4,-24,-28,4,-15,4,-10,4,4,-143,4,4,-30,-29,]),'THEN':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,121,145,146,151,160,163,211,212,215,216,218,222,223,246,249,283,288,291,293,310,311,312,313,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,195,-99,213,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,195,-87,213,-82,-76,-136,-88,213,]),'READ':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[17,-5,17,-8,17,-9,17,17,17,-7,-6,17,-108,-107,17,17,17,-144,-105,-155,-124,-122,17,-123,-106,17,-104,17,17,17,17,17,17,17,-24,17,-117,-118,-116,-110,17,-111,-114,-125,-113,-115,-119,-112,17,-120,17,-121,-154,-28,17,-15,17,-10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-143,17,17,17,17,17,17,17,17,17,17,17,-30,-29,]),'ID':([0,1,2,4,8,11,16,24,27,33,34,35,38,40,41,46,49,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,114,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,185,194,195,197,198,200,207,213,217,219,220,221,225,226,228,229,231,234,236,239,241,243,245,247,248,253,254,261,267,290,294,297,299,304,307,308,318,331,332,341,342,],[26,46,-5,71,-8,46,71,-9,26,71,46,71,46,-7,-6,-23,-21,71,-108,-107,71,71,71,-144,-105,-155,-124,-122,71,-123,-106,71,-104,71,26,71,71,71,46,46,46,202,71,-24,46,46,46,71,-117,-118,-116,-110,71,-111,-114,-125,-113,-115,-119,-112,71,-120,71,-121,-154,-28,71,-15,46,46,71,46,-10,71,-22,71,71,71,46,71,71,46,71,71,71,71,71,71,71,71,-143,71,71,71,71,46,46,71,46,71,71,71,46,71,26,26,46,-30,-29,]),'CHARS':([46,49,119,124,130,185,207,261,307,332,],[-23,-21,182,182,182,182,-22,182,182,182,]),'CONCAT':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,202,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,91,-70,-168,-83,-72,-23,-71,-68,-66,-103,-127,-131,-101,-138,-129,-126,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,91,-142,-97,-73,-99,-109,-181,-171,-23,91,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'MINUS':([3,4,5,7,10,13,16,19,21,25,26,30,31,35,39,53,54,55,57,58,59,60,62,63,65,66,67,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,88,90,91,92,94,95,97,98,99,100,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,148,149,150,151,153,160,163,200,202,211,212,213,215,216,217,218,219,221,222,223,225,228,229,231,234,241,243,246,247,248,249,253,254,279,290,293,297,299,304,308,310,311,],[-67,69,-169,-69,95,-70,69,-168,-83,-72,-23,-71,-68,69,-66,-103,-127,-131,-101,-138,-129,-126,69,-130,-133,-100,-72,-102,-23,-132,-134,69,-139,-137,-66,-140,-95,-141,-128,95,-142,-97,-105,-155,-124,-122,69,-123,-106,69,-104,-73,69,69,69,69,69,-117,-118,-116,-110,69,-111,-114,-125,-113,-115,-119,-112,-99,69,-120,69,-121,-109,-154,-181,-171,69,-23,95,-86,69,-98,-96,69,-79,69,69,-180,-170,69,69,69,69,69,69,69,-74,69,69,-135,69,69,-66,69,-82,69,69,69,69,-76,-136,]),'EXIT':([0,2,8,24,27,33,40,41,87,107,110,125,127,158,167,174,195,198,236,239,245,318,331,341,342,],[11,-5,-8,-9,11,11,-7,-6,-144,11,11,11,-24,-28,11,-15,11,-10,11,11,-143,11,11,-30,-29,]),'CHAR':([46,49,119,124,130,185,207,226,234,261,267,307,308,332,],[-23,-21,183,183,183,183,-22,183,183,183,183,183,183,183,]),'LBRACKET':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,67,71,72,73,76,77,78,79,81,82,84,100,151,160,163,182,188,202,212,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,98,-70,-168,-83,-72,-23,-71,-68,126,131,-127,-131,98,-138,-129,-126,-130,-133,-72,-23,-132,-134,-139,-137,126,-140,-141,-128,-142,-73,98,-181,-171,232,234,-23,-86,-79,-180,-170,-74,-135,126,-82,-76,-136,]),'BY':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,264,288,293,310,311,312,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,297,-87,-82,-76,-136,-88,]),'NOTEQ':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,141,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'AND':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,143,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'FI':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,87,100,110,116,145,151,160,163,165,196,211,212,215,216,218,222,223,236,237,240,245,246,249,251,280,281,288,289,292,293,309,310,311,312,329,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-144,-73,-206,-167,-99,-109,-181,-171,-166,238,-94,-86,-98,-96,-79,-180,-170,-206,-161,282,-143,-74,-135,288,-165,-162,-87,312,-90,-82,-164,-76,-136,-88,-163,]),'WHILE':([3,5,7,13,19,21,30,31,33,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,111,145,151,160,163,169,170,171,181,183,184,189,191,192,193,211,212,215,216,218,222,223,246,249,265,288,293,298,302,303,305,310,311,312,321,322,324,334,],[-67,-169,-69,-70,-168,-83,-71,-68,113,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,113,-99,-109,-181,-171,-194,-195,-196,-48,-49,-44,-43,-45,-47,-42,-94,-86,-98,-96,-79,-180,-170,-74,-135,-204,-87,-82,-200,-203,-51,-50,-76,-136,-88,-202,-198,-199,-197,]),'TO':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,264,288,293,300,301,310,311,312,320,323,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,299,-87,-82,299,299,-76,-136,-88,-201,299,]),'RPAREN':([3,5,7,13,19,21,30,31,46,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,105,109,144,145,151,159,160,161,163,164,175,176,179,180,181,183,184,186,187,189,190,191,192,193,211,212,215,216,218,222,223,233,246,249,257,259,260,262,268,272,288,293,296,303,305,306,310,311,312,315,319,325,326,327,336,339,],[-67,-169,-69,-70,-168,-83,-71,-68,-23,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,160,163,212,-99,-109,-182,-181,222,-171,223,-40,-38,-37,-56,-48,-49,-44,-57,-41,-43,-39,-45,-47,-42,-94,-86,-98,-96,-79,-180,-170,-55,-74,-135,-54,-31,295,-183,303,305,-87,-82,-34,-51,-50,-58,-76,-136,-88,-32,-33,-52,-65,-60,340,343,]),'FOR':([33,],[114,]),'LOC':([46,175,176,179,180,181,183,184,186,187,189,190,191,192,193,233,296,303,305,306,326,327,336,],[-23,-40,-38,-37,-56,-48,-49,-44,-57,-41,-43,-39,-45,-47,-42,-55,319,-51,-50,-58,-65,-60,339,]),'SCONST':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[84,84,84,84,-108,-107,84,84,-105,-155,-124,-122,84,-123,-106,84,-104,84,84,84,84,84,-117,-118,-116,-110,84,-111,-114,-125,-113,-115,-119,-112,84,-120,84,-121,-154,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LTEQUAL':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,142,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'ASSIGN':([3,5,7,10,13,19,21,25,26,30,31,39,46,49,50,71,78,88,89,91,92,93,95,96,97,99,100,101,124,160,163,172,175,176,177,179,180,181,183,184,186,187,189,190,191,192,193,199,202,207,218,222,223,233,246,293,303,305,306,310,326,327,],[-67,-169,-69,90,-70,-168,-83,-72,-23,-71,-68,-66,-23,-21,130,-23,-66,-105,-156,-124,-122,-158,-123,153,-106,-104,-73,-157,200,-181,-171,225,-40,-38,229,-37,-56,-48,-49,-44,-57,-41,-43,-39,-45,-47,-42,243,-23,-22,-79,-180,-170,-55,-74,-82,-51,-50,-58,-76,-65,-60,]),'LPAREN':([4,12,16,17,18,22,26,28,29,35,36,42,44,46,62,64,69,71,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,157,176,178,181,183,184,187,189,191,192,193,200,202,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,265,266,277,279,290,297,299,302,303,304,305,308,317,],[62,-179,62,-178,-176,-173,105,-174,109,62,-172,-177,-175,-23,62,-108,-107,105,62,62,-105,-155,-124,-122,62,-123,-106,62,-104,62,62,62,62,62,-117,-118,-116,-110,62,-111,-114,-125,-113,-115,-119,-112,62,-120,62,-121,-154,220,228,231,-48,-49,-44,-46,-43,-45,-47,-42,62,105,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,228,-46,228,-46,62,62,62,228,-51,62,-50,62,332,]),'RESULT':([0,2,8,24,27,33,40,41,87,107,110,125,127,158,167,174,195,198,236,239,245,318,331,341,342,],[16,-5,-8,-9,16,16,-7,-6,-144,16,16,16,-24,-28,16,-15,16,-10,16,16,-143,16,16,-30,-29,]),'$end':([2,8,24,27,37,40,41,45,87,106,107,108,127,158,162,174,198,245,341,342,],[-5,-8,-9,-206,0,-7,-6,-1,-144,-4,-206,-2,-24,-28,-3,-15,-10,-143,-30,-29,]),'COLON':([3,5,7,13,19,21,26,30,31,39,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,154,156,160,163,203,205,209,211,212,215,216,218,222,223,246,249,269,270,279,288,293,310,311,312,],[-67,-169,-69,-70,-168,-83,104,-71,-68,125,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-53,219,-181,-171,-77,247,248,-94,-86,-98,-96,-79,-180,-170,-74,-135,-53,304,-66,-87,-82,-76,-136,-88,]),'LOWER':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[18,-5,18,-8,18,-9,18,18,18,-7,-6,18,-108,-107,18,18,18,-144,-105,-155,-124,-122,18,-123,-106,18,-104,18,18,18,18,18,18,18,-24,18,-117,-118,-116,-110,18,-111,-114,-125,-113,-115,-119,-112,18,-120,18,-121,-154,-28,18,-15,18,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-143,18,18,18,18,18,18,18,18,18,18,18,-30,-29,]),'SEMI':([3,4,5,6,7,9,13,14,15,19,20,21,23,25,30,31,32,43,46,47,48,51,52,53,54,55,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,102,103,111,112,117,118,120,122,123,145,151,152,160,163,166,168,169,170,171,173,175,176,177,179,180,181,183,184,186,187,189,190,191,192,193,201,206,208,211,212,215,216,218,222,223,230,233,235,238,242,244,246,249,263,265,271,282,284,288,293,295,298,302,303,305,306,310,311,312,316,321,322,324,326,327,334,337,338,340,343,],[-67,-206,-169,-151,-69,87,-70,-146,-145,-168,-148,-83,-152,-147,-71,-68,-149,-150,-23,127,-25,-85,-186,-103,-127,-131,-185,-101,-138,-129,-126,-84,-130,-133,-100,-72,-187,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-184,-188,-192,167,-193,174,-16,-11,198,-99,-109,-153,-181,-171,-191,-205,-194,-195,-196,-190,-40,-38,-19,-37,-56,-48,-49,-44,-57,-41,-43,-39,-45,-47,-42,245,-26,-27,-94,-86,-98,-96,-79,-180,-170,-18,-55,-17,-160,-12,-14,-74,-135,-189,-204,-20,-159,-13,-87,-82,318,-200,-203,-51,-50,-58,-76,-136,-88,331,-202,-198,-199,-65,-60,-197,341,342,-36,-35,]),'TRUE':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[58,58,58,58,-108,-107,58,58,-105,-155,-124,-122,58,-123,-106,58,-104,58,58,58,58,58,-117,-118,-116,-110,58,-111,-114,-125,-113,-115,-119,-112,58,-120,58,-121,-154,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'OR':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,140,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'ELSIF':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,87,100,110,116,145,151,160,163,165,196,211,212,214,215,216,218,222,223,236,237,245,246,249,250,252,280,288,293,309,310,311,312,314,330,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-144,-73,-206,-167,-99,-109,-181,-171,-166,241,-94,-86,253,-98,-96,-79,-180,-170,-206,-161,-143,-74,-135,-89,290,-165,-87,-82,241,-76,-136,-88,-91,-92,]),'ICONST':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,232,234,241,243,247,248,253,254,290,297,299,304,308,],[77,77,77,77,-108,-107,77,77,-105,-155,-124,-122,77,-123,-106,77,-104,77,77,77,77,77,-117,-118,-116,-110,77,-111,-114,-125,-113,-115,-119,-112,77,-120,77,-121,-154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'PLUS':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,202,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,92,-70,-168,-83,-72,-23,-71,-68,-66,-103,-127,-131,-101,-138,-129,-126,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,92,-142,-97,-73,-99,-109,-181,-171,-23,92,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'NUM':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[28,-5,28,-8,28,-9,28,28,28,-7,-6,28,-108,-107,28,28,28,-144,-105,-155,-124,-122,28,-123,-106,28,-104,28,28,28,28,28,28,28,-24,28,-117,-118,-116,-110,28,-111,-114,-125,-113,-115,-119,-112,28,-120,28,-121,-154,-28,28,-15,28,-10,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'RBRACKET':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,154,155,160,163,181,183,184,189,191,192,193,203,204,209,210,211,212,215,216,218,222,223,246,249,255,256,257,258,273,274,275,276,277,278,285,286,287,288,293,303,305,310,311,312,325,328,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-80,218,-181,-171,-48,-49,-44,-43,-45,-47,-42,-75,246,-80,249,-94,-86,-98,-96,-79,-180,-170,-74,-135,-80,-81,-54,293,-59,306,307,-64,-63,-61,-78,310,311,-87,-82,-51,-50,-76,-136,-88,-52,-62,]),'FALSE':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[76,76,76,76,-108,-107,76,76,-105,-155,-124,-122,76,-123,-106,76,-104,76,76,76,76,76,-117,-118,-116,-110,76,-111,-114,-125,-113,-115,-119,-112,76,-120,76,-121,-154,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'OD':([33,87,110,115,116,165,167,224,245,],[-206,-144,-206,173,-167,-166,-206,263,-143,]),'MODULO':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,84,85,100,145,151,160,163,202,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,97,-70,-168,-83,-72,-23,-71,-68,-66,-103,-127,-131,-101,-138,-129,-126,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,97,-141,-128,-142,-97,-73,-99,-109,-181,-171,-23,-86,-98,97,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'LESS':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,133,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'NULL':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[81,81,81,81,-108,-107,81,81,-105,-155,-124,-122,81,-123,-106,81,-104,81,81,81,81,81,-117,-118,-116,-110,81,-111,-114,-125,-113,-115,-119,-112,81,-120,81,-121,-154,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'GREATER':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,134,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'BOOL':([46,49,119,124,130,185,207,226,234,261,267,307,308,332,],[-23,-21,181,181,181,181,-22,181,181,181,181,181,181,181,]),'DO':([0,2,8,24,27,33,40,41,87,107,110,125,127,158,167,174,195,198,236,239,245,318,331,341,342,],[33,-5,-8,-9,33,33,-7,-6,-144,33,33,33,-24,-28,33,-15,33,-10,33,33,-143,33,33,-30,-29,]),'DCL':([0,2,8,24,27,40,41,87,107,127,158,174,198,245,318,331,341,342,],[34,-5,-8,-9,34,-7,-6,-144,34,-24,-28,-15,-10,-143,34,34,-30,-29,]),'ARRAY':([46,49,119,124,130,185,207,261,307,332,],[-23,-21,188,188,188,188,-22,188,188,188,]),'UPPER':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[44,-5,44,-8,44,-9,44,44,44,-7,-6,44,-108,-107,44,44,44,-144,-105,-155,-124,-122,44,-123,-106,44,-104,44,44,44,44,44,44,44,-24,44,-117,-118,-116,-110,44,-111,-114,-125,-113,-115,-119,-112,44,-120,44,-121,-154,-28,44,-15,44,-10,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),'IF':([0,2,4,8,16,24,27,33,35,40,41,62,75,87,90,94,98,105,107,109,110,113,125,126,127,131,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[35,-5,75,-8,75,-9,35,35,75,-7,-6,75,75,-144,-155,75,75,75,35,75,35,75,35,75,-24,75,-154,-28,35,-15,35,-10,75,75,75,75,75,75,75,75,75,75,35,35,75,75,-143,75,75,75,75,75,75,75,75,75,35,35,-30,-29,]),'TIMES':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,84,85,100,145,151,160,163,202,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,99,-70,-168,-83,-72,-23,-71,-68,-66,-103,-127,-131,-101,-138,-129,-126,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,99,-141,-128,-142,-97,-73,-99,-109,-181,-171,-23,-86,-98,99,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'ABS':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[36,-5,36,-8,36,-9,36,36,36,-7,-6,36,-108,-107,36,36,36,-144,-105,-155,-124,-122,36,-123,-106,36,-104,36,36,36,36,36,36,36,-24,36,-117,-118,-116,-110,36,-111,-114,-125,-113,-115,-119,-112,36,-120,36,-121,-154,-28,36,-15,36,-10,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-143,36,36,36,36,36,36,36,36,36,36,36,-30,-29,]),'ASC':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[22,-5,22,-8,22,-9,22,22,22,-7,-6,22,-108,-107,22,22,22,-144,-105,-155,-124,-122,22,-123,-106,22,-104,22,22,22,22,22,22,22,-24,22,-117,-118,-116,-110,22,-111,-114,-125,-113,-115,-119,-112,22,-120,22,-121,-154,-28,22,-15,22,-10,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-143,22,22,22,22,22,22,22,22,22,22,22,-30,-29,]),'COMMA':([3,5,7,13,19,21,30,31,46,48,49,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,120,122,145,151,154,159,160,163,175,176,177,179,180,181,183,184,186,187,189,190,191,192,193,208,209,211,212,215,216,218,222,223,230,233,244,246,249,255,257,259,271,276,277,278,284,288,293,296,303,305,306,310,311,312,319,325,326,327,],[-67,-169,-69,-70,-168,-83,-71,-68,-23,128,129,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,194,197,-99,-109,217,221,-181,-171,-40,-38,-19,-37,-56,-48,-49,-44,-57,-41,-43,-39,-45,-47,-42,-27,217,-94,-86,-98,-96,-79,-180,-170,-18,-55,-14,-74,-135,217,-54,294,-20,-64,-63,308,-13,-87,-82,-34,-51,-50,-58,-76,-136,-88,-33,-52,-65,-60,]),'SYN':([0,2,8,24,27,40,41,87,107,127,158,174,198,245,318,331,341,342,],[38,-5,-8,-9,38,-7,-6,-144,38,-24,-28,-15,-10,-143,38,38,-30,-29,]),'INT':([46,49,119,124,130,185,207,226,234,261,267,307,308,332,],[-23,-21,192,192,192,192,-22,192,192,192,192,192,192,192,]),'PROC':([104,],[157,]),'CCONST':([4,16,35,62,64,69,74,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[79,79,79,79,-108,-107,79,79,-105,-155,-124,-122,79,-123,-106,79,-104,79,79,79,79,79,-117,-118,-116,-110,79,-111,-114,-125,-113,-115,-119,-112,79,-120,79,-121,-154,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'END':([2,8,24,40,41,87,106,107,127,158,162,174,198,245,318,331,333,335,341,342,],[-5,-8,-9,-7,-6,-144,-4,-206,-24,-28,-3,-15,-10,-143,-206,-206,337,338,-30,-29,]),'DOWN':([3,5,7,13,19,21,30,31,46,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,172,211,212,215,216,218,222,223,246,249,264,288,293,300,310,311,312,320,],[-67,-169,-69,-70,-168,-83,-71,-68,-23,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,227,-94,-86,-98,-96,-79,-180,-170,-74,-135,301,-87,-82,323,-76,-136,-88,-201,]),'REF':([46,49,119,124,130,185,207,261,307,332,],[-23,-21,185,185,185,185,-22,185,185,185,]),'LENGTH':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[42,-5,42,-8,42,-9,42,42,42,-7,-6,42,-108,-107,42,42,42,-144,-105,-155,-124,-122,42,-123,-106,42,-104,42,42,42,42,42,42,42,-24,42,-117,-118,-116,-110,42,-111,-114,-125,-113,-115,-119,-112,42,-120,42,-121,-154,-28,42,-15,42,-10,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-143,42,42,42,42,42,42,42,42,42,42,42,-30,-29,]),'NOT':([4,16,35,62,75,88,90,91,92,94,95,97,98,99,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[64,64,64,64,64,-105,-155,-124,-122,64,-123,-106,64,-104,64,64,64,64,64,-117,-118,-116,-110,64,-111,-114,-125,-113,-115,-119,-112,64,-120,64,-121,-154,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ELSE':([3,5,7,13,19,21,30,31,51,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,87,100,110,116,145,151,160,163,165,196,211,212,214,215,216,218,222,223,236,237,245,246,249,250,252,280,288,293,309,310,311,312,314,330,],[-67,-169,-69,-70,-168,-83,-71,-68,-85,-103,-127,-131,-101,-138,-129,-126,-84,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-144,-73,-206,-167,-99,-109,-181,-171,-166,239,-94,-86,254,-98,-96,-79,-180,-170,-206,-161,-143,-74,-135,-89,254,-165,-87,-82,239,-76,-136,-88,-91,-92,]),'GTEQUAL':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,132,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'EQUAL':([3,5,7,13,19,21,30,31,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,211,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-103,-127,-131,-101,-138,-129,-126,138,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,-94,-86,-98,-96,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'IN':([3,5,7,13,19,21,30,31,46,53,54,55,57,58,59,60,61,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,83,84,85,100,145,151,160,163,172,211,212,215,216,218,222,223,227,246,249,279,293,310,311,],[-67,-169,-69,-70,-168,-83,-71,-68,-23,-103,-127,-131,-101,-138,-129,-126,139,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,-95,-141,-128,-93,-142,-97,-73,-99,-109,-181,-171,226,-94,-86,-98,-96,-79,-180,-170,267,-74,-135,-66,-82,-76,-136,]),'RETURNS':([295,],[317,]),'PRINT':([0,2,4,8,16,24,27,33,35,40,41,62,64,69,74,75,86,87,88,90,91,92,94,95,97,98,99,105,107,109,110,113,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,153,158,167,174,195,198,200,213,217,219,221,225,228,229,231,234,236,239,241,243,245,247,248,253,254,290,297,299,304,308,318,331,341,342,],[12,-5,12,-8,12,-9,12,12,12,-7,-6,12,-108,-107,12,12,12,-144,-105,-155,-124,-122,12,-123,-106,12,-104,12,12,12,12,12,12,12,-24,12,-117,-118,-116,-110,12,-111,-114,-125,-113,-115,-119,-112,12,-120,12,-121,-154,-28,12,-15,12,-10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-143,12,12,12,12,12,12,12,12,12,12,12,-30,-29,]),'DIVIDE':([3,5,7,10,13,19,21,25,26,30,31,39,53,54,55,57,58,59,60,63,65,66,67,70,71,72,73,76,77,78,79,80,81,82,84,85,100,145,151,160,163,202,212,215,216,218,222,223,246,249,279,293,310,311,],[-67,-169,-69,88,-70,-168,-83,-72,-23,-71,-68,-66,-103,-127,-131,-101,-138,-129,-126,-130,-133,-100,-72,-102,-23,-132,-134,-139,-137,-66,-140,88,-141,-128,-142,-97,-73,-99,-109,-181,-171,-23,-86,-98,88,-79,-180,-170,-74,-135,-66,-82,-76,-136,]),'ARROW':([3,4,5,7,10,13,16,19,21,25,26,30,31,35,39,57,62,64,67,69,71,74,75,78,88,90,91,92,94,95,97,98,99,100,105,109,113,126,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,151,153,160,163,200,202,213,217,218,219,221,222,223,225,228,229,231,234,241,243,246,247,248,253,254,279,290,293,297,299,304,308,310,],[-67,86,-169,-69,100,-70,86,-168,-83,-72,-23,-71,-68,86,-66,100,86,-108,-72,-107,-23,86,86,-66,-105,-155,-124,-122,86,-123,-106,86,-104,-73,86,86,86,86,86,-117,-118,-116,-110,86,-111,-114,-125,-113,-115,-119,-112,86,-120,86,-121,100,-154,-181,-171,86,-23,86,86,-79,86,86,-180,-170,86,86,86,86,86,86,86,-74,86,86,86,86,-66,86,-82,86,86,86,86,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'iteration':([114,],[169,]),'mode_name':([119,124,130,185,261,307,332,],[179,179,179,179,179,179,179,]),'referenced_location':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'range_enumeration':([114,],[171,]),'boolean_literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'return_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'array_location':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[10,57,57,10,10,57,57,57,57,151,57,57,57,10,57,10,57,10,57,57,57,57,57,10,10,57,57,57,57,57,57,57,57,57,57,10,10,57,57,57,57,57,57,57,57,57,57,57,10,10,]),'start_element':([126,],[204,]),'left_element':([126,],[205,]),'for_control':([33,],[111,]),'formal_parameter':([220,294,],[259,259,]),'then_clause':([121,283,],[196,309,]),'control_part':([33,],[112,]),'parenthesized_expression':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'array_element':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'else_expression':([214,252,],[251,289,]),'bracketed_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'action_statement_nullable':([33,110,167,236,],[115,165,224,280,]),'synonym_list':([38,197,],[123,242,]),'integer_literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,232,234,241,243,247,248,253,254,290,297,299,304,308,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,273,63,63,63,63,63,63,63,63,63,63,63,63,]),'procedure_call':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'declaration_list':([34,194,],[118,235,]),'discrete_range_mode':([119,124,130,185,226,234,261,267,307,308,332,],[191,191,191,191,191,191,191,191,191,191,191,]),'program':([0,],[37,]),'operator2':([83,211,],[149,149,]),'empty_literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'do_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'call_action':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[25,67,67,25,25,67,67,67,67,67,67,67,67,25,67,25,67,25,67,67,67,67,67,25,25,67,67,67,67,67,67,67,67,67,67,25,25,67,67,67,67,67,67,67,67,67,67,67,25,25,]),'empty':([4,27,33,107,110,167,236,318,331,],[68,106,116,106,116,116,116,106,106,]),'statement':([0,27,107,318,331,],[27,107,107,107,107,]),'mode':([119,124,130,185,261,307,332,],[177,199,208,233,296,326,336,]),'upper_bound':([219,304,],[258,325,]),'builtin_name':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'discrete_mode_name':([119,124,130,185,226,234,261,267,307,308,332,],[178,178,178,178,178,178,178,178,178,178,178,]),'element_mode':([307,],[327,]),'string_concatenation_operator':([10,83,211,],[93,150,150,]),'array_slice':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'closed_dyadic_operator':([10,],[96,]),'string_slice':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'step_value':([264,],[300,]),'identifier':([0,1,4,11,16,27,33,34,35,38,62,74,75,86,94,98,105,107,109,110,113,114,119,124,125,126,128,129,130,131,136,147,149,167,185,194,195,197,200,213,217,219,220,221,225,226,228,229,231,234,236,239,241,243,247,248,253,254,261,267,290,294,297,299,304,307,308,318,331,332,],[39,49,78,102,78,39,39,49,78,49,78,78,78,78,78,78,78,39,78,39,78,172,187,187,78,78,49,49,187,78,78,78,78,39,187,49,39,49,78,78,78,78,49,78,78,266,78,78,78,279,39,39,78,78,78,78,78,78,187,266,78,49,78,78,78,187,279,39,39,187,]),'operand2':([4,16,35,62,75,94,98,105,109,113,126,131,136,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[80,80,80,80,80,80,80,80,80,80,80,80,80,216,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'mode_definition':([1,128,],[48,48,]),'synonym_statement':([0,27,107,318,331,],[41,41,41,41,41,]),'parameter_list':([105,109,221,],[161,164,262,]),'initialization':([177,],[230,]),'value_array_slice':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'while_control':([33,111,],[117,166,]),'operand1':([4,16,35,62,75,94,98,105,109,113,126,131,136,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[83,83,83,83,83,83,83,83,83,83,83,83,211,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'declaration':([34,194,],[120,120,]),'assigning_operator':([10,],[94,]),'boolean_mode':([119,124,130,185,226,234,261,267,307,308,332,],[189,189,189,189,189,189,189,189,189,189,189,]),'statement_list':([0,],[45,]),'procedure_definition':([104,],[158,]),'operand3':([4,16,35,62,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[85,85,85,85,85,85,85,85,85,85,85,85,85,215,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'formal_parameter_list':([220,294,],[260,315,]),'conditional_expression':([4,16,35,62,75,94,98,105,109,113,126,131,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'declaration_statement':([0,27,107,318,331,],[2,2,2,2,2,]),'dereferenced_reference':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'arithmetic_additive_operator':([10,83,211,],[89,148,148,]),'builtin_call':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([4,16,35,62,75,94,98,105,109,113,126,131,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[52,103,121,144,146,152,154,159,159,168,203,209,244,250,255,257,159,264,269,271,269,269,283,284,285,287,291,292,313,320,321,257,269,]),'primitive_value':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'step_enumeration':([114,],[170,]),'expression_list':([98,131,217,],[155,210,256,]),'value_array_element':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'result':([4,],[56,]),'action_statement':([0,27,33,107,110,167,195,236,239,318,331,],[8,8,110,8,110,110,236,110,236,8,8,]),'relational_operator':([61,],[137,]),'result_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'newmode_list':([1,128,],[47,206,]),'character_mode':([119,124,130,185,226,234,261,267,307,308,332,],[184,184,184,184,184,184,184,184,184,184,184,]),'right_element':([247,],[286,]),'array_mode':([119,124,130,185,261,307,332,],[186,186,186,186,186,186,186,]),'arithmetic_multiplicative_operator':([10,80,216,],[101,147,147,]),'result_spec':([295,],[316,]),'assignment_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'index_mode_list':([234,308,],[275,328,]),'membership_operator':([61,],[135,]),'operand0':([4,16,35,62,75,94,98,105,109,113,126,131,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'literal_range':([228,231,234,308,],[268,272,276,276,]),'elsif_expression':([214,],[252,]),'end_value':([264,300,301,323,],[298,322,324,334,]),'location':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'exit_action':([0,27,33,107,110,125,167,195,236,239,318,331,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'operand4':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[66,66,66,66,145,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'procedure_statement':([0,27,107,318,331,],[24,24,24,24,24,]),'action':([0,27,33,107,110,125,167,195,236,239,318,331,],[9,9,9,9,9,201,9,9,9,9,9,9,]),'composite_mode':([119,124,130,185,261,307,332,],[175,175,175,175,175,175,175,]),'discrete_mode':([119,124,130,185,226,234,261,267,307,308,332,],[176,176,176,176,265,277,176,302,176,277,176,]),'action_statement_list':([195,239,],[237,281,]),'character_literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string_element':([0,4,16,27,33,35,62,74,75,86,94,98,105,107,109,110,113,125,126,131,136,147,149,167,195,200,213,217,219,221,225,228,229,231,234,236,239,241,243,247,248,253,254,290,297,299,304,308,318,331,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'string_mode':([119,124,130,185,261,307,332,],[180,180,180,180,180,180,180,]),'character_string_literal':([4,16,35,62,74,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'then_expression':([146,291,313,],[214,314,330,]),'lower_bound':([98,228,231,234,308,],[156,270,270,270,270,]),'string_length':([232,],[274,]),'synonym_definition':([38,197,],[122,122,]),'monadic_operator':([4,16,35,62,75,94,98,105,109,113,126,131,136,147,149,200,213,217,219,221,225,228,229,231,234,241,243,247,248,253,254,290,297,299,304,308,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'integer_mode':([119,124,130,185,226,234,261,267,307,308,332,],[193,193,193,193,193,193,193,193,193,193,193,]),'identifier_list':([1,34,38,128,129,194,197,220,294,],[50,119,124,50,207,119,124,261,261,]),'newmode_statement':([0,27,107,318,331,],[40,40,40,40,40,]),'operator1':([61,],[136,]),'reference_mode':([119,124,130,185,261,307,332,],[190,190,190,190,190,190,190,]),'statement_nullable':([27,107,318,331,],[108,162,333,335,]),'else_clause':([196,309,],[240,329,]),'index_mode':([234,308,],[278,278,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',416),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',420),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',428),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',433),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',437),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',441),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',442),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',458),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',465),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',466),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',473),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',474),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',482),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',483),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',490),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',491),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',492),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',503),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',504),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',505),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',509),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',510),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',514),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',518),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',519),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',533),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',534),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',538),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',543),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',548),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',560),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',567),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',571),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',575),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',579),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',587),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',591),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',596),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',600),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',604),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',615),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',616),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',621),
  ('action -> assignment_action','action',1,'p_action','Parser.py',622),
  ('action -> call_action','action',1,'p_action','Parser.py',623),
  ('action -> exit_action','action',1,'p_action','Parser.py',624),
  ('action -> result_action','action',1,'p_action','Parser.py',625),
  ('action -> return_action','action',1,'p_action','Parser.py',626),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',630),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',635),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',639),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',640),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',644),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',650),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',651),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',659),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',661),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',672),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',684),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',685),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',702),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',703),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',707),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',708),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',713),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',724),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',725),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',729),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',739),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',747),
  ('result -> expression','result',1,'p_result','Parser.py',751),
  ('result -> empty','result',1,'p_result','Parser.py',752),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',755),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',763),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',764),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',771),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',772),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',773),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',777),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',781),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',786),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',789),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',801),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',805),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',809),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',810),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',817),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',823),
]

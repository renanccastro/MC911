
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT RESULT FALSE TO BOOL OD LENGTH THEN READ CHARS EXIT RETURN ELSE TYPE DOWN DCL DO CHAR SYN FI WHILE NULL PROC ELSIF IN BY FOR REF PRINT ARRAY END RETURNS NUM ASC TRUE LOWER IF INT ABS UPPER LOCprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'DO':([0,1,5,7,19,37,38,45,53,55,106,127,135,182,187,190,196,202,238,242,247,313,333,338,345,350,353,356,357,],[1,1,1,-9,-6,-7,-8,-5,1,1,1,-147,1,-10,-28,-15,-24,1,-146,1,1,1,1,1,1,-32,-31,-30,-29,]),'LOWER':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[2,2,2,-9,2,2,-6,2,-7,-8,-5,2,2,2,-110,2,2,-109,2,2,2,2,2,2,-108,2,-106,-126,-125,-107,-158,-124,2,-147,2,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,2,-127,2,-122,2,-123,2,2,-10,-28,-15,-24,2,-157,2,2,2,2,2,2,2,2,2,-146,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-32,-31,-30,-29,]),'NOT':([9,10,34,46,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[59,59,59,59,59,59,59,59,59,-108,59,-106,-126,-125,-107,-158,-124,59,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,59,-127,59,-122,59,-123,59,59,-157,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'TO':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,251,261,263,292,296,300,316,318,320,321,326,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,295,-143,-137,295,295,-89,-78,-84,295,-204,-90,-138,]),'NULL':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[61,61,61,61,-110,61,-109,61,61,61,61,61,-108,61,-106,-126,-125,-107,-158,-124,61,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,61,-127,61,-122,61,-123,61,61,-157,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MODULO':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,64,65,69,70,72,73,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,194,199,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,115,-23,-142,-144,-136,-74,115,-134,-104,-131,-140,-128,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-23,-174,-100,115,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'PROC':([101,],[186,]),'ARROW':([3,4,8,9,10,11,13,15,20,21,22,25,31,34,42,46,49,59,63,66,76,77,83,85,89,100,105,110,115,116,117,118,119,120,121,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,159,175,184,194,199,206,208,216,222,224,225,226,230,231,235,236,237,241,244,248,249,250,256,257,262,269,294,295,301,304,306,316,318,],[-71,-74,-85,67,67,-70,-23,-69,-73,-72,-172,-68,-171,67,121,67,-23,-110,-74,67,-68,-109,67,67,121,67,67,67,-108,67,-106,-126,-125,-107,-75,-158,-124,67,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,67,-127,67,121,-122,67,-123,67,67,-184,-23,-174,-157,67,67,67,67,67,67,67,-183,67,-76,67,-173,67,67,67,-81,67,67,67,-68,67,67,67,67,67,-78,-84,]),'AND':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,141,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'WHILE':([1,3,8,11,15,20,21,22,31,48,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,129,131,132,151,152,161,168,169,170,172,173,179,184,199,212,213,214,218,231,236,241,250,252,261,263,293,297,300,307,308,316,318,319,322,323,326,327,340,],[46,-71,-85,-70,-69,-73,-72,-172,-171,46,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-198,-199,-197,-101,-111,-45,-49,-44,-47,-46,-51,-50,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-207,-143,-137,-203,-206,-89,-53,-52,-78,-84,-201,-205,-202,-90,-138,-200,]),'EXIT':([0,1,5,7,19,37,38,45,53,55,106,127,135,182,187,190,196,202,238,242,247,313,333,338,345,350,353,356,357,],[40,40,40,-9,-6,-7,-8,-5,40,40,40,-147,40,-10,-28,-15,-24,40,-146,40,40,40,40,40,40,-32,-31,-30,-29,]),'RETURNS':([278,315,],[312,312,]),'CCONST':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[58,58,58,58,-110,58,-109,58,58,58,58,58,-108,58,-106,-126,-125,-107,-158,-124,58,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,58,-127,58,-122,58,-123,58,58,-157,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'RESULT':([0,1,5,7,19,37,38,45,53,55,106,127,135,182,187,190,196,202,238,242,247,313,333,338,345,350,353,356,357,],[9,9,9,-9,-6,-7,-8,-5,9,9,9,-147,9,-10,-28,-15,-24,9,-146,9,9,9,9,9,9,-32,-31,-30,-29,]),'RETURN':([0,1,5,7,19,37,38,45,53,55,106,127,135,182,187,190,196,202,238,242,247,313,333,338,345,350,353,356,357,],[10,10,10,-9,-6,-7,-8,-5,10,10,10,-147,10,-10,-28,-15,-24,10,-146,10,10,10,10,10,10,-32,-31,-30,-29,]),'FOR':([1,],[47,]),'SYN':([0,5,7,19,37,38,45,55,127,182,187,190,196,238,313,333,338,345,350,353,356,357,],[12,12,-9,-6,-7,-8,-5,12,-147,-10,-28,-15,-24,-146,12,12,12,12,-32,-31,-30,-29,]),'ID':([0,1,5,7,9,10,12,14,19,26,34,37,38,40,45,46,47,53,55,59,66,67,77,83,85,95,97,98,100,103,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,160,164,175,181,182,187,188,190,196,197,198,202,206,208,209,216,222,224,225,226,229,230,232,235,237,238,242,244,247,248,249,254,256,257,262,279,294,295,301,304,305,306,310,313,333,334,338,345,350,353,356,357,],[13,49,13,-9,49,49,95,95,-6,95,49,-7,-8,95,-5,49,95,49,13,-110,49,49,-109,49,49,-23,95,-21,49,95,49,194,49,-108,49,-106,-126,-125,-107,-158,-124,49,-147,49,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,49,-127,49,-122,49,-123,49,95,95,49,95,-10,-28,95,-15,-24,95,95,49,-157,49,95,49,49,49,49,49,-22,49,95,49,49,-146,49,49,49,49,49,95,49,49,49,95,49,49,49,49,95,49,95,13,13,95,13,13,-32,-31,-30,-29,]),'CHAR':([95,97,98,103,164,197,209,222,229,254,279,304,305,334,],[-23,173,-21,173,173,173,173,173,-22,173,173,173,173,173,]),'LBRACKET':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,65,70,72,73,76,79,80,81,82,86,87,88,89,90,91,121,152,163,180,184,194,199,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,105,-171,116,-23,-142,-144,-136,-74,-134,-131,-140,-128,105,-141,-133,-145,-130,-132,159,-135,116,-129,-139,-75,116,222,228,-184,-23,-174,-88,-183,-76,-173,-81,-143,-137,105,-78,-84,-138,]),'PRINT':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[41,41,41,-9,41,41,-6,41,-7,-8,-5,41,41,41,-110,41,41,-109,41,41,41,41,41,41,-108,41,-106,-126,-125,-107,-158,-124,41,-147,41,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,41,-127,41,-122,41,-123,41,41,-10,-28,-15,-24,41,-157,41,41,41,41,41,41,41,41,41,-146,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-32,-31,-30,-29,]),'HAT':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[84,84,84,84,-110,84,-109,84,84,84,84,84,-108,84,-106,-126,-125,-107,-158,-124,84,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,84,-127,84,-122,84,-123,84,84,-157,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'END':([7,19,37,38,45,55,57,127,137,182,187,190,196,238,313,333,335,338,342,345,346,350,351,353,356,357,],[-9,-6,-7,-8,-5,-209,-4,-147,-3,-10,-28,-15,-24,-146,-209,-209,344,-209,347,-209,352,-32,355,-31,-30,-29,]),'ELSE':([3,8,11,15,20,21,22,31,49,53,54,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,127,136,151,152,184,199,201,212,213,214,215,218,231,236,238,241,246,247,250,259,260,261,263,287,300,316,317,318,324,326,327,341,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-209,-170,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-147,-169,-101,-111,-184,-174,242,-96,-100,-98,256,-88,-183,-76,-146,-173,-164,-209,-81,256,-91,-143,-137,-168,-89,-78,242,-84,-93,-90,-138,-94,]),'ASSIGN':([3,4,8,11,13,15,20,21,22,25,31,42,49,76,95,97,98,108,113,114,115,117,118,119,120,121,122,124,125,130,161,162,165,166,167,168,169,170,172,173,174,176,177,178,179,184,189,194,199,223,229,231,236,241,250,307,308,309,316,318,329,330,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,123,-23,-68,-23,175,-21,197,-160,-161,-108,-106,-126,-125,-107,-75,-159,-124,206,208,-45,-43,-39,-40,-42,-49,-44,-47,-46,-51,226,-41,-59,-58,-50,-184,235,-23,-174,-57,-22,-183,-76,-173,-81,-53,-52,-60,-78,-84,-62,-67,]),'LPAREN':([2,6,9,10,13,16,17,27,30,34,36,41,43,46,49,59,66,77,83,84,85,95,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,161,162,166,168,169,170,171,172,173,175,179,186,194,206,208,216,222,224,225,226,230,235,237,244,248,249,252,253,256,257,262,266,269,294,295,297,301,304,306,307,308,312,],[-179,-180,85,85,100,-176,-178,110,-181,85,-177,-182,-175,85,100,-110,85,-109,85,157,85,-23,85,85,85,-108,85,-106,-126,-125,-107,-158,-124,85,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,85,-127,85,-122,85,-123,85,-45,-48,224,-49,-44,-47,225,-46,-51,85,-50,232,100,-157,85,85,85,85,85,85,85,85,85,85,85,85,224,-48,85,85,85,224,-48,85,85,224,85,85,85,-53,-52,334,]),'UPPER':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[17,17,17,-9,17,17,-6,17,-7,-8,-5,17,17,17,-110,17,17,-109,17,17,17,17,17,17,-108,17,-106,-126,-125,-107,-158,-124,17,-147,17,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,17,-127,17,-122,17,-123,17,17,-10,-28,-15,-24,17,-157,17,17,17,17,17,17,17,17,17,-146,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-32,-31,-30,-29,]),'TRUE':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[72,72,72,72,-110,72,-109,72,72,72,72,72,-108,72,-106,-126,-125,-107,-158,-124,72,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,72,-127,72,-122,72,-123,72,72,-157,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'RBRACKET':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,161,168,169,170,172,173,179,184,191,192,199,203,205,212,213,214,218,219,220,231,236,241,250,261,263,264,265,266,267,274,275,282,283,288,289,290,291,300,303,307,308,316,318,326,327,328,331,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-45,-49,-44,-47,-46,-51,-50,-184,-77,236,-174,-82,250,-96,-100,-98,-88,-82,263,-183,-76,-173,-81,-143,-137,-63,305,-65,-66,309,-61,-80,316,-82,-83,-56,318,-89,327,-53,-52,-78,-84,-90,-138,-64,-54,]),'NOTEQ':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,145,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'CHARS':([95,97,98,103,164,197,229,279,305,334,],[-23,180,-21,180,180,180,-22,180,180,180,]),'$end':([5,7,19,29,33,37,38,45,55,56,57,127,137,182,187,190,196,238,350,353,356,357,],[-209,-9,-6,0,-1,-7,-8,-5,-209,-2,-4,-147,-3,-10,-28,-15,-24,-146,-32,-31,-30,-29,]),'DCL':([0,5,7,19,37,38,45,55,127,182,187,190,196,238,313,333,338,345,350,353,356,357,],[14,14,-9,-6,-7,-8,-5,14,-147,-10,-28,-15,-24,-146,14,14,14,14,-32,-31,-30,-29,]),'REF':([95,97,98,103,164,197,229,279,305,334,],[-23,164,-21,164,164,164,-22,164,164,164,]),'GTEQUAL':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,139,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'RPAREN':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,95,100,110,121,151,152,158,161,162,165,166,167,168,169,170,172,173,176,177,178,179,183,184,185,199,200,212,213,214,217,218,223,231,232,236,241,250,261,263,271,272,276,277,280,290,300,307,308,309,314,316,318,326,327,329,330,331,332,336,343,349,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-23,184,199,-75,-101,-111,218,-45,-43,-39,-40,-42,-49,-44,-47,-46,-51,-41,-59,-58,-50,-185,-184,231,-174,241,-96,-100,-98,261,-88,-57,-183,278,-76,-173,-81,-143,-137,307,308,-186,-33,315,-56,-89,-53,-52,-60,-36,-78,-84,-90,-138,-62,-67,-54,-34,-35,348,354,]),'ELSIF':([3,8,11,15,20,21,22,31,49,53,54,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,127,136,151,152,184,199,201,212,213,214,215,218,231,236,238,241,246,247,250,259,260,261,263,287,300,316,317,318,324,326,327,341,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-209,-170,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-147,-169,-101,-111,-184,-174,244,-96,-100,-98,257,-88,-183,-76,-146,-173,-164,-209,-81,301,-91,-143,-137,-168,-89,-78,244,-84,-93,-90,-138,-94,]),'DOWN':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,95,121,130,151,152,184,199,212,213,214,218,231,236,241,250,251,261,263,292,300,316,318,321,326,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-23,-75,210,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,296,-143,-137,320,-89,-78,-84,-204,-90,-138,]),'CONCAT':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,194,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,118,-23,-142,-144,-136,-74,-97,-134,-104,-131,-140,-128,118,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-23,-174,118,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'TYPE':([0,5,7,19,37,38,45,55,127,182,187,190,196,238,313,333,338,345,350,353,356,357,],[26,26,-9,-6,-7,-8,-5,26,-147,-10,-28,-15,-24,-146,26,26,26,26,-32,-31,-30,-29,]),'MINUS':([3,4,8,9,10,11,13,15,20,21,22,25,31,34,42,46,49,58,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,91,100,105,110,115,116,117,118,119,120,121,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,159,175,184,194,199,206,208,212,213,214,216,218,222,224,225,226,230,231,235,236,237,241,244,248,249,250,256,257,261,262,263,269,294,295,301,304,306,316,318,327,],[-71,-74,-85,77,77,-70,-23,-69,-73,-72,-172,-68,-171,77,119,77,-23,-142,-144,-136,-74,-97,-134,-104,-131,-140,-128,119,-99,-68,-102,-141,-133,-145,-130,77,77,-132,-105,-135,-103,-129,-139,77,77,77,-108,77,-106,-126,-125,-107,-75,-158,-124,77,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,77,-127,77,-101,-111,-122,77,-123,77,77,-184,-23,-174,-157,77,119,-100,-98,77,-88,77,77,77,77,77,-183,77,-76,77,-173,77,77,77,-81,77,77,-143,77,-137,-68,77,77,77,77,77,-78,-84,-138,]),'OD':([1,51,53,54,127,135,136,211,238,],[-209,134,-209,-170,-147,-209,-169,255,-146,]),'SEMI':([3,4,8,10,11,15,18,20,21,22,23,24,28,31,32,35,39,44,48,49,50,52,58,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,92,93,94,95,96,99,102,104,107,109,112,121,128,129,131,132,133,134,151,152,161,162,165,166,167,168,169,170,172,173,176,177,178,179,184,189,195,199,207,212,213,214,218,221,223,227,231,233,234,236,239,240,241,243,250,252,255,261,263,273,278,281,286,293,297,300,307,308,309,311,315,316,318,319,322,323,326,327,329,330,337,340,344,347,348,352,354,355,],[-71,-150,-85,-209,-70,-69,-155,-73,-72,-172,-153,-149,-152,-171,-151,-154,-148,127,-195,-23,-196,135,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-191,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-189,-188,-190,-23,-11,182,-16,190,196,-25,-187,-75,-208,-198,-199,-197,-194,-193,-101,-111,-45,-43,-39,-40,-42,-49,-44,-47,-46,-51,-41,-59,-58,-50,-184,-19,238,-174,-156,-96,-100,-98,-88,-12,-57,-14,-183,-17,-18,-76,-27,-26,-173,-163,-81,-207,-192,-143,-137,-13,313,-20,-162,-203,-206,-89,-53,-52,-60,333,338,-78,-84,-201,-205,-202,-90,-138,-62,-67,345,-200,350,353,-38,356,-37,357,]),'READ':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[30,30,30,-9,30,30,-6,30,-7,-8,-5,30,30,30,-110,30,30,-109,30,30,30,30,30,30,-108,30,-106,-126,-125,-107,-158,-124,30,-147,30,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,30,-127,30,-122,30,-123,30,30,-10,-28,-15,-24,30,-157,30,30,30,30,30,30,30,30,30,-146,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,-31,-30,-29,]),'FALSE':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[79,79,79,79,-110,79,-109,79,79,79,79,79,-108,79,-106,-126,-125,-107,-158,-124,79,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,79,-127,79,-122,79,-123,79,79,-157,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LTEQUAL':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,140,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'FI':([3,8,11,15,20,21,22,31,49,53,54,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,127,136,151,152,184,199,201,212,213,214,218,231,236,238,241,245,246,247,250,258,261,263,284,287,298,300,302,316,317,318,326,327,339,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-209,-170,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-147,-169,-101,-111,-184,-174,243,-96,-100,-98,-88,-183,-76,-146,-173,286,-164,-209,-81,300,-143,-137,-165,-168,-92,-89,326,-78,-167,-84,-90,-138,-166,]),'SCONST':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,206,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[81,81,81,81,-110,81,-109,81,81,81,81,81,-108,81,-106,-126,-125,-107,-158,-124,81,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,81,-127,81,-122,81,-123,81,81,-157,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ASC':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[16,16,16,-9,16,16,-6,16,-7,-8,-5,16,16,16,-110,16,16,-109,16,16,16,16,16,16,-108,16,-106,-126,-125,-107,-158,-124,16,-147,16,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,16,-127,16,-122,16,-123,16,16,-10,-28,-15,-24,16,-157,16,16,16,16,16,16,16,16,16,-146,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-32,-31,-30,-29,]),'INT':([95,97,98,103,164,197,209,222,229,254,279,304,305,334,],[-23,168,-21,168,168,168,168,168,-22,168,168,168,168,168,]),'IF':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,83,85,100,105,106,110,116,123,126,127,135,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[34,34,34,-9,83,83,-6,83,-7,-8,-5,83,34,34,83,83,83,83,34,83,83,-158,83,-147,34,83,83,-10,-28,-15,-24,34,-157,83,83,83,83,83,83,83,83,83,-146,34,83,34,83,83,83,83,83,83,83,83,83,83,34,34,34,34,-32,-31,-30,-29,]),'LENGTH':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[6,6,6,-9,6,6,-6,6,-7,-8,-5,6,6,6,-110,6,6,-109,6,6,6,6,6,6,-108,6,-106,-126,-125,-107,-158,-124,6,-147,6,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,6,-127,6,-122,6,-123,6,6,-10,-28,-15,-24,6,-157,6,6,6,6,6,6,6,6,6,-146,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-32,-31,-30,-29,]),'IN':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,95,121,130,151,152,184,199,210,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,149,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-23,-75,209,-101,-111,-184,-174,254,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'NUM':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[36,36,36,-9,36,36,-6,36,-7,-8,-5,36,36,36,-110,36,36,-109,36,36,36,36,36,36,-108,36,-106,-126,-125,-107,-158,-124,36,-147,36,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,36,-127,36,-122,36,-123,36,36,-10,-28,-15,-24,36,-157,36,36,36,36,36,36,36,36,36,-146,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,-31,-30,-29,]),'EQUAL':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,138,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'COMMA':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,95,96,98,102,109,121,151,152,161,162,165,166,167,168,169,170,172,173,176,177,178,179,183,184,189,199,203,212,213,214,218,219,223,227,231,234,236,239,241,250,261,263,264,266,267,273,277,281,288,290,300,307,308,309,314,316,318,326,327,329,330,331,336,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-23,160,181,188,198,-75,-101,-111,-45,-43,-39,-40,-42,-49,-44,-47,-46,-51,-41,-59,-58,-50,230,-184,-19,-174,248,-96,-100,-98,-88,248,-57,-14,-183,-18,-76,-27,-173,-81,-143,-137,304,-65,-66,-13,310,-20,248,-56,-89,-53,-52,-60,-36,-78,-84,-90,-138,-62,-67,-54,-35,]),'BOOL':([95,97,98,103,164,197,209,222,229,254,279,304,305,334,],[-23,179,-21,179,179,179,179,179,-22,179,179,179,179,179,]),'ARRAY':([95,97,98,103,164,197,229,279,305,334,],[-23,163,-21,163,163,163,-22,163,163,163,]),'COLON':([3,8,11,13,15,20,21,22,25,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,191,193,199,203,204,212,213,214,218,219,231,236,241,250,261,263,268,269,270,300,316,318,326,327,],[-71,-85,-70,101,-69,-73,-72,-172,106,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-79,237,-174,-55,249,-96,-100,-98,-88,262,-183,-76,-173,-81,-143,-137,-55,-68,306,-89,-78,-84,-90,-138,]),'LOC':([95,161,162,165,166,167,168,169,170,172,173,176,177,178,179,223,307,308,309,314,329,330,343,],[-23,-45,-43,-39,-40,-42,-49,-44,-47,-46,-51,-41,-59,-58,-50,-57,-53,-52,-60,336,-62,-67,349,]),'THEN':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,111,121,151,152,156,184,199,212,213,214,218,231,236,241,250,261,263,285,299,300,316,318,325,326,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,202,-75,-101,-111,216,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,202,216,-89,-78,-84,216,-90,-138,]),'TIMES':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,64,65,69,70,72,73,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,194,199,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,117,-23,-142,-144,-136,-74,117,-134,-104,-131,-140,-128,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-23,-174,-100,117,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'GREATER':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,143,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'LESS':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,144,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'ABS':([0,1,5,7,9,10,19,34,37,38,45,46,53,55,59,66,67,77,83,85,100,105,106,110,115,116,117,118,119,120,123,124,126,127,135,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,159,175,182,187,190,196,202,206,208,216,222,224,225,226,230,235,237,238,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,350,353,356,357,],[43,43,43,-9,43,43,-6,43,-7,-8,-5,43,43,43,-110,43,43,-109,43,43,43,43,43,43,-108,43,-106,-126,-125,-107,-158,-124,43,-147,43,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,43,-127,43,-122,43,-123,43,43,-10,-28,-15,-24,43,-157,43,43,43,43,43,43,43,43,43,-146,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-31,-30,-29,]),'BY':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,68,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,251,261,263,300,316,318,326,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,-86,-144,-136,-74,-97,-134,-87,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,294,-143,-137,-89,-78,-84,-90,-138,]),'OR':([3,8,11,15,20,21,22,31,49,58,60,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-85,-70,-69,-73,-72,-172,-171,-23,-142,146,-144,-136,-74,-97,-134,-104,-131,-140,-128,-95,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-174,-96,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'ICONST':([9,10,34,46,59,66,77,83,85,100,105,110,115,116,117,118,119,120,123,124,126,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,157,159,175,206,208,216,222,224,225,226,228,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[91,91,91,91,-110,91,-109,91,91,91,91,91,-108,91,-106,-126,-125,-107,-158,-124,91,-116,-119,-121,-114,-112,-118,-120,-117,-115,-113,91,-127,91,-122,91,-123,217,91,91,-157,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'DIVIDE':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,64,65,69,70,72,73,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,194,199,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,120,-23,-142,-144,-136,-74,120,-134,-104,-131,-140,-128,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-23,-174,-100,120,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),'PLUS':([3,4,8,11,13,15,20,21,22,25,31,42,49,58,61,62,63,64,65,69,70,72,73,74,75,76,78,79,80,81,82,86,87,88,89,90,91,121,151,152,184,194,199,212,213,214,218,231,236,241,250,261,263,269,316,318,327,],[-71,-74,-85,-70,-23,-69,-73,-72,-172,-68,-171,124,-23,-142,-144,-136,-74,-97,-134,-104,-131,-140,-128,124,-99,-68,-102,-141,-133,-145,-130,-132,-105,-135,-103,-129,-139,-75,-101,-111,-184,-23,-174,124,-100,-98,-88,-183,-76,-173,-81,-143,-137,-68,-78,-84,-138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initialization':([189,],[234,]),'integer_literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,228,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,275,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'index_mode_list':([222,304,],[265,328,]),'call_action':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[4,4,4,63,63,63,63,4,4,63,63,63,63,63,63,4,63,63,63,4,63,63,63,63,63,4,63,63,63,63,63,63,63,63,63,4,63,4,63,63,63,63,63,63,63,63,63,63,4,4,4,4,]),'procedure_call':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'statement':([0,5,55,313,333,338,345,],[5,55,55,55,55,55,55,]),'monadic_operator':([9,10,34,46,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'index_mode':([222,304,],[264,264,]),'location':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'parenthesized_expression':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'string_element':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'discrete_mode':([97,103,164,197,209,222,254,279,304,305,334,],[166,166,166,166,252,266,297,166,266,166,166,]),'composite_mode':([97,103,164,197,279,305,334,],[167,167,167,167,167,167,167,]),'array_element':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression':([9,10,34,46,83,85,100,105,110,116,126,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[71,92,111,128,156,158,183,191,183,203,207,219,227,251,260,268,268,268,273,183,281,282,285,288,290,298,299,303,321,322,325,268,290,]),'step_enumeration':([47,],[129,]),'newmode_list':([26,198,],[107,240,]),'start_element':([105,],[192,]),'discrete_range_mode':([97,103,164,197,209,222,254,279,304,305,334,],[170,170,170,170,170,170,170,170,170,170,170,]),'discrete_mode_name':([97,103,164,197,209,222,254,279,304,305,334,],[171,171,171,171,171,171,171,171,171,171,171,]),'literal_range':([222,224,225,304,],[267,271,272,267,]),'for_control':([1,],[48,]),'arithmetic_additive_operator':([42,74,212,],[122,153,153,]),'array_mode':([97,103,164,197,279,305,334,],[177,177,177,177,177,177,177,]),'reference_mode':([97,103,164,197,279,305,334,],[176,176,176,176,176,176,176,]),'bracketed_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'declaration_list':([14,188,],[104,233,]),'primitive_value':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'array_location':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[42,42,42,89,89,89,89,42,42,89,152,89,89,89,89,42,89,89,89,42,89,89,89,89,89,42,89,89,89,89,89,89,89,89,89,42,89,42,89,89,89,89,89,89,89,89,89,89,42,42,42,42,]),'operand2':([9,10,34,46,83,85,100,105,110,116,126,148,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[64,64,64,64,64,64,64,64,64,64,64,64,214,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'then_clause':([111,285,],[201,317,]),'end_value':([251,292,296,320,],[293,319,323,340,]),'builtin_call':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'declaration':([14,188,],[102,102,]),'builtin_name':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'dereferenced_reference':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'membership_operator':([60,],[142,]),'result_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'operand4':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[78,78,78,78,151,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'integer_mode':([97,103,164,197,209,222,254,279,304,305,334,],[169,169,169,169,169,169,169,169,169,169,169,]),'identifier_list':([12,14,26,160,181,188,198,232,310,],[97,103,108,97,229,103,108,279,279,]),'assigning_operator':([42,],[126,]),'element_mode':([305,],[329,]),'mode_definition':([26,198,],[109,109,]),'program':([0,],[29,]),'operator1':([60,],[148,]),'action_statement':([0,1,5,53,55,135,202,242,247,313,333,338,345,],[38,53,38,53,38,53,247,247,53,38,38,38,38,]),'left_element':([105,],[193,]),'character_mode':([97,103,164,197,209,222,254,279,304,305,334,],[172,172,172,172,172,172,172,172,172,172,172,]),'then_expression':([156,299,325,],[215,324,341,]),'literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'procedure_definition':([101,],[187,]),'action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[44,44,44,44,44,195,44,44,44,44,44,44,44,44,]),'value_array_element':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'action_statement_list':([202,242,],[246,284,]),'string_mode':([97,103,164,197,279,305,334,],[178,178,178,178,178,178,178,]),'parameter_list':([100,110,230,],[185,200,276,]),'declaration_statement':([0,5,55,313,333,338,345,],[45,45,45,45,45,45,45,]),'synonym_definition':([12,160,],[96,96,]),'operand0':([9,10,34,46,83,85,100,105,110,116,126,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'character_string_literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'else_clause':([201,317,],[245,339,]),'string_concatenation_operator':([42,74,212,],[114,155,155,]),'assignment_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'else_expression':([215,259,],[258,302,]),'lower_bound':([116,222,224,225,304,],[204,270,270,270,270,]),'procedure_statement':([0,5,55,313,333,338,345,],[7,7,7,7,7,7,7,]),'result_spec':([278,315,],[311,337,]),'operator2':([74,212,],[154,154,]),'conditional_expression':([9,10,34,46,83,85,100,105,110,116,126,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'referenced_location':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'elsif_expression':([215,],[259,]),'result':([10,],[93,]),'arithmetic_multiplicative_operator':([42,64,214,],[113,150,150,]),'formal_parameter':([232,310,],[277,277,]),'character_literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'iteration':([47,],[132,]),'upper_bound':([249,306,],[291,331,]),'do_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'synonym_statement':([0,5,55,313,333,338,345,],[19,19,19,19,19,19,19,]),'operand1':([9,10,34,46,83,85,100,105,110,116,126,148,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[74,74,74,74,74,74,74,74,74,74,74,212,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'boolean_mode':([97,103,164,197,209,222,254,279,304,305,334,],[161,161,161,161,161,161,161,161,161,161,161,]),'return_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'operand3':([9,10,34,46,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[75,75,75,75,75,75,75,75,75,75,75,75,213,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'identifier':([0,1,5,9,10,12,14,26,34,40,46,47,53,55,66,67,83,85,97,100,103,105,106,110,116,126,135,148,150,154,159,160,164,175,181,188,197,198,202,208,209,216,222,224,225,226,230,232,235,237,242,244,247,248,249,254,256,257,262,279,294,295,301,304,305,306,310,313,333,334,338,345,],[25,25,25,76,76,98,98,98,76,112,76,130,25,25,76,76,76,76,162,76,162,76,76,76,76,76,25,76,76,76,76,98,162,76,98,98,162,98,25,76,253,76,269,76,76,76,76,98,76,76,25,76,25,76,76,253,76,76,76,162,76,76,76,269,162,76,98,25,25,162,25,25,]),'string_length':([228,],[274,]),'step_value':([251,],[292,]),'synonym_list':([12,160,],[99,221,]),'while_control':([1,48,],[50,133,]),'range_enumeration':([47,],[131,]),'newmode_statement':([0,5,55,313,333,338,345,],[37,37,37,37,37,37,37,]),'closed_dyadic_operator':([42,],[125,]),'mode_name':([97,103,164,197,279,305,334,],[165,165,165,165,165,165,165,]),'relational_operator':([60,],[147,]),'boolean_literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'exit_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'statement_nullable':([5,55,313,333,338,345,],[56,137,335,342,346,351,]),'value_array_slice':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'statement_list':([0,],[33,]),'action_statement_nullable':([1,53,135,247,],[51,136,211,287,]),'control_part':([1,],[52,]),'if_action':([0,1,5,53,55,106,135,202,242,247,313,333,338,345,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'string_slice':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'right_element':([237,],[283,]),'array_slice':([0,1,5,9,10,34,46,53,55,66,67,83,85,100,105,106,110,116,126,135,148,150,154,159,175,202,208,216,222,224,225,226,230,235,237,242,244,247,248,249,256,257,262,294,295,301,304,306,313,333,338,345,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'formal_parameter_list':([232,310,],[280,332,]),'empty_literal':([9,10,34,46,66,83,85,100,105,110,116,126,148,150,154,159,175,208,216,222,224,225,226,230,235,237,244,248,249,256,257,262,294,295,301,304,306,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'mode':([97,103,164,197,279,305,334,],[174,189,223,239,314,330,343,]),'empty':([1,5,10,53,55,135,247,313,333,338,345,],[54,57,94,54,57,54,54,57,57,57,57,]),'expression_list':([116,159,248,],[205,220,289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]

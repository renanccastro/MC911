
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT THEN BY BOOL RETURNS ASC PRINT LENGTH LOC READ NUM FALSE EXIT WHILE REF NULL LOWER OD DCL ELSIF IF PROC IN CHAR ARRAY SYN DO TRUE DOWN INT ABS END UPPER FI ELSE TO RESULT TYPE CHARS RETURN FORprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | boolean_expression\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENboolean_expression : expression AND expression\n                              | expression OR expression\n                              | expression EQUAL expression\n                              | expression NOTEQ expression\n                              | expression GREATER expression\n                              | expression GTEQUAL expression\n                              | expression LESS expression\n                              | expression LTEQUAL expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF boolean_expression then_clause else_clause FI\n                     | IF boolean_expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF boolean_expression then_clause else_clause\n                       | ELSIF boolean_expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT label_idlabel_id : IDreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'CONCAT':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,93,94,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,195,219,222,225,226,227,228,229,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,70,-70,-66,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,70,-111,-142,-23,-129,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-23,-180,-79,-170,-107,-105,-87,70,-74,-66,-135,-82,-76,-136,]),'EQUAL':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,183,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,183,183,-181,183,183,183,-171,-118,-108,183,-85,183,183,-180,-79,-170,-107,-105,-87,-103,183,183,-95,-91,-92,-90,-93,-94,183,183,-74,183,-66,183,183,183,-135,183,-85,183,183,183,-82,183,-96,183,-85,-76,-136,-97,-85,183,183,]),'DCL':([0,3,9,12,21,26,37,51,54,151,155,159,190,251,329,340,351,352,],[1,1,-8,-6,-7,-5,-9,1,-144,-15,-24,-28,-10,-143,1,1,-30,-29,]),'TYPE':([0,3,9,12,21,26,37,51,54,151,155,159,190,251,329,340,351,352,],[7,7,-8,-6,-7,-5,-9,7,-144,-15,-24,-28,-10,-143,7,7,-30,-29,]),'ARROW':([13,14,16,17,20,22,25,30,31,35,38,39,40,41,45,60,63,64,66,67,68,69,70,71,72,74,76,82,88,91,93,98,100,102,105,110,120,124,157,161,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,195,211,212,214,215,219,220,222,223,224,225,241,247,249,252,253,257,261,279,281,283,299,300,306,311,314,318,320,],[-69,-67,-169,-23,-72,64,-70,77,77,-66,-68,-71,-168,-83,77,77,-123,-73,-155,-122,77,-114,-124,-115,77,-113,77,77,-116,77,-23,-72,64,-117,77,-66,77,77,-181,-154,-171,64,77,-120,-121,77,-125,-119,77,77,77,77,77,77,77,77,77,77,77,-23,77,77,77,77,-180,77,-79,77,77,-170,77,77,77,-74,77,77,-66,77,77,77,77,77,-82,77,-76,77,77,]),'CHARS':([47,48,50,117,148,154,209,271,298,341,],[-21,134,-23,134,134,134,-22,134,134,134,]),'CHAR':([47,48,50,117,148,154,209,211,255,271,295,298,299,341,],[-21,139,-23,139,139,139,-22,139,139,139,139,139,139,139,]),'PRINT':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[44,44,-8,-6,-7,-5,44,44,-9,44,44,44,-144,44,-123,-155,-122,44,-114,-124,-115,44,-113,44,44,44,-116,44,-117,44,44,44,44,44,-15,-24,-28,-154,44,-120,-121,44,-125,-119,44,44,44,44,44,44,44,44,44,44,44,-10,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),'LENGTH':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[18,18,-8,-6,-7,-5,18,18,-9,18,18,18,-144,18,-123,-155,-122,18,-114,-124,-115,18,-113,18,18,18,-116,18,-117,18,18,18,18,18,-15,-24,-28,-154,18,-120,-121,18,-125,-119,18,18,18,18,18,18,18,18,18,18,18,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-143,18,18,18,18,18,18,18,18,18,18,18,18,-30,-29,]),'PLUS':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,93,94,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,195,219,222,225,226,227,228,229,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,67,-70,-66,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,67,-111,-142,-23,-129,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-23,-180,-79,-170,-107,-105,-87,67,-74,-66,-135,-82,-76,-136,]),'ICONST':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,210,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[113,113,113,113,-123,-155,-122,113,-114,-124,-115,113,-113,113,113,-116,113,-117,113,113,113,-154,113,-120,-121,113,-125,-119,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'LOWER':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[34,34,-8,-6,-7,-5,34,34,-9,34,34,34,-144,34,-123,-155,-122,34,-114,-124,-115,34,-113,34,34,34,-116,34,-117,34,34,34,34,34,-15,-24,-28,-154,34,-120,-121,34,-125,-119,34,34,34,34,34,34,34,34,34,34,34,-10,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-143,34,34,34,34,34,34,34,34,34,34,34,34,-30,-29,]),'BY':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,157,167,168,170,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,278,296,306,308,314,330,331,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,-135,320,-82,-96,-76,-136,-97,]),'LTEQUAL':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,180,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,180,180,-181,180,180,180,-171,-118,-108,180,-85,180,180,-180,-79,-170,-107,-105,-87,-103,180,180,-95,180,-92,180,-93,-94,180,180,-74,180,-66,180,180,180,-135,180,-85,180,180,180,-82,180,-96,180,-85,-76,-136,-97,-85,180,180,]),'ABS':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[8,8,-8,-6,-7,-5,8,8,-9,8,8,8,-144,8,-123,-155,-122,8,-114,-124,-115,8,-113,8,8,8,-116,8,-117,8,8,8,8,8,-15,-24,-28,-154,8,-120,-121,8,-125,-119,8,8,8,8,8,8,8,8,8,8,8,-10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-143,8,8,8,8,8,8,8,8,8,8,8,8,-30,-29,]),'IN':([13,14,16,25,38,39,40,41,50,64,78,79,80,81,83,84,85,86,87,89,90,93,94,95,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,205,219,222,225,226,227,228,229,252,256,261,278,306,314,330,],[-69,-67,-169,-70,-68,-71,-168,-83,-23,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-23,-129,175,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,255,-180,-79,-170,-107,-105,-87,-103,-74,295,-66,-135,-82,-76,-136,]),'THEN':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,114,157,167,168,170,187,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,278,288,306,308,312,314,330,331,332,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,188,-181,-171,-118,-108,241,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,-135,188,-82,-96,241,-76,-136,-97,241,]),'TIMES':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,89,90,93,94,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,195,219,222,225,226,227,228,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,74,-70,-66,-68,-71,-168,-83,-73,-140,74,-134,-138,-141,-106,-126,-127,-111,-142,-23,-129,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-23,-180,-79,-170,-107,74,-87,-74,-66,-135,-82,-76,-136,]),'EXIT':([0,3,9,12,21,26,37,43,51,54,119,121,151,155,159,188,190,200,242,244,251,329,340,351,352,],[10,10,-8,-6,-7,-5,-9,10,10,-144,10,10,-15,-24,-28,10,-10,10,10,10,-143,10,10,-30,-29,]),'RETURNS':([305,],[328,]),'SCONST':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[90,90,90,90,-123,-155,-122,90,-114,-124,-115,90,-113,90,90,-116,90,-117,90,90,90,-154,90,-120,-121,90,-125,-119,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'NOTEQ':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,181,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,181,181,-181,181,181,181,-171,-118,-108,181,-85,181,181,-180,-79,-170,-107,-105,-87,-103,181,181,-95,-91,-92,-90,-93,-94,181,181,-74,181,-66,181,181,181,-135,181,-85,181,181,181,-82,181,-96,181,-85,-76,-136,-97,-85,181,181,]),'TO':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,157,167,168,170,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,278,296,306,308,314,316,317,330,331,336,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,-135,318,-82,-96,-76,318,318,-136,-97,318,-202,]),'LPAREN':([8,17,18,23,24,27,28,30,31,32,34,44,45,50,60,63,66,67,68,69,70,71,72,74,76,82,88,91,93,102,105,120,124,132,136,139,140,142,143,144,147,149,150,160,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,195,211,212,214,215,220,223,224,241,247,249,253,257,261,264,279,281,283,293,294,299,300,301,302,311,315,318,320,328,],[-172,60,-177,-173,-178,-174,76,91,91,-175,-176,-179,91,-23,91,-123,-155,-122,91,-114,-124,-115,91,-113,91,91,-116,91,60,-117,91,91,91,-43,-48,-49,212,-46,215,-47,-45,-44,-42,221,-154,91,-120,-121,91,-125,-119,91,91,91,91,91,91,91,91,91,91,91,60,91,91,91,91,91,91,91,91,91,91,91,91,-46,215,91,91,91,-46,215,91,91,-50,-51,91,215,91,91,341,]),'BOOL':([47,48,50,117,148,154,209,211,255,271,295,298,299,341,],[-21,136,-23,136,136,136,-22,136,136,136,136,136,136,136,]),'GREATER':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,182,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,182,182,-181,182,182,182,-171,-118,-108,182,-85,182,182,-180,-79,-170,-107,-105,-87,-103,182,182,-95,182,-92,182,-93,-94,182,182,-74,182,-66,182,182,182,-135,182,-85,182,182,182,-82,182,-96,182,-85,-76,-136,-97,-85,182,182,]),'TRUE':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[81,81,81,81,-123,-155,-122,81,-114,-124,-115,81,-113,81,81,-116,81,-117,81,81,81,-154,81,-120,-121,81,-125,-119,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MINUS':([13,14,16,17,20,22,25,30,31,35,38,39,40,41,45,60,63,64,66,67,68,69,70,71,72,74,76,78,79,80,81,83,84,85,86,87,89,90,91,93,94,96,98,99,100,103,104,105,108,109,110,111,112,113,120,124,157,161,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,195,211,212,214,215,219,220,222,223,224,225,226,227,228,229,241,247,249,252,253,257,261,278,279,281,283,299,300,306,311,314,318,320,330,],[-69,-67,-169,-23,-72,63,-70,88,88,-66,-68,-71,-168,-83,88,88,-123,-73,-155,-122,88,-114,-124,-115,88,-113,88,-140,-104,-134,-138,-141,-106,-126,-127,63,-111,-142,88,-23,-129,-139,-72,-112,-110,-109,-128,88,-131,-133,-66,-130,-132,-137,88,88,-181,-154,-171,-118,88,-108,-120,-121,88,-125,-119,88,88,88,88,88,88,88,88,88,88,88,-23,88,88,88,88,-180,88,-79,88,88,-170,-107,-105,-87,63,88,88,88,-74,88,88,-66,-135,88,88,88,88,88,-82,88,-76,88,88,-136,]),'OR':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,178,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,178,178,-181,178,178,178,-171,-118,-108,178,-85,178,178,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,178,178,-74,178,-66,178,178,178,-135,178,-85,178,178,178,-82,178,-96,178,-85,-76,-136,-97,-85,178,178,]),'FI':([13,14,16,25,38,39,40,41,54,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,121,126,157,167,168,170,189,199,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,242,243,245,251,252,278,280,285,286,306,308,309,310,313,314,330,331,334,],[-69,-67,-169,-70,-68,-71,-168,-83,-144,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-207,-167,-181,-171,-118,-108,246,-166,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-207,-161,287,-143,-74,-135,308,-165,-162,-82,-96,-99,331,-164,-76,-136,-97,-163,]),'READ':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[24,24,-8,-6,-7,-5,24,24,-9,24,24,24,-144,24,-123,-155,-122,24,-114,-124,-115,24,-113,24,24,24,-116,24,-117,24,24,24,24,24,-15,-24,-28,-154,24,-120,-121,24,-125,-119,24,24,24,24,24,24,24,24,24,24,24,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-143,24,24,24,24,24,24,24,24,24,24,24,24,-30,-29,]),'ELSE':([13,14,16,25,38,39,40,41,54,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,121,126,157,167,168,170,189,199,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,240,242,243,251,252,278,282,284,285,306,308,313,314,330,331,333,343,],[-69,-67,-169,-70,-68,-71,-168,-83,-144,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-207,-167,-181,-171,-118,-108,244,-166,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,281,-207,-161,-143,-74,-135,281,-98,-165,-82,-96,244,-76,-136,-97,-100,-101,]),'RPAREN':([13,14,16,25,38,39,40,41,50,60,64,76,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,132,133,136,137,138,139,142,143,144,145,146,147,149,150,156,157,158,166,167,168,170,174,216,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,267,269,270,272,273,277,278,297,301,302,303,306,308,314,321,322,324,325,326,330,331,346,350,],[-69,-67,-169,-70,-68,-71,-168,-83,-23,157,-73,167,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-43,-40,-48,-56,-39,-49,-41,-38,-47,-57,-37,-45,-44,-42,219,-181,-182,225,-171,-118,-108,228,-55,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,301,302,-183,-31,305,-54,-135,-58,-50,-51,-34,-82,-96,-76,-65,-60,-52,-33,-32,-136,-97,349,353,]),'END':([9,12,21,26,37,51,52,54,151,152,155,159,190,251,329,340,342,345,351,352,],[-8,-6,-7,-5,-9,-207,-4,-144,-15,-3,-24,-28,-10,-143,-207,-207,347,348,-30,-29,]),'FALSE':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[96,96,96,96,-123,-155,-122,96,-114,-124,-115,96,-113,96,96,-116,96,-117,96,96,96,-154,96,-120,-121,96,-125,-119,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'CCONST':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[78,78,78,78,-123,-155,-122,78,-114,-124,-115,78,-113,78,78,-116,78,-117,78,78,78,-154,78,-120,-121,78,-125,-119,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'WHILE':([13,14,16,25,38,39,40,41,43,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,127,132,136,139,144,147,149,150,157,167,168,170,204,206,207,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,278,294,301,302,306,308,314,315,319,330,331,335,337,338,344,],[-69,-67,-169,-70,-68,-71,-168,-83,124,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,124,-43,-48,-49,-47,-45,-44,-42,-181,-171,-118,-108,-195,-196,-197,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,-135,-205,-50,-51,-82,-96,-76,-204,-201,-136,-97,-199,-200,-203,-198,]),'COMMA':([13,14,16,25,38,39,40,41,46,47,50,55,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,118,132,133,136,137,138,139,141,142,143,144,145,146,147,149,150,157,158,164,167,168,170,213,216,218,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,263,264,266,268,272,275,277,278,289,297,301,302,303,306,308,314,321,322,324,325,330,331,],[-69,-67,-169,-70,-68,-71,-168,-83,130,131,-23,153,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,193,-43,-40,-48,-56,-39,-49,-19,-41,-38,-47,-57,-37,-45,-44,-42,-181,220,223,-171,-118,-108,-18,-55,-27,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,223,-14,-74,299,-63,-64,-20,304,223,-54,-135,-13,-58,-50,-51,-34,-82,-96,-76,-65,-60,-52,-33,-136,-97,]),'$end':([3,4,9,12,21,26,37,42,51,52,53,54,151,152,155,159,190,251,351,352,],[-207,-1,-8,-6,-7,-5,-9,0,-207,-4,-2,-144,-15,-3,-24,-28,-10,-143,-30,-29,]),'SEMI':([2,5,6,11,13,14,15,16,19,20,25,29,30,36,38,39,40,41,46,49,50,55,57,58,59,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,101,103,104,106,107,108,109,110,111,112,113,116,118,122,123,127,129,132,133,136,137,138,139,141,142,143,144,145,146,147,149,150,157,162,167,168,170,194,201,202,203,204,206,207,208,213,216,217,218,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,246,248,250,252,268,278,287,289,292,294,297,301,302,305,306,308,314,315,319,321,322,327,330,331,335,337,338,344,347,348,349,353,],[-146,-150,54,-152,-69,-67,-151,-169,-148,-147,-70,-149,-207,-145,-68,-71,-168,-83,-16,151,-23,-25,155,-184,-185,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-187,-72,-112,-110,-188,-109,-128,-86,-186,-131,-133,-66,-130,-132,-137,190,-11,-194,200,-193,-189,-43,-40,-48,-56,-39,-49,-19,-41,-38,-47,-57,-37,-45,-44,-42,-181,-153,-171,-118,-108,251,-206,-191,-192,-195,-196,-197,-17,-18,-55,-26,-27,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-160,-14,-12,-74,-20,-135,-159,-13,-190,-205,-58,-50,-51,329,-82,-96,-76,-204,-201,-65,-60,340,-136,-97,-199,-200,-203,-198,351,352,-36,-35,]),'ASC':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[23,23,-8,-6,-7,-5,23,23,-9,23,23,23,-144,23,-123,-155,-122,23,-114,-124,-115,23,-113,23,23,23,-116,23,-117,23,23,23,23,23,-15,-24,-28,-154,23,-120,-121,23,-125,-119,23,23,23,23,23,23,23,23,23,23,23,-10,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-143,23,23,23,23,23,23,23,23,23,23,23,23,-30,-29,]),'RBRACKET':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,132,136,139,144,147,149,150,157,163,164,167,168,170,196,197,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,252,258,259,262,263,264,266,274,275,276,277,278,290,291,301,302,306,307,308,314,323,324,330,331,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-43,-48,-49,-47,-45,-44,-42,-181,222,-80,-171,-118,-108,-75,252,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,278,-80,-74,297,-59,298,-61,-63,-64,-81,-80,306,-54,-135,-78,314,-50,-51,-82,330,-96,-76,-62,-52,-136,-97,]),'ASSIGN':([13,14,16,17,20,22,25,35,38,39,40,41,47,50,56,62,63,64,65,67,69,70,71,73,74,75,93,110,117,132,133,136,137,138,139,141,142,143,144,145,146,147,149,150,157,167,192,195,205,209,216,219,222,225,252,297,301,302,306,314,321,322,],[-69,-67,-169,-23,-72,66,-70,-66,-68,-71,-168,-83,-21,-23,154,161,-123,-73,-156,-122,-114,-124,-115,-158,-113,-157,-23,-66,191,-43,-40,-48,-56,-39,-49,214,-41,-38,-47,-57,-37,-45,-44,-42,-181,-171,249,-23,257,-22,-55,-180,-79,-170,-74,-58,-50,-51,-82,-76,-65,-60,]),'NOT':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,91,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[102,102,102,102,-123,-155,-122,102,-114,-124,-115,102,-113,102,102,102,102,102,-154,102,-120,-121,102,-125,-119,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'MODULO':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,89,90,93,94,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,195,219,222,225,226,227,228,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,71,-70,-66,-68,-71,-168,-83,-73,-140,71,-134,-138,-141,-106,-126,-127,-111,-142,-23,-129,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-23,-180,-79,-170,-107,71,-87,-74,-66,-135,-82,-76,-136,]),'NUM':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[27,27,-8,-6,-7,-5,27,27,-9,27,27,27,-144,27,-123,-155,-122,27,-114,-124,-115,27,-113,27,27,27,-116,27,-117,27,27,27,27,27,-15,-24,-28,-154,27,-120,-121,27,-125,-119,27,27,27,27,27,27,27,27,27,27,27,-10,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-143,27,27,27,27,27,27,27,27,27,27,27,27,-30,-29,]),'GTEQUAL':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,184,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,184,184,-181,184,184,184,-171,-118,-108,184,-85,184,184,-180,-79,-170,-107,-105,-87,-103,184,184,-95,184,-92,184,-93,-94,184,184,-74,184,-66,184,184,184,-135,184,-85,184,184,184,-82,184,-96,184,-85,-76,-136,-97,-85,184,184,]),'AND':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,179,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,179,179,-181,179,179,179,-171,-118,-108,179,-85,179,179,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,179,179,-74,179,-66,179,179,179,-135,179,-85,179,179,179,-82,179,-96,179,-85,-76,-136,-97,-85,179,179,]),'OD':([43,54,121,125,126,199,200,251,254,],[-207,-144,-207,202,-167,-166,-207,-143,292,]),'FOR':([43,],[128,]),'LESS':([13,14,16,25,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,103,104,106,108,109,110,111,112,113,114,115,129,157,158,162,164,167,168,170,174,187,196,201,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,248,252,260,261,268,275,277,278,284,288,289,290,296,306,307,308,309,312,314,330,331,332,338,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,185,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-85,185,185,-181,185,185,185,-171,-118,-108,185,-85,185,185,-180,-79,-170,-107,-105,-87,-103,185,185,-95,185,-92,185,-93,-94,185,185,-74,185,-66,185,185,185,-135,185,-85,185,185,185,-82,185,-96,185,-85,-76,-136,-97,-85,185,185,]),'RETURN':([0,3,9,12,21,26,37,43,51,54,119,121,151,155,159,188,190,200,242,244,251,329,340,351,352,],[30,30,-8,-6,-7,-5,-9,30,30,-144,30,30,-15,-24,-28,30,-10,30,30,30,-143,30,30,-30,-29,]),'IF':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,66,68,72,76,91,105,119,120,121,124,151,155,159,161,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[31,31,-8,-6,-7,-5,105,105,-9,31,105,31,-144,105,-155,105,105,105,105,105,31,105,31,105,-15,-24,-28,-154,105,105,105,105,105,105,105,105,105,31,-10,105,31,105,105,105,105,105,105,105,105,31,31,105,105,-143,105,105,105,105,105,105,105,105,105,105,31,31,-30,-29,]),'ELSIF':([13,14,16,25,38,39,40,41,54,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,121,126,157,167,168,170,189,199,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,240,242,243,251,252,278,282,284,285,306,308,313,314,330,331,333,343,],[-69,-67,-169,-70,-68,-71,-168,-83,-144,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-207,-167,-181,-171,-118,-108,247,-166,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,283,-207,-161,-143,-74,-135,311,-98,-165,-82,-96,247,-76,-136,-97,-100,-101,]),'REF':([47,48,50,117,148,154,209,271,298,341,],[-21,148,-23,148,148,148,-22,148,148,148,]),'ID':([0,1,3,7,9,10,12,21,26,30,31,33,37,43,45,47,48,50,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,117,119,120,121,124,128,130,131,148,151,153,154,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,193,200,209,211,212,214,215,220,221,223,224,241,242,244,247,249,251,253,255,257,271,279,281,283,295,298,299,300,304,311,318,320,329,340,341,351,352,],[17,50,17,50,-8,59,-6,-7,-5,93,93,50,-9,93,93,-21,50,-23,17,-144,93,-123,-155,-122,93,-114,-124,-115,93,-113,93,93,93,-116,93,-117,93,50,195,93,93,93,50,50,50,50,-15,50,50,-24,-28,-154,93,-120,-121,93,-125,-119,93,93,93,93,93,93,93,93,93,93,93,-10,93,50,93,-22,93,93,93,93,93,50,93,93,93,93,93,93,93,-143,93,50,93,50,93,93,93,50,50,93,93,50,93,93,93,17,17,50,-30,-29,]),'SYN':([0,3,9,12,21,26,37,51,54,151,155,159,190,251,329,340,351,352,],[33,33,-8,-6,-7,-5,-9,33,-144,-15,-24,-28,-10,-143,33,33,-30,-29,]),'DOWN':([13,14,16,25,38,39,40,41,50,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,157,167,168,170,205,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,252,278,296,306,308,314,316,330,331,339,],[-69,-67,-169,-70,-68,-71,-168,-83,-23,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,256,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,-74,-135,317,-82,-96,-76,336,-136,-97,-202,]),'LBRACKET':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,80,81,83,85,86,90,93,94,96,98,99,100,104,108,109,110,111,112,113,134,135,157,167,168,195,219,222,225,228,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,72,-70,120,-68,-71,-168,-83,-73,-140,-134,-138,-141,-126,-127,-142,-23,-129,-139,-72,186,72,-128,-131,-133,120,-130,-132,-137,210,211,-181,-171,72,-23,-180,-79,-170,-87,-74,120,-135,-82,-76,-136,]),'UPPER':([0,3,9,12,21,26,30,31,37,43,45,51,54,60,63,66,67,68,69,70,71,72,74,76,77,82,88,91,102,105,119,120,121,124,151,155,159,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,200,211,212,214,215,220,223,224,241,242,244,247,249,251,253,257,279,281,283,299,300,311,318,320,329,340,351,352,],[32,32,-8,-6,-7,-5,32,32,-9,32,32,32,-144,32,-123,-155,-122,32,-114,-124,-115,32,-113,32,32,32,-116,32,-117,32,32,32,32,32,-15,-24,-28,-154,32,-120,-121,32,-125,-119,32,32,32,32,32,32,32,32,32,32,32,-10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-143,32,32,32,32,32,32,32,32,32,32,32,32,-30,-29,]),'COLON':([13,14,16,17,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,87,89,90,92,93,94,95,96,98,99,100,103,104,106,108,109,110,111,112,113,157,164,165,167,168,170,196,198,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,239,252,260,261,265,278,306,308,314,330,331,],[-69,-67,-169,61,-70,119,-68,-71,-168,-83,-73,-140,-104,-134,-138,-141,-106,-126,-127,-102,-111,-142,-85,-23,-129,-84,-139,-72,-112,-110,-109,-128,-86,-131,-133,-66,-130,-132,-137,-181,-53,224,-171,-118,-108,-77,253,-180,-79,-170,-107,-105,-87,-103,-89,-88,-95,-91,-92,-90,-93,-94,279,-74,-53,-66,300,-135,-82,-96,-76,-136,-97,]),'ARRAY':([47,48,50,117,148,154,209,271,298,341,],[-21,135,-23,135,135,135,-22,135,135,135,]),'NULL':([30,31,45,60,63,66,67,68,69,70,71,72,74,76,82,88,91,102,105,120,124,161,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[83,83,83,83,-123,-155,-122,83,-114,-124,-115,83,-113,83,83,-116,83,-117,83,83,83,-154,83,-120,-121,83,-125,-119,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'PROC':([61,],[160,]),'INT':([47,48,50,117,148,154,209,211,255,271,295,298,299,341,],[-21,144,-23,144,144,144,-22,144,144,144,144,144,144,144,]),'DO':([0,3,9,12,21,26,37,43,51,54,119,121,151,155,159,188,190,200,242,244,251,329,340,351,352,],[43,43,-8,-6,-7,-5,-9,43,43,-144,43,43,-15,-24,-28,43,-10,43,43,43,-143,43,43,-30,-29,]),'LOC':([50,132,133,136,137,138,139,142,143,144,145,146,147,149,150,216,297,301,302,303,321,322,346,],[-23,-43,-40,-48,-56,-39,-49,-41,-38,-47,-57,-37,-45,-44,-42,-55,-58,-50,-51,325,-65,-60,350,]),'DIVIDE':([13,14,16,17,20,22,25,35,38,39,40,41,64,78,79,80,81,83,84,85,86,89,90,93,94,96,98,99,100,103,104,108,109,110,111,112,113,157,167,168,170,195,219,222,225,226,227,228,252,261,278,306,314,330,],[-69,-67,-169,-23,-72,69,-70,-66,-68,-71,-168,-83,-73,-140,69,-134,-138,-141,-106,-126,-127,-111,-142,-23,-129,-139,-72,-112,-110,-109,-128,-131,-133,-66,-130,-132,-137,-181,-171,-118,-108,-23,-180,-79,-170,-107,69,-87,-74,-66,-135,-82,-76,-136,]),'RESULT':([0,3,9,12,21,26,37,43,51,54,119,121,151,155,159,188,190,200,242,244,251,329,340,351,352,],[45,45,-8,-6,-7,-5,-9,45,45,-144,45,45,-15,-24,-28,45,-10,45,45,45,-143,45,45,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'closed_dyadic_operator':([22,],[62,]),'synonym_list':([33,193,],[116,250,]),'formal_parameter':([221,304,],[272,272,]),'procedure_definition':([61,],[159,]),'assignment_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'monadic_operator':([30,31,45,60,68,72,76,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'operator2':([87,229,],[173,173,]),'statement_list':([0,],[4,]),'return_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'operand3':([30,31,45,60,68,72,76,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[84,84,84,84,84,84,84,84,84,84,84,226,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'upper_bound':([224,300,],[276,324,]),'range_enumeration':([128,],[207,]),'expression_list':([72,186,223,],[163,238,274,]),'discrete_mode_name':([48,117,148,154,211,255,271,295,298,299,341,],[140,140,140,140,140,140,140,140,140,140,140,]),'mode':([48,117,148,154,271,298,341,],[141,192,216,218,303,321,346,]),'then_expression':([187,312,332,],[240,333,343,]),'do_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'synonym_statement':([0,3,51,329,340,],[12,12,12,12,12,]),'dereferenced_reference':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'while_control':([43,127,],[122,203,]),'step_enumeration':([128,],[206,]),'exit_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'else_clause':([189,313,],[245,334,]),'parameter_list':([60,76,220,],[156,166,270,]),'action_statement_list':([188,244,],[243,286,]),'operand0':([30,31,45,60,68,72,76,91,105,120,124,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'call_action':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[20,20,98,98,20,98,20,98,98,98,98,98,98,98,98,20,98,20,98,98,98,98,98,98,98,98,98,98,98,98,98,20,98,20,98,98,98,98,98,98,98,98,20,20,98,98,98,98,98,98,98,98,98,98,98,98,20,20,]),'primitive_value':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'newmode_statement':([0,3,51,329,340,],[21,21,21,21,21,]),'identifier_list':([1,7,33,130,131,153,193,221,304,],[48,56,117,48,209,56,117,271,271,]),'action_statement_nullable':([43,121,200,242,],[125,199,254,285,]),'empty':([3,30,43,51,121,200,242,329,340,],[52,101,126,52,126,126,126,52,52,]),'operator1':([95,],[177,]),'value_array_slice':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'newmode_list':([7,153,],[57,217,]),'result_spec':([305,],[327,]),'left_element':([120,],[198,]),'reference_mode':([48,117,148,154,271,298,341,],[138,138,138,138,138,138,138,]),'assigning_operator':([22,],[68,]),'start_element':([120,],[197,]),'statement_nullable':([3,51,329,340,],[53,152,342,345,]),'statement':([0,3,51,329,340,],[3,51,51,51,51,]),'iteration':([128,],[204,]),'index_mode':([211,299,],[263,263,]),'right_element':([253,],[291,]),'boolean_literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'identifier':([0,1,3,7,30,31,33,43,45,48,51,60,68,72,76,77,82,91,105,117,119,120,121,124,128,130,131,148,153,154,169,173,177,178,179,180,181,182,183,184,185,186,188,191,193,200,211,212,214,215,220,221,223,224,241,242,244,247,249,253,255,257,271,279,281,283,295,298,299,300,304,311,318,320,329,340,341,],[35,47,35,47,110,110,47,35,110,142,35,110,110,110,110,110,110,110,110,142,110,110,35,110,205,47,47,142,47,142,110,110,110,110,110,110,110,110,110,110,110,110,35,110,47,35,261,110,110,110,110,47,110,110,110,35,35,110,110,110,293,110,142,110,110,110,293,142,261,110,47,110,110,110,35,35,142,]),'empty_literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'bracketed_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'mode_name':([48,117,148,154,271,298,341,],[146,146,146,146,146,146,146,]),'integer_mode':([48,117,148,154,211,255,271,295,298,299,341,],[150,150,150,150,150,150,150,150,150,150,150,]),'procedure_statement':([0,3,51,329,340,],[37,37,37,37,37,]),'character_literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'builtin_name':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'mode_definition':([7,153,],[55,55,]),'synonym_definition':([33,193,],[118,118,]),'index_mode_list':([211,299,],[262,323,]),'elsif_expression':([240,],[282,]),'formal_parameter_list':([221,304,],[273,326,]),'declaration':([1,130,],[46,46,]),'composite_mode':([48,117,148,154,271,298,341,],[133,133,133,133,133,133,133,]),'operand2':([30,31,45,60,68,72,76,91,105,120,124,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[79,79,79,79,79,79,79,79,79,79,79,227,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'character_string_literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'string_length':([210,],[258,]),'action':([0,3,43,51,119,121,188,200,242,244,329,340,],[6,6,6,6,194,6,6,6,6,6,6,6,]),'procedure_call':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'action_statement':([0,3,43,51,121,188,200,242,244,329,340,],[9,9,121,9,121,242,121,121,242,9,9,]),'value_array_element':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'operand1':([30,31,45,60,68,72,76,91,105,120,124,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[87,87,87,87,87,87,87,87,87,87,87,229,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'arithmetic_multiplicative_operator':([22,79,227,],[75,169,169,]),'referenced_location':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'else_expression':([240,282,],[280,310,]),'string_mode':([48,117,148,154,271,298,341,],[137,137,137,137,137,137,137,]),'boolean_expression':([30,31,45,60,68,72,76,91,105,120,124,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[92,114,92,92,92,92,92,92,187,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,288,92,92,92,92,92,312,92,92,332,92,92,]),'array_mode':([48,117,148,154,271,298,341,],[145,145,145,145,145,145,145,]),'if_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'builtin_call':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'discrete_range_mode':([48,117,148,154,211,255,271,295,298,299,341,],[147,147,147,147,147,147,147,147,147,147,147,]),'character_mode':([48,117,148,154,211,255,271,295,298,299,341,],[149,149,149,149,149,149,149,149,149,149,149,]),'string_concatenation_operator':([22,87,229,],[73,172,172,]),'parenthesized_expression':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'control_part':([43,],[123,]),'element_mode':([298,],[322,]),'expression':([30,31,45,60,68,72,76,91,105,120,124,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[97,115,129,158,162,164,158,174,115,196,201,230,231,232,233,234,235,236,237,239,248,260,260,268,260,158,275,277,284,115,289,290,296,307,309,115,260,277,115,338,339,]),'boolean_mode':([48,117,148,154,211,255,271,295,298,299,341,],[132,132,132,132,132,132,132,132,132,132,132,]),'array_location':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[22,22,100,100,22,100,22,100,100,100,100,168,100,100,100,22,100,22,100,100,100,100,100,100,100,100,100,100,100,100,100,22,100,22,100,100,100,100,100,100,100,100,22,22,100,100,100,100,100,100,100,100,100,100,100,100,22,22,]),'for_control':([43,],[127,]),'array_element':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'operand4':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[103,103,103,103,103,103,103,170,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'program':([0,],[42,]),'array_slice':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'conditional_expression':([30,31,45,60,68,72,76,91,105,120,124,178,179,180,181,182,183,184,185,186,191,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'declaration_list':([1,130,],[49,208,]),'declaration_statement':([0,3,51,329,340,],[26,26,26,26,26,]),'then_clause':([114,288,],[189,313,]),'result':([30,],[107,]),'step_value':([296,],[316,]),'membership_operator':([95,],[176,]),'discrete_mode':([48,117,148,154,211,255,271,295,298,299,341,],[143,143,143,143,264,294,143,315,143,264,143,]),'lower_bound':([72,211,212,215,299,],[165,265,265,265,265,]),'arithmetic_additive_operator':([22,87,229,],[65,171,171,]),'string_element':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'integer_literal':([30,31,45,60,68,72,76,82,91,105,120,124,169,173,177,178,179,180,181,182,183,184,185,186,191,210,211,212,214,215,220,223,224,241,247,249,253,257,279,281,283,299,300,311,318,320,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,259,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'location':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'label_id':([10,],[58,]),'string_slice':([0,3,30,31,43,45,51,60,68,72,76,77,82,91,105,119,120,121,124,169,173,177,178,179,180,181,182,183,184,185,186,188,191,200,211,212,214,215,220,223,224,241,242,244,247,249,253,257,279,281,283,299,300,311,318,320,329,340,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'initialization':([141,],[213,]),'literal_range':([211,212,215,299,],[266,267,269,266,]),'end_value':([296,316,317,336,],[319,335,337,344,]),'result_action':([0,3,43,51,119,121,188,200,242,244,329,340,],[29,29,29,29,29,29,29,29,29,29,29,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> boolean_expression','expression',1,'p_expression','Parser.py',416),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',417),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',421),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','Parser.py',425),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','Parser.py',426),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',427),
  ('boolean_expression -> expression NOTEQ expression','boolean_expression',3,'p_boolean_expression','Parser.py',428),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','Parser.py',429),
  ('boolean_expression -> expression GTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',430),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','Parser.py',431),
  ('boolean_expression -> expression LTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',432),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',534),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',535),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',540),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',544),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',549),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',564),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',571),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',572),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',576),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',580),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',588),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',593),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',597),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',601),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',605),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',616),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',617),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',622),
  ('action -> assignment_action','action',1,'p_action','Parser.py',623),
  ('action -> call_action','action',1,'p_action','Parser.py',624),
  ('action -> exit_action','action',1,'p_action','Parser.py',625),
  ('action -> result_action','action',1,'p_action','Parser.py',626),
  ('action -> return_action','action',1,'p_action','Parser.py',627),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',632),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',636),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',640),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',641),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',647),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',651),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','Parser.py',652),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',656),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',661),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','Parser.py',662),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',673),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',685),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',686),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',703),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',704),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',708),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',709),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',721),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',725),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',726),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',730),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',731),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',740),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',744),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',748),
  ('result -> expression','result',1,'p_result','Parser.py',752),
  ('result -> empty','result',1,'p_result','Parser.py',753),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',756),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',764),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',765),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',772),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',773),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',774),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',778),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',783),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',789),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',790),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',802),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',806),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',810),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',811),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',818),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',824),
]

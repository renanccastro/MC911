
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT TRUE WHILE ELSE PRINT END ARRAY RESULT DOWN IF NULL LOWER RETURNS UPPER PROC TO THEN NUM DO ASC EXIT BY ELSIF TYPE LENGTH RETURN READ FOR DCL REF OD CHARS FI SYN FALSE IN INT ABS BOOL LOC CHARprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | boolean_expression\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENboolean_expression : expression AND expression\n                              | expression OR expression\n                              | expression EQUAL expression\n                              | expression NOTEQ expression\n                              | expression GREATER expression\n                              | expression GTEQUAL expression\n                              | expression LESS expression\n                              | expression LTEQUAL expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF boolean_expression then_clause else_clause FI\n                     | IF boolean_expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF boolean_expression then_clause else_clause\n                       | ELSIF boolean_expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT label_idlabel_id : IDreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'RPAREN':([2,5,10,16,17,20,40,41,49,59,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,101,103,112,123,142,143,144,151,154,168,173,175,178,179,181,182,184,186,187,188,189,190,191,192,198,199,214,215,226,227,228,229,230,231,232,233,234,235,238,239,245,252,255,264,265,266,278,280,291,295,303,306,311,314,318,319,320,326,330,332,335,336,337,338,345,349,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,142,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-23,-85,198,-73,-181,-182,214,-108,-118,238,-57,-37,-56,-40,-48,-44,-38,-41,-39,-45,-43,-49,-47,-42,-171,252,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-55,-170,-79,304,-31,-183,-135,314,319,-54,-34,-76,-96,-50,-58,-51,-82,-33,-32,-97,-136,-52,-60,-65,348,352,]),'CONCAT':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,95,96,97,123,142,148,151,154,198,214,215,226,227,238,239,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,124,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,124,-73,-181,-23,-108,-118,-171,-180,-74,-107,124,-87,-105,-170,-79,-135,-66,-76,-82,-136,]),'LTEQUAL':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,163,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,163,163,-73,163,-181,163,163,-85,-108,-118,163,-171,163,163,-180,-74,-107,-103,-93,163,-92,163,-95,163,163,-94,163,-87,-105,163,-170,-79,163,163,163,-85,-135,163,-66,163,163,163,163,-76,163,-85,-96,163,-82,163,163,-85,-97,-136,]),'FI':([2,5,10,16,17,20,40,41,49,51,56,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,105,123,135,142,151,152,154,198,214,215,217,221,224,225,226,227,228,229,230,231,232,233,234,235,238,239,252,255,272,276,277,278,306,308,309,311,312,320,332,334,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-207,-167,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-144,-73,-166,-181,-108,220,-118,-171,-180,-74,-143,274,-207,-161,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,311,-162,-165,-135,-76,332,-99,-96,-164,-82,-97,-163,-136,]),'IF':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,94,105,112,117,118,125,139,141,153,159,160,161,162,163,164,165,166,167,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[24,24,-9,24,-7,64,-6,-8,64,64,-5,24,24,64,64,64,24,64,64,-144,64,64,-155,64,24,-28,24,64,64,64,64,64,64,64,64,64,64,-10,-15,-24,-154,64,64,64,-143,64,64,24,24,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,24,24,-30,-29,]),'READ':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[6,6,-9,6,-7,6,-6,-8,6,6,-5,6,6,6,6,6,6,6,6,-116,-117,6,6,-144,6,6,-155,-123,-122,-115,-124,6,-113,-114,6,-28,6,6,6,-119,-125,6,6,6,6,6,6,6,6,6,-120,6,-121,6,-10,-15,-24,-154,6,6,6,-143,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-30,-29,]),'SEMI':([1,2,4,5,10,13,15,16,17,19,20,23,30,32,35,38,40,41,49,53,55,57,60,61,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,100,101,102,103,104,107,108,109,110,111,114,115,123,131,133,134,136,137,138,142,149,151,154,173,175,178,179,181,182,184,186,187,188,189,190,191,192,195,198,206,214,215,220,226,227,228,229,230,231,232,233,234,235,238,239,245,247,248,250,251,252,253,254,255,258,262,274,278,290,292,297,299,304,306,311,314,318,319,320,321,322,324,328,332,335,337,338,340,347,348,350,352,],[-145,-169,-146,-83,-168,-149,-150,-68,-70,-152,-67,-151,105,-207,-147,-148,-71,-69,-23,-193,-194,139,-184,-185,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,193,-23,-11,-85,-189,196,-16,-186,-187,-188,-25,202,-73,-196,-197,-195,-191,-192,-206,-181,217,-108,-118,-57,-37,-56,-40,-48,-44,-38,-41,-39,-45,-43,-49,-47,-42,-19,-171,-153,-180,-74,-160,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-55,-14,-12,-18,-17,-170,-27,-26,-79,-205,-190,-159,-135,-13,-20,-204,-201,329,-76,-96,-50,-58,-51,-82,-203,-199,-200,342,-97,-136,-60,-65,-198,351,-36,353,-35,]),'RETURN':([0,3,7,8,22,26,28,39,47,51,63,105,139,141,153,193,196,202,217,223,224,329,342,351,353,],[32,32,-9,32,-7,-6,-8,-5,32,32,32,-144,32,-28,32,-10,-15,-24,-143,32,32,32,32,-30,-29,]),'DO':([0,3,7,8,22,26,28,39,47,51,63,105,139,141,153,193,196,202,217,223,224,329,342,351,353,],[8,8,-9,8,-7,-6,-8,-5,8,8,8,-144,8,-28,8,-10,-15,-24,-143,8,8,8,8,-30,-29,]),'ID':([0,3,7,8,12,22,24,25,26,28,29,31,32,39,42,47,50,51,54,59,62,63,64,69,71,77,78,94,98,99,101,105,106,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,183,185,193,194,196,197,200,201,202,207,208,210,212,213,216,217,219,222,223,224,240,241,242,244,246,249,256,257,260,263,270,271,279,298,302,305,307,315,316,317,329,341,342,351,353,],[9,9,-9,49,61,-7,49,101,-6,-8,49,101,49,-5,101,9,101,49,49,49,49,148,49,49,-116,-117,49,49,-21,101,-23,-144,101,49,49,-155,-123,-122,-115,-124,49,-113,-114,49,-28,49,49,49,-119,-125,49,49,49,49,49,49,49,49,49,-120,49,-121,101,101,49,-10,101,-15,101,101,101,-24,-154,101,49,101,49,49,-143,49,49,49,49,-22,49,49,49,49,49,49,49,101,101,49,49,49,49,49,101,49,49,101,49,9,101,9,-30,-29,]),'UPPER':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[11,11,-9,11,-7,11,-6,-8,11,11,-5,11,11,11,11,11,11,11,11,-116,-117,11,11,-144,11,11,-155,-123,-122,-115,-124,11,-113,-114,11,-28,11,11,11,-119,-125,11,11,11,11,11,11,11,11,11,-120,11,-121,11,-10,-15,-24,-154,11,11,11,-143,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-30,-29,]),'EXIT':([0,3,7,8,22,26,28,39,47,51,63,105,139,141,153,193,196,202,217,223,224,329,342,351,353,],[12,12,-9,12,-7,-6,-8,-5,12,12,12,-144,12,-28,12,-10,-15,-24,-143,12,12,12,12,-30,-29,]),'EQUAL':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,162,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,162,162,-73,162,-181,162,162,-85,-108,-118,162,-171,162,162,-180,-74,-107,-103,-93,162,-92,-90,-95,-91,162,-94,162,-87,-105,162,-170,-79,162,162,162,-85,-135,162,-66,162,162,162,162,-76,162,-85,-96,162,-82,162,162,-85,-97,-136,]),'DOWN':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,101,103,123,132,142,151,154,198,214,215,226,227,228,229,230,231,232,233,234,235,238,239,252,255,261,278,300,306,311,320,325,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-23,-85,-73,209,-181,-108,-118,-171,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,301,-135,323,-76,-96,-82,-202,-97,-136,]),'ABS':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[14,14,-9,14,-7,14,-6,-8,14,14,-5,14,14,14,14,14,14,14,14,-116,-117,14,14,-144,14,14,-155,-123,-122,-115,-124,14,-113,-114,14,-28,14,14,14,-119,-125,14,14,14,14,14,14,14,14,14,-120,14,-121,14,-10,-15,-24,-154,14,14,14,-143,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-30,-29,]),'ARROW':([2,5,9,10,16,17,20,21,24,29,32,35,40,41,45,49,54,59,62,64,69,71,75,77,88,94,95,112,117,118,119,120,121,123,124,125,127,128,142,148,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,198,207,210,213,214,215,216,219,222,241,242,244,246,249,252,255,256,257,270,271,279,284,298,302,306,307,315,317,320,],[-169,-83,-23,-168,-68,-70,-67,-66,78,78,78,-72,-71,-69,123,-23,78,78,78,78,78,-116,-66,-117,-72,78,123,78,78,-155,-123,-122,-115,-73,-124,78,-113,-114,-181,-23,123,78,78,-119,-125,78,78,78,78,78,78,78,78,78,-120,78,-121,78,-171,-154,78,78,-180,-74,78,78,78,78,78,78,78,78,-170,-79,78,78,78,78,78,-66,78,78,-76,78,78,78,-82,]),'PLUS':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,95,96,97,123,142,148,151,154,198,214,215,226,227,238,239,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,120,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,120,-73,-181,-23,-108,-118,-171,-180,-74,-107,120,-87,-105,-170,-79,-135,-66,-76,-82,-136,]),'NUM':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[27,27,-9,27,-7,27,-6,-8,27,27,-5,27,27,27,27,27,27,27,27,-116,-117,27,27,-144,27,27,-155,-123,-122,-115,-124,27,-113,-114,27,-28,27,27,27,-119,-125,27,27,27,27,27,27,27,27,27,-120,27,-121,27,-10,-15,-24,-154,27,27,27,-143,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-30,-29,]),'RETURNS':([304,],[327,]),'LOWER':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[43,43,-9,43,-7,43,-6,-8,43,43,-5,43,43,43,43,43,43,43,43,-116,-117,43,43,-144,43,43,-155,-123,-122,-115,-124,43,-113,-114,43,-28,43,43,43,-119,-125,43,43,43,43,43,43,43,43,43,-120,43,-121,43,-10,-15,-24,-154,43,43,43,-143,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-30,-29,]),'FOR':([8,],[50,]),'$end':([3,7,18,22,26,28,37,39,46,47,48,105,130,141,193,196,202,217,351,353,],[-207,-9,0,-7,-6,-8,-1,-5,-2,-207,-4,-144,-3,-28,-10,-15,-24,-143,-30,-29,]),'ICONST':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,243,244,246,249,256,257,270,271,279,298,302,307,315,317,],[65,65,65,65,65,65,65,65,-116,-117,65,65,65,-155,-123,-122,-115,-124,65,-113,-114,65,65,-119,-125,65,65,65,65,65,65,65,65,65,-120,65,-121,65,-154,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'GTEQUAL':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,159,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,159,159,-73,159,-181,159,159,-85,-108,-118,159,-171,159,159,-180,-74,-107,-103,-93,159,-92,159,-95,159,159,-94,159,-87,-105,159,-170,-79,159,159,159,-85,-135,159,-66,159,159,159,159,-76,159,-85,-96,159,-82,159,159,-85,-97,-136,]),'NOT':([24,29,32,54,59,62,64,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[77,77,77,77,77,77,77,77,77,77,-155,-123,-122,-115,-124,77,-113,-114,77,77,-119,-125,77,77,77,77,77,77,77,77,77,-120,77,-121,77,-154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'COLON':([2,5,9,10,16,17,20,21,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,142,146,147,151,154,198,204,205,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,252,255,278,281,282,284,306,311,320,332,335,],[-169,-83,58,-168,-68,-70,-67,63,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-181,216,-77,-108,-118,-171,-53,257,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,279,-87,-105,-170,-79,-135,-53,315,-66,-76,-96,-82,-97,-136,]),'INT':([98,99,101,106,183,200,208,240,242,260,263,316,317,341,],[-21,191,-23,191,191,191,191,-22,191,191,191,191,191,191,]),'TIMES':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,95,96,123,142,148,151,154,198,214,215,226,238,239,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,127,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,127,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,-73,-181,-23,-108,-118,-171,-180,-74,-107,-87,127,-170,-79,-135,-66,-76,-82,-136,]),'RBRACKET':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,142,145,147,151,154,181,182,188,189,190,191,192,198,203,204,214,215,226,227,228,229,230,231,232,233,234,235,236,237,238,239,252,255,267,268,278,283,285,286,287,288,289,293,294,295,296,306,311,313,314,319,320,332,335,336,339,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-181,215,-75,-108,-118,-48,-44,-45,-43,-49,-47,-42,-171,255,-80,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,278,-80,-87,-105,-170,-79,306,-78,-135,316,-61,-63,-64,318,-59,-81,-80,-54,320,-76,-96,335,-50,-51,-82,-97,-136,-52,-62,]),'GREATER':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,161,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,161,161,-73,161,-181,161,161,-85,-108,-118,161,-171,161,161,-180,-74,-107,-103,-93,161,-92,161,-95,161,161,-94,161,-87,-105,161,-170,-79,161,161,161,-85,-135,161,-66,161,161,161,161,-76,161,-85,-96,161,-82,161,161,-85,-97,-136,]),'LOC':([101,173,175,178,179,181,182,184,186,187,188,189,190,191,192,245,303,314,318,319,337,338,345,],[-23,-57,-37,-56,-40,-48,-44,-38,-41,-39,-45,-43,-49,-47,-42,-55,326,-50,-58,-51,-60,-65,349,]),'SYN':([0,3,7,22,26,28,39,47,105,141,193,196,202,217,329,342,351,353,],[25,25,-9,-7,-6,-8,-5,25,-144,-28,-10,-15,-24,-143,25,25,-30,-29,]),'ARRAY':([98,99,101,106,183,200,240,263,316,341,],[-21,176,-23,176,176,176,-22,176,176,176,]),'FALSE':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[82,82,82,82,82,82,82,82,-116,-117,82,82,82,-155,-123,-122,-115,-124,82,-113,-114,82,82,-119,-125,82,82,82,82,82,82,82,82,82,-120,82,-121,82,-154,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RESULT':([0,3,7,8,22,26,28,39,47,51,63,105,139,141,153,193,196,202,217,223,224,329,342,351,353,],[29,29,-9,29,-7,-6,-8,-5,29,29,29,-144,29,-28,29,-10,-15,-24,-143,29,29,29,29,-30,-29,]),'IN':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,90,91,92,93,95,96,97,101,123,132,142,151,154,198,209,214,215,226,227,238,239,252,255,278,284,306,320,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,158,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,-102,-23,-73,208,-181,-108,-118,-171,260,-180,-74,-107,-103,-87,-105,-170,-79,-135,-66,-76,-82,-136,]),'MINUS':([2,5,9,10,16,17,20,21,24,29,32,35,40,41,45,49,54,59,62,64,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,94,95,96,97,112,117,118,119,120,121,123,124,125,127,128,142,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,198,207,210,213,214,215,216,219,222,226,227,238,239,241,242,244,246,249,252,255,256,257,270,271,278,279,284,298,302,306,307,315,317,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,71,71,71,-72,-71,-69,119,-23,71,71,71,71,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,71,-110,-130,119,71,71,-155,-123,-122,-115,-73,-124,71,-113,-114,-181,-23,-108,-118,71,71,-119,-125,71,71,71,71,71,71,71,71,71,-120,71,-121,71,-171,-154,71,71,-180,-74,71,71,71,-107,119,-87,-105,71,71,71,71,71,-170,-79,71,71,71,71,-135,71,-66,71,71,-76,71,71,71,-82,-136,]),'TRUE':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[84,84,84,84,84,84,84,84,-116,-117,84,84,84,-155,-123,-122,-115,-124,84,-113,-114,84,84,-119,-125,84,84,84,84,84,84,84,84,84,-120,84,-121,84,-154,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'CHARS':([98,99,101,106,183,200,240,263,316,341,],[-21,177,-23,177,177,177,-22,177,177,177,]),'LPAREN':([6,9,11,14,24,27,29,32,33,34,36,43,44,49,54,59,62,64,69,71,77,94,101,112,117,118,119,120,121,124,125,127,128,140,148,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,174,181,182,184,185,186,188,189,190,191,192,207,210,213,216,219,222,241,242,244,246,249,256,257,258,259,270,271,279,284,286,297,298,302,307,314,315,317,319,327,],[-178,59,-175,-172,94,-174,94,94,-173,-177,112,-176,-179,59,94,94,94,94,94,-116,-117,94,-23,94,94,-155,-123,-122,-115,-124,94,-113,-114,212,59,94,94,-119,-125,94,94,94,94,94,94,94,94,94,-120,94,-121,241,-48,-44,246,94,-46,-45,-43,-49,-47,-42,-154,94,94,94,94,94,94,94,94,94,94,94,94,246,-46,94,94,94,-46,246,246,94,94,94,-50,94,94,-51,341,]),'LESS':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,166,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,166,166,-73,166,-181,166,166,-85,-108,-118,166,-171,166,166,-180,-74,-107,-103,-93,166,-92,166,-95,166,166,-94,166,-87,-105,166,-170,-79,166,166,166,-85,-135,166,-66,166,166,166,166,-76,166,-85,-96,166,-82,166,166,-85,-97,-136,]),'TO':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,142,151,154,198,214,215,226,227,228,229,230,231,232,233,234,235,238,239,252,255,261,278,300,301,306,311,320,323,325,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-181,-108,-118,-171,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,298,-135,298,298,-76,-96,-82,298,-202,-97,-136,]),'DCL':([0,3,7,22,26,28,39,47,105,141,193,196,202,217,329,342,351,353,],[31,31,-9,-7,-6,-8,-5,31,-144,-28,-10,-15,-24,-143,31,31,-30,-29,]),'CHAR':([98,99,101,106,183,200,208,240,242,260,263,316,317,341,],[-21,190,-23,190,190,190,190,-22,190,190,190,190,190,190,]),'ASC':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[33,33,-9,33,-7,33,-6,-8,33,33,-5,33,33,33,33,33,33,33,33,-116,-117,33,33,-144,33,33,-155,-123,-122,-115,-124,33,-113,-114,33,-28,33,33,33,-119,-125,33,33,33,33,33,33,33,33,33,-120,33,-121,33,-10,-15,-24,-154,33,33,33,-143,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,-29,]),'WHILE':([2,5,8,10,16,17,20,40,41,49,53,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,131,133,134,142,151,154,181,182,188,189,190,191,192,198,214,215,226,227,228,229,230,231,232,233,234,235,238,239,252,255,258,278,297,299,306,311,314,319,320,321,322,324,332,335,340,],[-169,-83,54,-168,-68,-70,-67,-71,-69,-23,54,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-196,-197,-195,-181,-108,-118,-48,-44,-45,-43,-49,-47,-42,-171,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,-205,-135,-204,-201,-76,-96,-50,-51,-82,-203,-199,-200,-97,-136,-198,]),'CCONST':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[66,66,66,66,66,66,66,66,-116,-117,66,66,66,-155,-123,-122,-115,-124,66,-113,-114,66,66,-119,-125,66,66,66,66,66,66,66,66,66,-120,66,-121,66,-154,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'OR':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,165,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,165,165,-73,165,-181,165,165,-85,-108,-118,165,-171,165,165,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,165,-87,-105,165,-170,-79,165,165,165,-85,-135,165,-66,165,165,165,165,-76,165,-85,-96,165,-82,165,165,-85,-97,-136,]),'BOOL':([98,99,101,106,183,200,208,240,242,260,263,316,317,341,],[-21,181,-23,181,181,181,181,-22,181,181,181,181,181,181,]),'REF':([98,99,101,106,183,200,240,263,316,341,],[-21,183,-23,183,183,183,-22,183,183,183,]),'END':([7,22,26,28,39,47,48,105,130,141,193,196,202,217,329,342,343,346,351,353,],[-9,-7,-6,-8,-5,-207,-4,-144,-3,-28,-10,-15,-24,-143,-207,-207,347,350,-30,-29,]),'AND':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,160,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,160,160,-73,160,-181,160,160,-85,-108,-118,160,-171,160,160,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,160,-87,-105,160,-170,-79,160,160,160,-85,-135,160,-66,160,160,160,160,-76,160,-85,-96,160,-82,160,160,-85,-97,-136,]),'ASSIGN':([2,5,9,10,16,17,20,21,35,40,41,45,49,75,98,99,101,113,116,119,120,121,122,123,124,126,127,128,129,132,142,148,173,175,178,179,180,181,182,184,186,187,188,189,190,191,192,195,198,214,215,240,245,252,255,306,314,318,319,320,337,338,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,118,-23,-66,-21,185,-23,200,-158,-123,-122,-115,-157,-73,-124,-156,-113,-114,207,210,-181,-23,-57,-37,-56,-40,244,-48,-44,-38,-41,-39,-45,-43,-49,-47,-42,249,-171,-180,-74,-22,-55,-170,-79,-76,-50,-58,-51,-82,-60,-65,]),'DIVIDE':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,95,96,123,142,148,151,154,198,214,215,226,238,239,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,128,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,128,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,-73,-181,-23,-108,-118,-171,-180,-74,-107,-87,128,-170,-79,-135,-66,-76,-82,-136,]),'PROC':([58,],[140,]),'OD':([8,51,52,56,105,135,139,211,217,],[-207,-207,136,-167,-144,-166,-207,262,-143,]),'COMMA':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,98,101,102,103,108,114,123,142,143,151,154,173,175,178,179,181,182,184,186,187,188,189,190,191,192,195,198,204,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,245,247,250,252,253,255,265,278,285,286,287,290,292,294,295,303,306,311,314,318,319,320,326,332,335,336,337,338,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,172,-23,194,-85,197,201,-73,-181,213,-108,-118,-57,-37,-56,-40,-48,-44,-38,-41,-39,-45,-43,-49,-47,-42,-19,-171,256,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,256,-87,-105,-55,-14,-18,-170,-27,-79,305,-135,317,-63,-64,-13,-20,256,-54,-34,-76,-96,-50,-58,-51,-82,-33,-97,-136,-52,-60,-65,]),'NULL':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[67,67,67,67,67,67,67,67,-116,-117,67,67,67,-155,-123,-122,-115,-124,67,-113,-114,67,67,-119,-125,67,67,67,67,67,67,67,67,67,-120,67,-121,67,-154,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'SCONST':([24,29,32,54,59,62,64,69,71,77,94,112,117,118,119,120,121,124,125,127,128,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,207,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[92,92,92,92,92,92,92,92,-116,-117,92,92,92,-155,-123,-122,-115,-124,92,-113,-114,92,92,-119,-125,92,92,92,92,92,92,92,92,92,-120,92,-121,92,-154,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'MODULO':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,73,74,75,79,81,82,83,84,85,87,88,90,91,92,93,95,96,123,142,148,151,154,198,214,215,226,238,239,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,-66,-72,-71,-69,121,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,121,-133,-139,-126,-138,-132,-112,-72,-128,-111,-142,-109,-110,-130,-73,-181,-23,-108,-118,-171,-180,-74,-107,-87,121,-170,-79,-135,-66,-76,-82,-136,]),'TYPE':([0,3,7,22,26,28,39,47,105,141,193,196,202,217,329,342,351,353,],[42,42,-9,-7,-6,-8,-5,42,-144,-28,-10,-15,-24,-143,42,42,-30,-29,]),'LBRACKET':([2,5,9,10,16,17,20,21,35,40,41,45,49,65,66,67,68,70,72,74,75,81,82,83,84,85,87,88,90,92,95,96,123,142,148,154,176,177,198,214,215,238,252,255,278,284,306,320,335,],[-169,-83,-23,-168,-68,-70,-67,62,-72,-71,-69,117,-23,-137,-140,-141,-131,-134,-129,-127,62,-133,-139,-126,-138,-132,167,-72,-128,-142,117,-130,-73,-181,-23,117,242,243,-171,-180,-74,-87,-170,-79,-135,62,-76,-82,-136,]),'LENGTH':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[34,34,-9,34,-7,34,-6,-8,34,34,-5,34,34,34,34,34,34,34,34,-116,-117,34,34,-144,34,34,-155,-123,-122,-115,-124,34,-113,-114,34,-28,34,34,34,-119,-125,34,34,34,34,34,34,34,34,34,-120,34,-121,34,-10,-15,-24,-154,34,34,34,-143,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-30,-29,]),'THEN':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,142,150,151,154,198,214,215,226,227,228,229,230,231,232,233,234,235,238,239,252,255,275,278,306,310,311,320,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,153,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-181,219,-108,-118,-171,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,153,-135,-76,219,-96,-82,219,-97,-136,]),'NOTEQ':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,103,104,110,123,138,142,143,147,150,151,154,168,198,204,206,214,215,226,227,228,229,230,231,232,233,234,235,237,238,239,247,252,255,261,268,273,275,278,281,284,290,292,294,295,306,309,310,311,313,320,321,325,331,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-85,-104,-84,-133,-139,-126,-138,-132,164,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,164,164,-73,164,-181,164,164,-85,-108,-118,164,-171,164,164,-180,-74,-107,-103,-93,164,-92,-90,-95,-91,164,-94,164,-87,-105,164,-170,-79,164,164,164,-85,-135,164,-66,164,164,164,164,-76,164,-85,-96,164,-82,164,164,-85,-97,-136,]),'BY':([2,5,10,16,17,20,40,41,49,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,123,142,151,154,198,214,215,226,227,228,229,230,231,232,233,234,235,238,239,252,255,261,278,306,311,320,332,335,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-73,-181,-108,-118,-171,-180,-74,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,302,-135,-76,-96,-82,-97,-136,]),'ELSE':([2,5,10,16,17,20,40,41,49,51,56,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,105,123,135,142,151,152,154,198,214,215,217,218,224,225,226,227,228,229,230,231,232,233,234,235,238,239,252,255,269,273,277,278,306,311,312,320,332,333,335,344,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-207,-167,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-144,-73,-166,-181,-108,223,-118,-171,-180,-74,-143,270,-207,-161,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,270,-98,-165,-135,-76,-96,223,-82,-97,-100,-136,-101,]),'ELSIF':([2,5,10,16,17,20,40,41,49,51,56,65,66,67,68,70,72,73,74,75,79,80,81,82,83,84,85,87,88,89,90,91,92,93,95,96,97,103,105,123,135,142,151,152,154,198,214,215,217,218,224,225,226,227,228,229,230,231,232,233,234,235,238,239,252,255,269,273,277,278,306,311,312,320,332,333,335,344,],[-169,-83,-168,-68,-70,-67,-71,-69,-23,-207,-167,-137,-140,-141,-131,-134,-129,-106,-127,-66,-104,-84,-133,-139,-126,-138,-132,-112,-72,-86,-128,-111,-142,-109,-110,-130,-102,-85,-144,-73,-166,-181,-108,222,-118,-171,-180,-74,-143,271,-207,-161,-107,-103,-93,-88,-92,-90,-95,-91,-89,-94,-87,-105,-170,-79,307,-98,-165,-135,-76,-96,222,-82,-97,-100,-136,-101,]),'PRINT':([0,3,7,8,22,24,26,28,29,32,39,47,51,54,59,62,63,64,69,71,77,78,94,105,112,117,118,119,120,121,124,125,127,128,139,141,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,185,193,196,202,207,210,213,216,217,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,351,353,],[44,44,-9,44,-7,44,-6,-8,44,44,-5,44,44,44,44,44,44,44,44,-116,-117,44,44,-144,44,44,-155,-123,-122,-115,-124,44,-113,-114,44,-28,44,44,44,-119,-125,44,44,44,44,44,44,44,44,44,-120,44,-121,44,-10,-15,-24,-154,44,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_nullable':([3,47,329,342,],[46,130,343,346,]),'bracketed_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'discrete_mode_name':([99,106,183,200,208,242,260,263,316,317,341,],[174,174,174,174,174,174,174,174,174,174,174,]),'string_slice':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'mode_name':([99,106,183,200,263,316,341,],[175,175,175,175,175,175,175,]),'array_mode':([99,106,183,200,263,316,341,],[173,173,173,173,173,173,173,]),'value_array_element':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'statement':([0,3,47,329,342,],[3,47,47,47,47,]),'assignment_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'string_mode':([99,106,183,200,263,316,341,],[178,178,178,178,178,178,178,]),'literal_range':([241,242,246,317,],[280,287,291,287,]),'integer_mode':([99,106,183,200,208,242,260,263,316,317,341,],[192,192,192,192,192,192,192,192,192,192,192,]),'then_expression':([150,310,331,],[218,333,344,]),'newmode_statement':([0,3,47,329,342,],[22,22,22,22,22,]),'monadic_operator':([24,29,32,54,59,62,64,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'character_mode':([99,106,183,200,208,242,260,263,316,317,341,],[182,182,182,182,182,182,182,182,182,182,182,]),'return_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'elsif_expression':([218,],[269,]),'parenthesized_expression':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'result_spec':([304,],[328,]),'operand3':([24,29,32,54,59,62,64,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[73,73,73,73,73,73,73,73,73,73,73,226,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'declaration_list':([31,197,],[107,251,]),'identifier':([0,3,8,24,25,29,31,32,42,47,50,51,54,59,62,63,64,69,78,94,99,106,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,172,183,185,194,197,200,201,208,210,212,213,216,219,222,223,224,241,242,244,246,249,256,257,260,263,270,271,279,298,302,305,307,315,316,317,329,341,342,],[21,21,21,75,98,75,98,75,98,21,132,21,75,75,75,75,75,75,75,75,186,186,75,75,75,21,21,75,75,75,75,75,75,75,75,75,75,75,75,98,186,75,98,98,186,98,259,75,98,75,75,75,75,21,21,75,284,75,75,75,75,75,259,186,75,75,75,75,75,98,75,75,186,284,21,186,21,]),'assigning_operator':([45,],[125,]),'discrete_range_mode':([99,106,183,200,208,242,260,263,316,317,341,],[188,188,188,188,188,188,188,188,188,188,188,]),'if_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'empty':([3,8,32,47,51,139,224,329,342,],[48,56,111,48,56,56,56,48,48,]),'range_enumeration':([50,],[133,]),'operand2':([24,29,32,54,59,62,64,94,112,117,125,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,239,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'action_statement_nullable':([8,51,139,224,],[52,135,211,277,]),'left_element':([62,],[146,]),'end_value':([261,300,301,323,],[299,322,324,340,]),'declaration':([31,197,],[108,108,]),'mode_definition':([42,201,],[114,114,]),'mode':([99,106,183,200,263,316,341,],[180,195,245,253,303,338,345,]),'newmode_list':([42,201,],[115,254,]),'synonym_definition':([25,194,],[102,102,]),'character_literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'string_length':([243,],[288,]),'index_mode_list':([242,317,],[283,339,]),'index_mode':([242,317,],[285,285,]),'composite_mode':([99,106,183,200,263,316,341,],[179,179,179,179,179,179,179,]),'conditional_expression':([24,29,32,54,59,62,64,94,112,117,125,159,160,161,162,163,164,165,166,167,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'referenced_location':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'parameter_list':([59,112,213,],[144,199,266,]),'array_slice':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'else_expression':([218,269,],[272,308,]),'character_string_literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'right_element':([216,],[267,]),'reference_mode':([99,106,183,200,263,316,341,],[187,187,187,187,187,187,187,]),'synonym_list':([25,194,],[100,248,]),'string_concatenation_operator':([45,97,227,],[116,171,171,]),'integer_literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,243,244,246,249,256,257,270,271,279,298,302,307,315,317,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,289,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operand1':([24,29,32,54,59,62,64,94,112,117,125,156,159,160,161,162,163,164,165,166,167,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[97,97,97,97,97,97,97,97,97,97,97,227,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'array_location':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[45,45,45,95,95,95,45,45,95,95,95,45,95,95,154,95,95,95,95,45,45,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,45,45,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,45,45,]),'array_element':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expression_list':([117,167,256,],[203,236,293,]),'builtin_call':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'result':([32,],[109,]),'membership_operator':([80,],[157,]),'procedure_statement':([0,3,47,329,342,],[7,7,7,7,7,]),'discrete_mode':([99,106,183,200,208,242,260,263,316,317,341,],[184,184,184,184,258,286,297,184,184,286,184,]),'element_mode':([316,],[337,]),'procedure_call':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'operand4':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[93,93,93,93,93,93,93,151,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'result_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'iteration':([50,],[134,]),'location':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'step_value':([261,],[300,]),'string_element':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'program':([0,],[18,]),'arithmetic_multiplicative_operator':([45,79,239,],[122,155,155,]),'dereferenced_reference':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'do_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'boolean_expression':([24,29,32,54,59,62,64,94,112,117,125,159,160,161,162,163,164,165,166,167,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[76,103,103,103,103,103,150,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,275,103,103,103,103,103,103,103,103,310,103,103,103,331,103,103,]),'arithmetic_additive_operator':([45,97,227,],[126,169,169,]),'action':([0,3,8,47,51,63,139,153,223,224,329,342,],[30,30,30,30,30,149,30,30,30,30,30,30,]),'while_control':([8,53,],[55,137,]),'start_element':([62,],[145,]),'synonym_statement':([0,3,47,329,342,],[26,26,26,26,26,]),'action_statement':([0,3,8,47,51,139,153,223,224,329,342,],[28,28,51,28,51,51,224,224,51,28,28,]),'operand0':([24,29,32,54,59,62,64,94,112,117,125,159,160,161,162,163,164,165,166,167,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'operator2':([97,227,],[170,170,]),'procedure_definition':([58,],[141,]),'empty_literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'identifier_list':([25,31,42,172,194,197,201,212,305,],[99,106,113,240,99,106,113,263,263,]),'action_statement_list':([153,223,],[225,276,]),'for_control':([8,],[53,]),'literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'expression':([24,29,32,54,59,62,64,94,112,117,125,159,160,161,162,163,164,165,166,167,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[86,104,110,138,143,147,86,168,143,204,206,228,229,230,231,232,233,234,235,237,247,261,143,268,273,86,281,281,290,281,292,294,295,309,86,313,321,325,86,295,281,]),'primitive_value':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'upper_bound':([257,315,],[296,336,]),'call_action':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[35,35,35,88,88,88,35,35,88,88,88,35,88,88,88,88,88,88,88,35,35,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,35,35,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,35,35,]),'initialization':([195,],[250,]),'statement_list':([0,],[37,]),'label_id':([12,],[60,]),'formal_parameter':([212,305,],[265,265,]),'value_array_slice':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'formal_parameter_list':([212,305,],[264,330,]),'exit_action':([0,3,8,47,51,63,139,153,223,224,329,342,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'then_clause':([76,275,],[152,312,]),'else_clause':([152,312,],[221,334,]),'declaration_statement':([0,3,47,329,342,],[39,39,39,39,39,]),'boolean_literal':([24,29,32,54,59,62,64,69,94,112,117,125,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'control_part':([8,],[57,]),'operator1':([80,],[156,]),'step_enumeration':([50,],[131,]),'boolean_mode':([99,106,183,200,208,242,260,263,316,317,341,],[189,189,189,189,189,189,189,189,189,189,189,]),'lower_bound':([117,241,242,246,317,],[205,282,282,282,282,]),'closed_dyadic_operator':([45,],[129,]),'builtin_name':([0,3,8,24,29,32,47,51,54,59,62,63,64,69,78,94,112,117,125,139,153,155,156,159,160,161,162,163,164,165,166,167,170,185,210,213,216,219,222,223,224,241,242,244,246,249,256,257,270,271,279,298,302,307,315,317,329,342,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> boolean_expression','expression',1,'p_expression','Parser.py',416),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',417),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',421),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','Parser.py',425),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','Parser.py',426),
  ('boolean_expression -> expression EQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',427),
  ('boolean_expression -> expression NOTEQ expression','boolean_expression',3,'p_boolean_expression','Parser.py',428),
  ('boolean_expression -> expression GREATER expression','boolean_expression',3,'p_boolean_expression','Parser.py',429),
  ('boolean_expression -> expression GTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',430),
  ('boolean_expression -> expression LESS expression','boolean_expression',3,'p_boolean_expression','Parser.py',431),
  ('boolean_expression -> expression LTEQUAL expression','boolean_expression',3,'p_boolean_expression','Parser.py',432),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',534),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',535),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',540),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',544),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',549),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',564),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',571),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',572),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',576),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',580),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',588),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',593),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',597),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',601),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',605),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',616),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',617),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',622),
  ('action -> assignment_action','action',1,'p_action','Parser.py',623),
  ('action -> call_action','action',1,'p_action','Parser.py',624),
  ('action -> exit_action','action',1,'p_action','Parser.py',625),
  ('action -> result_action','action',1,'p_action','Parser.py',626),
  ('action -> return_action','action',1,'p_action','Parser.py',627),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',632),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',636),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',640),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',641),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',647),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',651),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','Parser.py',652),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',656),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',661),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','Parser.py',662),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',673),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',685),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',686),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',703),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',704),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',708),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',709),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',721),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',725),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',726),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',730),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',731),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',740),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',744),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',748),
  ('result -> expression','result',1,'p_result','Parser.py',752),
  ('result -> empty','result',1,'p_result','Parser.py',753),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',756),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',764),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',765),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',772),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',773),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',774),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',778),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',783),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',789),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',790),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',802),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',806),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',810),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',811),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',818),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',824),
]

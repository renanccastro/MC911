
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '061B005AF805B58CA5F0434E10DD4B71'
    
_lr_action_items = {'WHILE':([2,17,18,19,30,33,38,48,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,131,132,133,140,141,168,169,172,174,177,181,183,213,216,219,220,236,246,249,252,288,291,294,299,303,305,309,310,312,314,315,318,329,],[47,-69,-71,-70,-67,-68,-82,47,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-194,-196,-195,-108,-98,-49,-44,-48,-45,-43,-42,-47,-93,-85,-95,-97,-78,-73,-204,-134,-200,-203,-86,-51,-50,-81,-75,-202,-198,-199,-135,-87,-197,]),'DO':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[2,-8,2,-9,2,-5,-7,-6,2,2,-143,2,2,-24,2,-15,-28,-10,2,2,-142,2,2,-30,-29,]),'COMMA':([17,18,19,30,33,38,56,58,59,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,102,111,122,140,141,162,167,168,169,170,172,174,175,176,177,178,179,181,183,184,185,189,210,213,215,216,219,220,231,233,236,242,246,252,267,268,269,275,277,278,282,283,294,299,303,304,305,306,309,315,318,320,322,323,324,],[-69,-71,-70,-67,-68,-82,-23,138,139,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,187,-72,197,-108,-98,221,-38,-49,-44,-37,-48,-45,-39,-40,-43,-57,-56,-42,-47,-19,-41,237,-27,-93,237,-85,-95,-97,-55,-18,-78,-14,-73,-134,-63,-64,301,-20,237,-54,308,-13,-86,-51,-50,-58,-81,-34,-75,-135,-87,-52,-60,-65,-33,]),'TYPE':([0,1,14,15,20,21,45,96,99,136,186,193,200,244,326,333,339,342,],[4,-8,-9,4,-5,-7,-6,4,-143,-24,-15,-28,-10,-142,4,4,-30,-29,]),'NOTEQ':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,144,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'ARROW':([8,17,18,19,23,30,31,32,33,34,38,44,47,54,56,63,65,70,76,79,86,92,94,103,104,105,108,109,110,111,112,114,115,118,126,140,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,202,207,217,221,223,228,229,230,234,236,237,238,243,245,246,253,255,257,271,286,287,296,300,301,305,309,],[62,-69,-71,-70,62,-67,111,-23,-68,62,-82,-66,62,-23,-23,62,-107,62,62,-106,111,-66,62,-113,-104,-114,-115,62,-103,-72,-105,62,-154,62,62,111,-117,-122,-119,-123,-118,-109,-124,-120,62,-116,-110,-121,62,-112,62,-111,62,-153,62,-23,62,62,62,62,62,62,62,62,-78,62,62,62,62,-73,62,62,62,-66,62,62,62,62,62,-81,-75,]),'ARRAY':([56,59,100,123,137,180,212,280,302,331,],[-23,-21,171,171,171,171,-22,171,171,171,]),'ABS':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[7,-8,7,-9,7,-5,-7,-6,7,7,-143,7,7,-24,7,-15,-28,-10,7,7,-142,7,7,-30,-29,]),'FALSE':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[91,91,91,91,91,-107,91,91,-106,91,-113,-104,-114,-115,91,-103,-105,91,-154,91,91,-117,-122,-119,-123,-118,-109,-124,-120,91,-116,-110,-121,91,-112,91,-111,91,-153,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'LOWER':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[41,-8,41,-9,41,-5,-7,-6,41,41,-143,41,41,-24,41,-15,-28,-10,41,41,-142,41,41,-30,-29,]),'NOT':([8,23,34,47,70,76,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[65,65,65,65,65,65,65,-113,-104,-114,-115,65,-103,-105,65,-154,65,65,-117,-122,-119,-123,-118,-109,-124,-120,65,-116,-110,-121,65,-112,65,-111,65,-153,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'THEN':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,98,111,140,141,156,213,216,219,220,236,246,252,260,293,294,305,309,315,317,318,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,166,-72,-108,-98,217,-93,-85,-95,-97,-78,-73,-134,166,217,-86,-81,-75,-135,217,-87,]),'DOWN':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,134,140,141,213,216,219,220,236,246,248,252,289,294,305,309,311,315,318,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,209,-108,-98,-93,-85,-95,-97,-78,-73,290,-134,313,-86,-81,-75,-201,-135,-87,]),'UPPER':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[22,-8,22,-9,22,-5,-7,-6,22,22,-143,22,22,-24,22,-15,-28,-10,22,22,-142,22,22,-30,-29,]),'OR':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,142,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'AND':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,151,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'PRINT':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[37,-8,37,-9,37,-5,-7,-6,37,37,-143,37,37,-24,37,-15,-28,-10,37,37,-142,37,37,-30,-29,]),'CCONST':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[89,89,89,89,89,-107,89,89,-106,89,-113,-104,-114,-115,89,-103,-105,89,-154,89,89,-117,-122,-119,-123,-118,-109,-124,-120,89,-116,-110,-121,89,-112,89,-111,89,-153,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'LPAREN':([7,8,10,12,13,22,23,27,32,34,37,41,42,47,54,56,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,167,168,169,172,173,174,177,181,183,185,191,194,198,202,207,217,221,223,228,229,230,234,237,238,243,245,249,250,253,255,257,267,271,286,287,291,296,299,300,301,303,325,],[-171,70,-177,94,-172,-174,70,-176,118,70,-178,-175,-173,70,118,-23,70,-107,70,70,-106,70,-113,-104,-114,-115,70,-103,-105,70,-154,70,70,-117,-122,-119,-123,-118,-109,-124,-120,70,-116,-110,-121,70,-112,70,-111,70,228,-49,-44,-48,230,-45,-43,-42,-47,-46,-153,239,70,118,70,70,70,70,70,70,70,70,70,70,70,70,228,-46,70,70,70,228,-46,70,70,228,70,-51,70,70,-50,331,]),'ICONST':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,232,234,237,238,243,245,253,255,257,286,287,296,300,301,],[83,83,83,83,83,-107,83,83,-106,83,-113,-104,-114,-115,83,-103,-105,83,-154,83,83,-117,-122,-119,-123,-118,-109,-124,-120,83,-116,-110,-121,83,-112,83,-111,83,-153,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'GREATER':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,149,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'COLON':([17,18,19,30,32,33,38,44,54,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,189,190,203,204,213,215,216,219,220,236,246,252,265,266,271,294,305,309,315,318,],[-69,-71,-70,-67,117,-68,-82,125,-23,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-53,238,-76,245,-93,253,-85,-95,-97,-78,-73,-134,-53,300,-66,-86,-81,-75,-135,-87,]),'READ':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[10,-8,10,-9,10,-5,-7,-6,10,10,-143,10,10,-24,10,-15,-28,-10,10,10,-142,10,10,-30,-29,]),'RETURNS':([307,],[325,]),'FOR':([2,],[51,]),'IN':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,134,140,141,209,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,148,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,208,-108,-98,251,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'PLUS':([17,18,19,30,31,32,33,38,44,54,56,61,64,66,67,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,202,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,103,-23,-68,-82,-66,-23,-23,-129,-130,-140,-131,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,103,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-23,103,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'TRUE':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[74,74,74,74,74,-107,74,74,-106,74,-113,-104,-114,-115,74,-103,-105,74,-154,74,74,-117,-122,-119,-123,-118,-109,-124,-120,74,-116,-110,-121,74,-112,74,-111,74,-153,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'EQUAL':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,146,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'PROC':([117,],[194,]),'LOC':([56,167,168,169,170,172,174,175,176,177,178,179,181,183,185,231,299,303,304,306,322,323,334,],[-23,-38,-49,-44,-37,-48,-45,-39,-40,-43,-57,-56,-42,-47,-41,-55,-51,-50,-58,324,-60,-65,338,]),'CHAR':([56,59,100,123,137,180,208,212,229,251,280,301,302,331,],[-23,-21,168,168,168,168,168,-22,168,168,168,168,168,168,]),'IF':([0,1,2,8,14,15,20,21,23,34,45,46,47,70,76,94,96,99,109,114,115,118,125,126,130,136,154,166,186,191,193,198,200,207,217,221,223,224,227,228,229,230,234,237,238,243,244,245,253,255,257,286,287,296,300,301,326,333,339,342,],[23,-8,23,76,-9,23,-5,-7,76,76,-6,23,76,76,76,76,23,-143,76,76,-154,76,23,76,23,-24,76,23,-15,-153,-28,76,-10,76,76,76,76,23,23,76,76,76,76,76,76,76,-142,76,76,76,76,76,76,76,76,76,23,23,-30,-29,]),'SCONST':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[77,77,77,77,77,-107,77,77,-106,77,-113,-104,-114,-115,77,-103,-105,77,-154,77,77,-117,-122,-119,-123,-118,-109,-124,-120,77,-116,-110,-121,77,-112,77,-111,77,-153,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'NUM':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[42,-8,42,-9,42,-5,-7,-6,42,42,-143,42,42,-24,42,-15,-28,-10,42,42,-142,42,42,-30,-29,]),'MINUS':([8,17,18,19,23,30,31,32,33,34,38,44,47,54,56,61,64,66,67,69,70,71,72,73,74,76,77,78,80,83,84,85,86,87,88,89,90,91,92,93,94,103,104,105,108,109,110,111,112,114,115,118,126,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,202,207,213,216,217,219,220,221,223,228,229,230,234,236,237,238,243,245,246,252,253,255,257,271,286,287,296,300,301,305,309,315,],[79,-69,-71,-70,79,-67,105,-23,-68,79,-82,-66,79,-23,-23,-129,-130,-140,-131,-102,79,-125,-126,-99,-137,79,-141,-132,-128,-136,-133,105,-100,-101,-127,-139,-94,-138,-66,-96,79,-113,-104,-114,-115,79,-103,-72,-105,79,-154,79,79,-108,-98,-117,-122,-119,-123,-118,-109,-124,-120,79,-116,-110,-121,79,-112,79,-111,79,-153,79,-23,79,105,-85,79,-95,-97,79,79,79,79,79,79,-78,79,79,79,79,-73,-134,79,79,79,-66,79,79,79,79,79,-81,-75,-135,]),'MODULO':([17,18,19,30,31,32,33,38,44,54,56,61,64,66,67,69,71,72,73,74,77,78,80,83,84,86,87,88,89,90,91,92,93,111,140,141,202,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,112,-23,-68,-82,-66,-23,-23,-129,-130,-140,-131,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-100,-101,-127,-139,112,-138,-66,-96,-72,-108,-98,-23,-85,112,-97,-78,-73,-134,-66,-81,-75,-135,]),'REF':([56,59,100,123,137,180,212,280,302,331,],[-23,-21,180,180,180,180,-22,180,180,180,]),'ELSE':([17,18,19,30,33,38,46,52,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,99,111,127,140,141,165,213,216,218,219,220,226,227,236,244,246,252,254,258,263,294,298,305,309,315,316,318,330,],[-69,-71,-70,-67,-68,-82,-206,-166,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-143,-72,-165,-108,-98,224,-93,-85,257,-95,-97,-160,-206,-78,-142,-73,-134,-88,257,-164,-86,224,-81,-75,-135,-90,-87,-91,]),'LTEQUAL':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,145,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'LENGTH':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[27,-8,27,-9,27,-5,-7,-6,27,27,-143,27,27,-24,27,-15,-28,-10,27,27,-142,27,27,-30,-29,]),'BOOL':([56,59,100,123,137,180,208,212,229,251,280,301,302,331,],[-23,-21,172,172,172,172,172,-22,172,172,172,172,172,172,]),'OD':([2,46,52,53,99,127,130,206,244,],[-206,-206,-166,135,-143,-165,-206,247,-142,]),'TIMES':([17,18,19,30,31,32,33,38,44,54,56,61,64,66,67,69,71,72,73,74,77,78,80,83,84,86,87,88,89,90,91,92,93,111,140,141,202,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,110,-23,-68,-82,-66,-23,-23,-129,-130,-140,-131,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-100,-101,-127,-139,110,-138,-66,-96,-72,-108,-98,-23,-85,110,-97,-78,-73,-134,-66,-81,-75,-135,]),'BY':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,248,252,294,305,309,315,318,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,287,-134,-86,-81,-75,-135,-87,]),'SEMI':([3,5,6,8,9,11,17,18,19,24,25,26,28,30,33,38,39,43,46,48,49,50,52,55,56,58,60,61,64,66,67,68,69,71,72,73,74,75,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,111,119,120,121,122,124,127,128,129,131,132,133,135,140,141,161,165,167,168,169,170,172,174,175,176,177,178,179,181,183,184,185,192,195,201,210,211,213,216,219,220,222,226,227,231,233,235,236,240,241,242,244,246,247,249,252,262,263,275,283,288,291,294,299,303,304,305,307,309,310,312,314,315,318,322,323,327,329,335,337,340,341,],[-144,-149,-151,-206,-168,-148,-69,-71,-70,-150,-146,99,-167,-67,-68,-82,-145,-147,-206,-192,130,-193,-166,136,-23,-25,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-186,-141,-132,-128,-187,-185,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-143,186,-16,-72,-188,-183,-184,-11,200,-165,-205,-191,-194,-196,-195,-190,-108,-98,-170,-159,-38,-49,-44,-37,-48,-45,-39,-40,-43,-57,-56,-42,-47,-19,-41,-152,-180,244,-27,-26,-93,-85,-95,-97,-169,-160,-206,-55,-18,-17,-78,-179,-12,-14,-142,-73,-189,-204,-134,-158,-164,-20,-13,-200,-203,-86,-51,-50,-58,-81,326,-75,-202,-198,-199,-135,-87,-60,-65,333,-197,339,-36,342,-35,]),'CHARS':([56,59,100,123,137,180,212,280,302,331,],[-23,-21,182,182,182,182,-22,182,182,182,]),'RPAREN':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,94,111,118,140,141,155,162,163,167,168,169,170,172,174,175,176,177,178,179,181,183,185,196,213,216,219,220,231,236,246,252,259,264,272,278,281,282,294,299,303,304,305,306,309,315,318,320,322,323,324,328,334,338,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,161,-72,195,-108,-98,216,-181,222,-38,-49,-44,-37,-48,-45,-39,-40,-43,-57,-56,-42,-47,-41,240,-93,-85,-95,-97,-55,-78,-73,-134,-182,299,303,-54,307,-31,-86,-51,-50,-58,-81,-34,-75,-135,-87,-52,-60,-65,-33,-32,337,341,]),'ASC':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[13,-8,13,-9,13,-5,-7,-6,13,13,-143,13,13,-24,13,-15,-28,-10,13,13,-142,13,13,-30,-29,]),'DCL':([0,1,14,15,20,21,45,96,99,136,186,193,200,244,326,333,339,342,],[29,-8,-9,29,-5,-7,-6,29,-143,-24,-15,-28,-10,-142,29,29,-30,-29,]),'INT':([56,59,100,123,137,180,208,212,229,251,280,301,302,331,],[-23,-21,183,183,183,183,183,-22,183,183,183,183,183,183,]),'END':([1,14,20,21,45,96,97,99,136,164,186,193,200,244,326,332,333,336,339,342,],[-8,-9,-5,-7,-6,-206,-4,-143,-24,-3,-15,-28,-10,-142,-206,335,-206,340,-30,-29,]),'TO':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,248,252,289,290,294,305,309,311,313,315,318,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,286,-134,286,286,-86,-81,-75,-201,286,-135,-87,]),'RBRACKET':([17,18,19,30,33,38,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,168,169,172,174,177,181,183,188,189,213,214,215,216,219,220,236,246,252,267,268,269,270,273,274,276,277,278,279,284,285,292,294,299,303,305,309,315,318,320,321,],[-69,-71,-70,-67,-68,-82,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-49,-44,-48,-45,-43,-42,-47,236,-79,-93,252,-79,-85,-95,-97,-78,-73,-134,-63,-64,-61,302,-59,304,-80,-79,-54,305,309,-77,315,-86,-51,-50,-81,-75,-135,-87,-52,-62,]),'ID':([0,1,2,4,8,14,15,20,21,23,29,34,35,40,45,46,47,51,56,59,62,63,65,70,76,79,94,96,99,100,103,104,105,108,109,110,112,114,115,118,123,125,126,130,136,137,138,139,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,166,180,186,187,191,193,197,198,200,207,208,212,217,221,223,224,227,228,229,230,234,237,238,239,243,244,245,251,253,255,257,280,286,287,296,300,301,302,308,326,331,333,339,342,],[32,-8,54,56,56,-9,32,-5,-7,56,56,56,121,56,-6,54,56,56,-23,-21,56,56,-107,56,56,-106,56,32,-143,56,-113,-104,-114,-115,56,-103,-105,56,-154,56,56,202,56,54,-24,56,56,56,-117,-122,-119,-123,-118,-109,-124,-120,56,-116,-110,-121,56,-112,56,-111,56,54,56,-15,56,-153,-28,56,56,-10,56,56,-22,56,56,56,54,54,56,56,56,56,56,56,56,56,-142,56,56,56,56,56,56,56,56,56,56,56,56,56,32,56,32,-30,-29,]),'RESULT':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[34,-8,34,-9,34,-5,-7,-6,34,34,-143,34,34,-24,34,-15,-28,-10,34,34,-142,34,34,-30,-29,]),'EXIT':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[35,-8,35,-9,35,-5,-7,-6,35,35,-143,35,35,-24,35,-15,-28,-10,35,35,-142,35,35,-30,-29,]),'ASSIGN':([17,18,19,30,31,32,33,38,44,54,56,57,59,92,103,104,105,106,107,108,110,111,112,113,116,123,134,167,168,169,170,172,174,175,176,177,178,179,181,183,184,185,199,202,212,231,236,246,299,303,304,305,309,322,323,],[-69,-71,-70,-67,115,-23,-68,-82,-66,-23,-23,137,-21,-66,-113,-104,-114,-156,-155,-115,-103,-72,-105,191,-157,198,207,-38,-49,-44,-37,-48,-45,-39,-40,-43,-57,-56,-42,-47,234,-41,243,-23,-22,-55,-78,-73,-51,-50,-58,-81,-75,-60,-65,]),'CONCAT':([17,18,19,30,31,32,33,38,44,54,56,61,64,66,67,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,202,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,108,-23,-68,-82,-66,-23,-23,-129,-130,-140,-131,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,108,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-23,108,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'$end':([1,14,15,16,20,21,36,45,95,96,97,99,136,164,186,193,200,244,339,342,],[-8,-9,-206,0,-5,-7,-1,-6,-2,-206,-4,-143,-24,-3,-15,-28,-10,-142,-30,-29,]),'RETURN':([0,1,2,14,15,20,21,45,46,96,99,125,130,136,166,186,193,200,224,227,244,326,333,339,342,],[8,-8,8,-9,8,-5,-7,-6,8,8,-143,8,8,-24,8,-15,-28,-10,8,8,-142,8,8,-30,-29,]),'ELSIF':([17,18,19,30,33,38,46,52,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,99,111,127,140,141,165,213,216,218,219,220,226,227,236,244,246,252,254,258,263,294,298,305,309,315,316,318,330,],[-69,-71,-70,-67,-68,-82,-206,-166,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-143,-72,-165,-108,-98,223,-93,-85,255,-95,-97,-160,-206,-78,-142,-73,-134,-88,296,-164,-86,223,-81,-75,-135,-90,-87,-91,]),'FI':([17,18,19,30,33,38,46,52,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,99,111,127,140,141,213,216,219,220,225,226,227,236,244,246,252,256,261,263,294,295,297,298,305,309,315,318,319,],[-69,-71,-70,-67,-68,-82,-206,-166,-23,-84,-129,-130,-140,-131,-83,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-143,-72,-165,-108,-98,-93,-85,-95,-97,262,-160,-206,-78,-142,-73,-134,294,-161,-164,-86,-89,318,-163,-81,-75,-135,-87,-162,]),'DIVIDE':([17,18,19,30,31,32,33,38,44,54,56,61,64,66,67,69,71,72,73,74,77,78,80,83,84,86,87,88,89,90,91,92,93,111,140,141,202,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,104,-23,-68,-82,-66,-23,-23,-129,-130,-140,-131,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-100,-101,-127,-139,104,-138,-66,-96,-72,-108,-98,-23,-85,104,-97,-78,-73,-134,-66,-81,-75,-135,]),'NULL':([8,23,34,47,63,65,70,76,79,94,103,104,105,108,109,110,112,114,115,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,191,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[66,66,66,66,66,-107,66,66,-106,66,-113,-104,-114,-115,66,-103,-105,66,-154,66,66,-117,-122,-119,-123,-118,-109,-124,-120,66,-116,-110,-121,66,-112,66,-111,66,-153,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LESS':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,143,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),'LBRACKET':([17,18,19,30,31,32,33,38,44,54,56,60,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,171,182,202,203,205,213,216,219,220,236,246,252,271,294,305,309,315,318,],[-69,-71,-70,-67,109,-23,-68,-82,126,-23,-23,-84,-129,-130,-140,-131,-83,154,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,109,-101,-127,-139,-94,-138,126,-96,-72,109,-98,229,232,-23,-74,246,-93,-85,-95,-97,-78,-73,-134,126,-86,-81,-75,-135,-87,]),'SYN':([0,1,14,15,20,21,45,96,99,136,186,193,200,244,326,333,339,342,],[40,-8,-9,40,-5,-7,-6,40,-143,-24,-15,-28,-10,-142,40,40,-30,-29,]),'GTEQUAL':([17,18,19,30,33,38,56,61,64,66,67,68,69,71,72,73,74,77,78,80,83,84,85,86,87,88,89,90,91,92,93,111,140,141,213,216,219,220,236,246,252,271,305,309,315,],[-69,-71,-70,-67,-68,-82,-23,-129,-130,-140,-131,153,-102,-125,-126,-99,-137,-141,-132,-128,-136,-133,-92,-100,-101,-127,-139,-94,-138,-66,-96,-72,-108,-98,-93,-85,-95,-97,-78,-73,-134,-66,-81,-75,-135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'discrete_mode':([100,123,137,180,208,229,251,280,301,302,331,],[167,167,167,167,249,267,291,167,267,167,167,]),'label_id':([35,],[120,]),'location':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'step_value':([248,],[289,]),'conditional_expression':([8,23,34,47,70,76,94,109,114,118,126,154,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'integer_literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,232,234,237,238,243,245,253,255,257,286,287,296,300,301,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,273,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'arithmetic_multiplicative_operator':([31,90,219,],[106,160,160,]),'index_mode_list':([229,301,],[270,321,]),'literal_range':([228,229,230,301,],[264,268,272,268,]),'do_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'right_element':([245,],[284,]),'relational_operator':([68,],[147,]),'for_control':([2,],[48,]),'discrete_range_mode':([100,123,137,180,208,229,251,280,301,302,331,],[174,174,174,174,174,174,174,174,174,174,174,]),'result_spec':([307,],[327,]),'builtin_name':([0,2,15,46,96,125,130,166,224,227,326,333,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'character_literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'string_length':([232,],[274,]),'boolean_mode':([100,123,137,180,208,229,251,280,301,302,331,],[177,177,177,177,177,177,177,177,177,177,177,]),'procedure_statement':([0,15,96,326,333,],[14,14,14,14,14,]),'statement':([0,15,96,326,333,],[15,96,96,96,96,]),'literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'program':([0,],[16,]),'synonym_list':([40,197,],[124,241,]),'string_slice':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'closed_dyadic_operator':([31,],[113,]),'value_array_element':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'declaration_statement':([0,15,96,326,333,],[20,20,20,20,20,]),'start_element':([126,],[205,]),'end_value':([248,289,290,313,],[288,312,314,329,]),'else_expression':([218,258,],[256,297,]),'else_clause':([165,298,],[225,319,]),'element_mode':([302,],[322,]),'character_mode':([100,123,137,180,208,229,251,280,301,302,331,],[169,169,169,169,169,169,169,169,169,169,169,]),'mode_name':([100,123,137,180,280,302,331,],[170,170,170,170,170,170,170,]),'empty_literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'control_part':([2,],[49,]),'newmode_list':([4,138,],[55,211,]),'declaration':([29,187,],[102,102,]),'empty':([2,8,15,46,96,130,227,326,333,],[52,81,97,52,97,52,52,97,97,]),'monadic_operator':([8,23,34,47,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'assigning_operator':([31,],[114,]),'left_element':([126,],[204,]),'parameter_list':([94,118,221,],[163,196,259,]),'formal_parameter':([239,308,],[282,282,]),'character_string_literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'composite_mode':([100,123,137,180,280,302,331,],[176,176,176,176,176,176,176,]),'string_concatenation_operator':([31,85,213,],[116,157,157,]),'action_statement_nullable':([2,46,130,227,],[53,127,206,263,]),'string_element':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'identifier_list':([4,29,40,138,139,187,197,239,308,],[57,100,123,57,212,100,123,280,280,]),'return_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'operand4':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[73,73,73,73,141,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'initialization':([184,],[233,]),'builtin_call':([0,2,15,46,96,125,130,166,224,227,326,333,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'declaration_list':([29,187,],[101,235,]),'exit_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'procedure_definition':([117,],[193,]),'identifier':([0,2,4,8,15,23,29,34,40,46,47,51,62,63,70,76,94,96,100,109,114,118,123,125,126,130,137,138,139,150,154,158,160,166,180,187,197,198,207,208,217,221,223,224,227,228,229,230,234,237,238,239,243,245,251,253,255,257,280,286,287,296,300,301,302,308,326,331,333,],[44,44,59,92,44,92,59,92,59,44,92,134,92,92,92,92,92,44,185,92,92,92,185,92,92,44,185,59,59,92,92,92,92,44,185,59,59,92,92,250,92,92,92,44,44,92,271,92,92,92,92,59,92,92,250,92,92,92,185,92,92,92,92,271,185,59,44,185,44,]),'synonym_statement':([0,15,96,326,333,],[45,45,45,45,45,]),'action_statement':([0,2,15,46,96,130,166,224,227,326,333,],[1,46,1,46,1,46,227,227,46,1,1,]),'bracketed_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'membership_operator':([68,],[152,]),'boolean_literal':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'range_enumeration':([51,],[132,]),'synonym_definition':([40,197,],[122,122,]),'result_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'elsif_expression':([218,],[258,]),'statement_nullable':([15,96,326,333,],[95,164,332,336,]),'reference_mode':([100,123,137,180,280,302,331,],[175,175,175,175,175,175,175,]),'call_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'action_statement_list':([166,224,],[226,261,]),'arithmetic_additive_operator':([31,85,213,],[107,159,159,]),'array_mode':([100,123,137,180,280,302,331,],[178,178,178,178,178,178,178,]),'while_control':([2,48,],[50,129,]),'array_slice':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expression_list':([109,154,237,],[188,214,276,]),'index_mode':([229,301,],[269,269,]),'newmode_statement':([0,15,96,326,333,],[21,21,21,21,21,]),'integer_mode':([100,123,137,180,208,229,251,280,301,302,331,],[181,181,181,181,181,181,181,181,181,181,181,]),'then_clause':([98,260,],[165,298,]),'expression':([8,23,34,47,70,76,94,109,114,118,126,154,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[75,98,119,128,155,156,162,189,192,162,203,215,242,248,254,162,260,265,265,265,275,277,278,283,285,292,293,295,310,311,317,278,265,]),'discrete_mode_name':([100,123,137,180,208,229,251,280,301,302,331,],[173,173,173,173,173,173,173,173,173,173,173,]),'if_action':([0,2,15,46,96,125,130,166,224,227,326,333,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'operand0':([8,23,34,47,70,76,94,109,114,118,126,154,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'array_element':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'action':([0,2,15,46,96,125,130,166,224,227,326,333,],[26,26,26,26,26,201,26,26,26,26,26,26,]),'parenthesized_expression':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'upper_bound':([238,300,],[279,320,]),'then_expression':([156,293,317,],[218,316,330,]),'result':([8,],[82,]),'procedure_call':([0,2,15,46,96,125,130,166,224,227,326,333,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'step_enumeration':([51,],[133,]),'dereferenced_reference':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'operand1':([8,23,34,47,70,76,94,109,114,118,126,150,154,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[85,85,85,85,85,85,85,85,85,85,85,213,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'array_location':([0,2,8,15,23,34,46,47,62,63,70,76,94,96,109,114,118,125,126,130,150,154,158,160,166,198,207,217,221,223,224,227,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,326,333,],[31,31,86,31,86,86,31,86,140,86,86,86,86,31,86,86,86,31,86,31,86,86,86,86,31,86,86,86,86,86,31,31,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,31,31,]),'referenced_location':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'iteration':([51,],[131,]),'value_array_slice':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'primitive_value':([8,23,34,47,63,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'operand2':([8,23,34,47,70,76,94,109,114,118,126,150,154,158,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[90,90,90,90,90,90,90,90,90,90,90,90,90,219,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'lower_bound':([109,228,229,230,301,],[190,266,266,266,266,]),'statement_list':([0,],[36,]),'string_mode':([100,123,137,180,280,302,331,],[179,179,179,179,179,179,179,]),'mode_definition':([4,138,],[58,58,]),'operator2':([85,213,],[158,158,]),'operator1':([68,],[150,]),'mode':([100,123,137,180,280,302,331,],[184,199,210,231,306,323,334,]),'formal_parameter_list':([239,308,],[281,328,]),'operand3':([8,23,34,47,70,76,94,109,114,118,126,150,154,158,160,198,207,217,221,223,228,229,230,234,237,238,243,245,253,255,257,286,287,296,300,301,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,220,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',61),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',65),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',76),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',77),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',88),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',89),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',90),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',91),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',92),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',101),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',105),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',115),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',116),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',130),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',134),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',135),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',143),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',144),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',148),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',152),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',153),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',161),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',172),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',176),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',177),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',185),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',196),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',200),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',201),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',205),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',206),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',214),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',215),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',222),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',227),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',228),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',229),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',230),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',234),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',242),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',243),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',244),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',245),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',249),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',253),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',257),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',261),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',270),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',271),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',275),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',279),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',283),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',290),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',297),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',298),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',302),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',306),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',310),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',314),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',315),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',323),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',324),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',328),
  ('location -> identifier','location',1,'p_location','Parser.py',339),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',340),
  ('location -> string_element','location',1,'p_location','Parser.py',341),
  ('location -> string_slice','location',1,'p_location','Parser.py',342),
  ('location -> array_element','location',1,'p_location','Parser.py',343),
  ('location -> array_slice','location',1,'p_location','Parser.py',344),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',348),
  ('string_element -> identifier LBRACKET start_element LBRACKET','string_element',4,'p_string_element','Parser.py',352),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',356),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',360),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',364),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',368),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',372),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',376),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',377),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',384),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',388),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',397),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',402),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',410),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',411),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',415),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',419),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',423),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',424),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',439),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',440),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',447),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',448),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',455),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',456),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',464),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',465),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',472),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',473),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',474),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',485),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',486),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',487),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',491),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',492),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',496),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',500),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',501),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',505),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',506),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',510),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',511),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',515),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',519),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',520),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',521),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',530),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',542),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',543),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',544),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',545),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',549),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',550),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',551),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',552),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',553),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',557),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',561),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',569),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',573),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',574),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',578),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',582),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',586),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',597),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',598),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',603),
  ('action -> assignment_action','action',1,'p_action','Parser.py',604),
  ('action -> call_action','action',1,'p_action','Parser.py',605),
  ('action -> exit_action','action',1,'p_action','Parser.py',606),
  ('action -> result_action','action',1,'p_action','Parser.py',607),
  ('action -> return_action','action',1,'p_action','Parser.py',608),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',612),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',613),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',617),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',621),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',622),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',626),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',627),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',628),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',632),
  ('if_action -> IF expression then_clause','if_action',3,'p_if_action','Parser.py',633),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',637),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',641),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',642),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',643),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',654),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',664),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',665),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',680),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',681),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',685),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',686),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',691),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',692),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',693),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',694),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',695),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',696),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',697),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',698),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',702),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',703),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',707),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',708),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',716),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',720),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',724),
  ('result -> expression','result',1,'p_result','Parser.py',728),
  ('result -> empty','result',1,'p_result','Parser.py',729),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',732),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',740),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',741),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',748),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',749),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',750),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',754),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',758),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',759),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',763),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',764),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',765),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',766),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',778),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',782),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',786),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',787),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',794),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',800),
]

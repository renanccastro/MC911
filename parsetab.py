
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT ASC WHILE RETURNS UPPER ARRAY ABS IN OD DOWN EXIT IF NULL BOOL PROC FOR LOWER LENGTH BY READ FALSE THEN DO TYPE LOC INT TRUE PRINT REF ELSE END RESULT CHARS NUM FI ELSIF TO CHAR RETURN SYN DCLprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'ELSIF':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,113,117,118,162,170,172,190,197,202,219,222,223,225,228,229,230,231,233,234,239,240,271,272,275,282,293,297,303,310,320,321,323,333,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-144,-206,-167,-181,-99,-109,-171,-166,242,-79,-180,-74,-143,-98,-94,-86,-96,274,-170,-161,-206,-135,-89,301,-165,-82,-76,-87,242,-136,-91,-88,-92,]),'SYN':([0,8,13,18,23,34,39,55,113,129,151,159,204,225,315,331,338,342,],[1,1,-7,-9,-6,-5,-8,1,-144,-10,-24,-28,-15,-143,1,1,-30,-29,]),'CONCAT':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,81,82,83,84,85,86,88,89,91,92,99,100,102,103,104,105,106,107,108,110,111,162,167,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,71,-23,-66,-169,-68,-168,-83,-71,-67,-72,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-130,-142,-131,-138,-102,-128,71,-97,-66,-141,-72,-126,-132,-181,-23,-99,-109,-171,-79,-180,-74,-98,71,-86,-96,-170,-66,-135,-82,-76,-136,]),'FI':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,113,117,118,162,170,172,190,197,202,219,222,223,225,228,229,230,231,234,239,240,244,271,276,282,283,293,297,299,302,303,310,320,323,329,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-144,-206,-167,-181,-99,-109,-171,-166,243,-79,-180,-74,-143,-98,-94,-86,-96,-170,-161,-206,285,-135,303,-165,-162,-82,-76,-90,323,-87,-164,-136,-88,-163,]),'FOR':([40,],[116,]),'TYPE':([0,8,13,18,23,34,39,55,113,129,151,159,204,225,315,331,338,342,],[4,4,-7,-9,-6,-5,-8,4,-144,-10,-24,-28,-15,-143,4,4,-30,-29,]),'BY':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,271,280,293,297,303,320,323,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-135,308,-82,-76,-87,-136,-88,]),'GREATER':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,178,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'LOC':([49,130,132,134,135,137,138,139,140,143,144,145,146,148,149,208,287,289,290,296,312,313,337,],[-23,-57,-49,-39,-42,-43,-45,-37,-41,-40,-44,-38,-56,-47,-48,-55,-50,-58,-51,319,-60,-65,341,]),'EXIT':([0,8,13,18,23,34,39,40,55,75,113,117,129,151,159,199,201,204,225,240,241,315,331,338,342,],[5,5,-7,-9,-6,-5,-8,5,5,5,-144,5,-10,-24,-28,5,5,-15,-143,5,5,5,5,-30,-29,]),'COLON':([2,6,14,15,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,154,155,162,165,166,170,172,190,219,222,223,226,228,229,230,231,234,249,250,257,271,293,297,303,320,323,],[-70,-69,72,75,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,217,-53,-181,-77,224,-99,-109,-171,-79,-180,-74,270,-98,-94,-86,-96,-170,288,-53,-66,-135,-82,-76,-87,-136,-88,]),'MODULO':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,81,82,83,84,85,86,88,89,91,92,99,100,102,103,105,106,107,108,110,111,162,167,170,172,190,219,222,223,228,230,231,234,257,271,293,297,320,],[-70,-69,69,-23,-66,-169,-68,-168,-83,-71,-67,-72,-73,-103,-133,-139,-129,69,-134,-140,-101,-137,-127,-23,-100,-130,-142,-131,-138,-102,-128,-97,-66,-141,-72,-126,-132,-181,-23,-99,-109,-171,-79,-180,-74,-98,-86,69,-170,-66,-135,-82,-76,-136,]),'RETURNS':([294,],[317,]),'LOWER':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[3,3,-7,3,-9,-6,-5,3,-8,3,3,3,3,-155,-105,-122,-104,-123,3,-106,-124,3,3,3,3,3,-108,-107,3,3,3,-144,3,3,-10,3,-24,-154,-28,3,3,-117,-110,-125,-112,-113,-116,-115,-118,3,-119,-114,-111,-121,-120,3,3,3,-15,3,3,3,3,3,3,3,3,-143,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-30,-29,]),'NUM':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[12,12,-7,12,-9,-6,-5,12,-8,12,12,12,12,-155,-105,-122,-104,-123,12,-106,-124,12,12,12,12,12,-108,-107,12,12,12,-144,12,12,-10,12,-24,-154,-28,12,12,-117,-110,-125,-112,-113,-116,-115,-118,12,-119,-114,-111,-121,-120,12,12,12,-15,12,12,12,12,12,12,12,12,-143,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-30,-29,]),'CCONST':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[83,83,83,83,-155,-105,-122,-104,-123,83,-106,-124,83,83,83,-108,-107,83,83,83,83,83,-154,83,83,-117,-110,-125,-112,-113,-116,-115,-118,83,-119,-114,-111,-121,-120,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'OD':([40,113,115,117,118,197,199,225,238,],[-206,-144,192,-206,-167,-166,-206,-143,281,]),'PROC':([72,],[160,]),'RESULT':([0,8,13,18,23,34,39,40,55,75,113,117,129,151,159,199,201,204,225,240,241,315,331,338,342,],[36,36,-7,-9,-6,-5,-8,36,36,36,-144,36,-10,-24,-28,36,36,-15,-143,36,36,36,36,-30,-29,]),'ARROW':([2,6,11,14,15,16,21,24,30,33,36,38,42,44,45,59,61,62,63,64,66,67,68,69,71,73,74,77,84,88,93,94,96,106,108,109,112,121,141,158,162,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,190,209,210,213,214,217,218,219,221,222,223,224,232,234,237,242,246,257,270,273,274,288,292,293,297,301,308,309,],[-70,-69,61,-23,-66,87,-169,-68,-168,-83,87,-71,87,-67,-72,87,-73,-155,-105,-122,-104,-123,87,-106,-124,87,87,87,61,-23,-108,-107,87,-66,-72,87,87,87,87,-154,-181,-23,87,87,61,-117,-110,-125,-112,-113,-116,-115,-118,87,-119,-114,-111,-121,-120,87,-171,87,87,87,87,87,87,-79,87,-180,-74,87,87,-170,87,87,87,-66,87,87,87,87,87,-82,-76,87,87,87,]),'ID':([0,1,4,5,8,13,16,18,23,34,36,39,40,42,43,47,49,50,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,116,117,121,126,127,128,129,131,141,150,151,152,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,203,204,207,209,210,213,214,217,218,220,221,224,225,232,236,237,240,241,242,246,266,270,273,274,277,288,291,292,295,301,308,309,315,331,332,338,342,],[14,49,49,49,14,-7,88,-9,-6,-5,88,-8,88,88,49,-21,-23,49,14,88,-155,-105,-122,-104,-123,88,-106,-124,88,88,167,88,88,-108,-107,88,88,88,-144,49,88,88,49,49,49,-10,49,88,49,-24,49,-154,-28,88,88,-117,-110,-125,-112,-113,-116,-115,-118,88,-119,-114,-111,-121,-120,88,88,88,49,-15,-22,88,88,88,88,88,88,49,88,88,-143,88,49,88,88,88,88,88,49,88,88,88,49,88,49,88,49,88,88,88,14,14,49,-30,-29,]),'OR':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,177,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'ASSIGN':([2,6,11,14,15,21,24,30,33,38,44,45,47,49,50,53,58,60,61,63,64,65,66,67,69,70,71,88,106,130,132,134,135,136,137,138,139,140,143,144,145,146,148,149,162,167,190,193,205,207,208,219,222,223,234,287,289,290,293,297,312,313,],[-70,-69,62,-23,-66,-169,-68,-168,-83,-71,-67,-72,-21,-23,141,152,-158,-157,-73,-105,-122,-156,-104,-123,-106,158,-124,-23,-66,-57,-49,-39,-42,210,-43,-45,-37,-41,-40,-44,-38,-56,-47,-48,-181,-23,-171,237,246,-22,-55,-79,-180,-74,-170,-50,-58,-51,-82,-76,-60,-65,]),'DIVIDE':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,81,82,83,84,85,86,88,89,91,92,99,100,102,103,105,106,107,108,110,111,162,167,170,172,190,219,222,223,228,230,231,234,257,271,293,297,320,],[-70,-69,63,-23,-66,-169,-68,-168,-83,-71,-67,-72,-73,-103,-133,-139,-129,63,-134,-140,-101,-137,-127,-23,-100,-130,-142,-131,-138,-102,-128,-97,-66,-141,-72,-126,-132,-181,-23,-99,-109,-171,-79,-180,-74,-98,-86,63,-170,-66,-135,-82,-76,-136,]),'ABS':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[10,10,-7,10,-9,-6,-5,10,-8,10,10,10,10,-155,-105,-122,-104,-123,10,-106,-124,10,10,10,10,10,-108,-107,10,10,10,-144,10,10,-10,10,-24,-154,-28,10,10,-117,-110,-125,-112,-113,-116,-115,-118,10,-119,-114,-111,-121,-120,10,10,10,-15,10,10,10,10,10,10,10,10,-143,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-30,-29,]),'PLUS':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,81,82,83,84,85,86,88,89,91,92,99,100,102,103,104,105,106,107,108,110,111,162,167,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,64,-23,-66,-169,-68,-168,-83,-71,-67,-72,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-130,-142,-131,-138,-102,-128,64,-97,-66,-141,-72,-126,-132,-181,-23,-99,-109,-171,-79,-180,-74,-98,64,-86,-96,-170,-66,-135,-82,-76,-136,]),'CHAR':([47,49,50,126,131,152,207,214,236,266,277,291,292,332,],[-21,-23,132,132,132,132,-22,132,132,132,132,132,132,132,]),'TIMES':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,81,82,83,84,85,86,88,89,91,92,99,100,102,103,105,106,107,108,110,111,162,167,170,172,190,219,222,223,228,230,231,234,257,271,293,297,320,],[-70,-69,66,-23,-66,-169,-68,-168,-83,-71,-67,-72,-73,-103,-133,-139,-129,66,-134,-140,-101,-137,-127,-23,-100,-130,-142,-131,-138,-102,-128,-97,-66,-141,-72,-126,-132,-181,-23,-99,-109,-171,-79,-180,-74,-98,-86,66,-170,-66,-135,-82,-76,-136,]),'ICONST':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,212,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[85,85,85,85,-155,-105,-122,-104,-123,85,-106,-124,85,85,85,-108,-107,85,85,85,85,85,-154,85,85,-117,-110,-125,-112,-113,-116,-115,-118,85,-119,-114,-111,-121,-120,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'MINUS':([2,6,11,14,15,16,21,24,30,33,36,38,42,44,45,59,61,62,63,64,66,67,68,69,71,73,74,76,78,79,80,81,82,83,84,85,86,88,89,91,92,96,99,100,102,103,104,105,106,107,108,109,110,111,112,121,141,158,162,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,190,209,210,213,214,217,218,219,221,222,223,224,228,229,230,231,232,234,237,242,246,257,270,271,273,274,288,292,293,297,301,308,309,320,],[-70,-69,67,-23,-66,94,-169,-68,-168,-83,94,-71,94,-67,-72,94,-73,-155,-105,-122,-104,-123,94,-106,-124,94,94,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-130,-142,94,-131,-138,-102,-128,67,-97,-66,-141,-72,94,-126,-132,94,94,94,-154,-181,-23,94,-99,94,-109,-117,-110,-125,-112,-113,-116,-115,-118,94,-119,-114,-111,-121,-120,94,-171,94,94,94,94,94,94,-79,94,-180,-74,94,-98,67,-86,-96,94,-170,94,94,94,-66,94,-135,94,94,94,94,-82,-76,94,94,94,-136,]),'WHILE':([2,6,21,24,30,33,38,40,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,119,132,135,137,138,144,148,149,162,170,172,190,194,195,196,219,222,223,228,229,230,231,234,271,279,287,290,293,297,303,304,306,320,323,324,326,328,334,],[-70,-69,-169,-68,-168,-83,-71,121,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,121,-49,-42,-43,-45,-44,-47,-48,-181,-99,-109,-171,-194,-195,-196,-79,-180,-74,-98,-94,-86,-96,-170,-135,-204,-50,-51,-82,-76,-87,-203,-200,-136,-88,-199,-198,-202,-197,]),'ASC':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[22,22,-7,22,-9,-6,-5,22,-8,22,22,22,22,-155,-105,-122,-104,-123,22,-106,-124,22,22,22,22,22,-108,-107,22,22,22,-144,22,22,-10,22,-24,-154,-28,22,22,-117,-110,-125,-112,-113,-116,-115,-118,22,-119,-114,-111,-121,-120,22,22,22,-15,22,22,22,22,22,22,22,22,-143,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-30,-29,]),'RBRACKET':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,132,135,137,138,144,148,149,155,156,162,164,165,170,172,190,219,222,223,226,227,228,229,230,231,234,252,253,255,256,258,259,260,261,262,263,268,269,271,287,290,293,297,298,303,311,314,320,323,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-49,-42,-43,-45,-44,-47,-48,-80,219,-181,223,-75,-99,-109,-171,-79,-180,-74,-80,271,-98,-94,-86,-96,-170,-59,289,-64,291,-61,-63,293,-54,-80,-81,-78,297,-135,-50,-51,-82,-76,320,-87,-52,-62,-136,-88,]),'LPAREN':([3,10,12,14,16,19,22,26,28,32,36,37,42,49,59,62,63,64,66,67,68,69,71,73,74,77,88,93,94,96,109,112,121,132,133,135,137,138,140,141,144,145,148,149,158,160,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,257,259,270,273,274,278,279,287,288,290,292,301,304,308,309,317,],[-176,-172,-174,73,96,112,-173,-179,-175,-177,96,-178,96,-23,96,-155,-105,-122,-104,-123,96,-106,-124,96,96,96,73,-108,-107,96,96,96,96,-49,209,-42,-43,-45,-46,96,-44,213,-47,-48,-154,220,73,96,96,-117,-110,-125,-112,-113,-116,-115,-118,96,-119,-114,-111,-121,-120,96,96,96,96,96,96,96,96,96,96,96,96,96,-46,213,96,96,96,-46,213,-50,96,-51,96,96,213,96,96,332,]),'ELSE':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,113,117,118,162,170,172,190,197,202,219,222,223,225,228,229,230,231,233,234,239,240,271,272,275,282,293,297,303,310,320,321,323,333,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-144,-206,-167,-181,-99,-109,-171,-166,241,-79,-180,-74,-143,-98,-94,-86,-96,273,-170,-161,-206,-135,-89,273,-165,-82,-76,-87,241,-136,-91,-88,-92,]),'GTEQUAL':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,173,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'LBRACKET':([2,6,11,14,15,21,24,30,33,38,44,45,61,76,78,79,80,82,83,84,85,86,88,91,92,99,100,103,106,107,108,110,111,142,147,162,167,172,190,219,222,223,230,234,257,271,293,297,320,],[-70,-69,59,-23,74,-169,-68,-168,-83,-71,-67,-72,-73,169,-133,-139,-129,-134,-140,59,-137,-127,-23,-130,-142,-131,-138,-128,74,-141,-72,-126,-132,212,214,-181,-23,59,-171,-79,-180,-74,-86,-170,74,-135,-82,-76,-136,]),'COMMA':([2,6,21,24,30,33,38,44,46,47,49,51,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,124,130,132,134,135,137,138,139,140,143,144,145,146,148,149,155,161,162,170,172,190,205,208,211,216,219,222,223,226,228,229,230,231,234,247,251,255,258,259,261,262,265,271,286,287,289,290,293,296,297,303,311,312,313,319,320,323,],[-70,-69,-169,-68,-168,-83,-71,-67,127,128,-23,150,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,203,-57,-49,-39,-42,-43,-45,-37,-41,-40,-44,-38,-56,-47,-48,218,221,-181,-99,-109,-171,-19,-55,-14,-27,-79,-180,-74,218,-98,-94,-86,-96,-170,-18,-13,-64,292,-63,-54,218,295,-135,-20,-50,-58,-51,-82,-34,-76,-87,-52,-60,-65,-33,-136,-88,]),'THEN':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,123,162,170,172,189,190,219,222,223,228,229,230,231,234,271,284,293,297,300,303,320,322,323,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,201,-181,-99,-109,232,-171,-79,-180,-74,-98,-94,-86,-96,-170,-135,201,-82,-76,232,-87,-136,232,-88,]),'IN':([2,6,21,24,30,33,38,44,49,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,193,219,222,223,228,229,230,231,234,235,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-23,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,175,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,236,-79,-180,-74,-98,-94,-86,-96,-170,277,-66,-135,-82,-76,-136,]),'NOT':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[93,93,93,93,-155,-105,-122,-104,-123,93,-106,-124,93,93,93,93,93,93,93,-154,93,93,-117,-110,-125,-112,-113,-116,-115,-118,93,-119,-114,-111,-121,-120,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'REF':([47,49,50,126,131,152,207,266,291,332,],[-21,-23,131,131,131,131,-22,131,131,131,]),'SCONST':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[92,92,92,92,-155,-105,-122,-104,-123,92,-106,-124,92,92,92,-108,-107,92,92,92,92,92,-154,92,92,-117,-110,-125,-112,-113,-116,-115,-118,92,-119,-114,-111,-121,-120,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'UPPER':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[28,28,-7,28,-9,-6,-5,28,-8,28,28,28,28,-155,-105,-122,-104,-123,28,-106,-124,28,28,28,28,28,-108,-107,28,28,28,-144,28,28,-10,28,-24,-154,-28,28,28,-117,-110,-125,-112,-113,-116,-115,-118,28,-119,-114,-111,-121,-120,28,28,28,-15,28,28,28,28,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'LESS':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,180,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'DOWN':([2,6,21,24,30,33,38,44,49,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,193,219,222,223,228,229,230,231,234,271,280,293,297,303,307,320,323,327,],[-70,-69,-169,-68,-168,-83,-71,-67,-23,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,235,-79,-180,-74,-98,-94,-86,-96,-170,-135,305,-82,-76,-87,325,-136,-88,-201,]),'LTEQUAL':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,182,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'TO':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,271,280,293,297,303,305,307,320,323,325,327,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-135,309,-82,-76,-87,309,309,-136,-88,309,-201,]),'$end':([8,13,18,20,23,25,34,39,55,56,57,113,129,151,153,159,204,225,338,342,],[-206,-7,-9,-1,-6,0,-5,-8,-206,-2,-4,-144,-10,-24,-3,-28,-15,-143,-30,-29,]),'EQUAL':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,183,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'FALSE':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[79,79,79,79,-155,-105,-122,-104,-123,79,-106,-124,79,79,79,-108,-107,79,79,79,79,79,-154,79,79,-117,-110,-125,-112,-113,-116,-115,-118,79,-119,-114,-111,-121,-120,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LENGTH':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[32,32,-7,32,-9,-6,-5,32,-8,32,32,32,32,-155,-105,-122,-104,-123,32,-106,-124,32,32,32,32,32,-108,-107,32,32,32,-144,32,32,-10,32,-24,-154,-28,32,32,-117,-110,-125,-112,-113,-116,-115,-118,32,-119,-114,-111,-121,-120,32,32,32,-15,32,32,32,32,32,32,32,32,-143,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-30,-29,]),'SEMI':([2,6,7,9,16,17,21,24,27,29,30,31,33,35,38,41,44,45,46,48,49,51,52,54,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,119,120,122,124,125,130,132,134,135,137,138,139,140,143,144,145,146,148,149,157,162,168,170,172,190,192,194,195,196,198,200,205,206,208,211,215,216,219,222,223,228,229,230,231,234,243,245,247,251,271,279,281,285,286,287,289,290,293,294,297,303,304,306,312,313,316,320,323,324,326,328,334,335,339,340,343,],[-70,-69,-149,-150,-206,-152,-169,-68,-151,113,-168,-148,-83,-145,-71,-146,-67,-147,-11,129,-23,-25,151,-184,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-187,-186,-131,-138,-185,-102,-128,-93,-97,-66,-141,-72,-126,-132,-188,-192,199,-193,-16,204,-57,-49,-39,-42,-43,-45,-37,-41,-40,-44,-38,-56,-47,-48,-153,-181,225,-99,-109,-171,-190,-194,-195,-196,-191,-205,-19,-12,-55,-14,-26,-27,-79,-180,-74,-98,-94,-86,-96,-170,-160,-17,-18,-13,-135,-204,-189,-159,-20,-50,-58,-51,-82,315,-76,-87,-203,-200,-60,-65,331,-136,-88,-199,-198,-202,-197,338,342,-36,-35,]),'TRUE':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[100,100,100,100,-155,-105,-122,-104,-123,100,-106,-124,100,100,100,-108,-107,100,100,100,100,100,-154,100,100,-117,-110,-125,-112,-113,-116,-115,-118,100,-119,-114,-111,-121,-120,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'RETURN':([0,8,13,18,23,34,39,40,55,75,113,117,129,151,159,199,201,204,225,240,241,315,331,338,342,],[16,16,-7,-9,-6,-5,-8,16,16,16,-144,16,-10,-24,-28,16,16,-15,-143,16,16,16,16,-30,-29,]),'PRINT':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[26,26,-7,26,-9,-6,-5,26,-8,26,26,26,26,-155,-105,-122,-104,-123,26,-106,-124,26,26,26,26,26,-108,-107,26,26,26,-144,26,26,-10,26,-24,-154,-28,26,26,-117,-110,-125,-112,-113,-116,-115,-118,26,-119,-114,-111,-121,-120,26,26,26,-15,26,26,26,26,26,26,26,26,-143,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-30,-29,]),'RPAREN':([2,6,21,24,30,33,38,44,49,61,73,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,95,99,100,102,103,104,105,106,107,108,110,111,112,130,132,134,135,137,138,139,140,143,144,145,146,148,149,161,162,163,170,172,185,190,191,208,219,222,223,228,229,230,231,234,248,254,261,264,265,267,271,287,289,290,293,296,297,303,311,312,313,318,319,320,323,337,341,],[-70,-69,-169,-68,-168,-83,-71,-67,-23,-73,162,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,-84,-130,-142,-85,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,190,-57,-49,-39,-42,-43,-45,-37,-41,-40,-44,-38,-56,-47,-48,-182,-181,222,-99,-109,230,-171,234,-55,-79,-180,-74,-98,-94,-86,-96,-170,287,290,-54,294,-31,-183,-135,-50,-58,-51,-82,-34,-76,-87,-52,-60,-65,-32,-33,-136,-88,340,343,]),'AND':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,176,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'END':([13,18,23,34,39,55,57,113,129,151,153,159,204,225,315,330,331,336,338,342,],[-7,-9,-6,-5,-8,-206,-4,-144,-10,-24,-3,-28,-15,-143,-206,335,-206,339,-30,-29,]),'READ':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,63,64,66,67,68,69,71,73,74,75,77,87,93,94,96,109,112,113,117,121,129,141,151,158,159,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[37,37,-7,37,-9,-6,-5,37,-8,37,37,37,37,-155,-105,-122,-104,-123,37,-106,-124,37,37,37,37,37,-108,-107,37,37,37,-144,37,37,-10,37,-24,-154,-28,37,37,-117,-110,-125,-112,-113,-116,-115,-118,37,-119,-114,-111,-121,-120,37,37,37,-15,37,37,37,37,37,37,37,37,-143,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-30,-29,]),'NOTEQ':([2,6,21,24,30,33,38,44,61,76,78,79,80,81,82,83,84,85,86,88,89,90,91,92,99,100,102,103,104,105,106,107,108,110,111,162,170,172,190,219,222,223,228,229,230,231,234,257,271,293,297,320,],[-70,-69,-169,-68,-168,-83,-71,-67,-73,-103,-133,-139,-129,-95,-134,-140,-101,-137,-127,-23,-100,179,-130,-142,-131,-138,-102,-128,-93,-97,-66,-141,-72,-126,-132,-181,-99,-109,-171,-79,-180,-74,-98,-94,-86,-96,-170,-66,-135,-82,-76,-136,]),'CHARS':([47,49,50,126,131,152,207,266,291,332,],[-21,-23,142,142,142,142,-22,142,142,142,]),'DO':([0,8,13,18,23,34,39,40,55,75,113,117,129,151,159,199,201,204,225,240,241,315,331,338,342,],[40,40,-7,-9,-6,-5,-8,40,40,40,-144,40,-10,-24,-28,40,40,-15,-143,40,40,40,40,-30,-29,]),'NULL':([16,36,42,59,62,63,64,66,67,68,69,71,73,74,77,93,94,96,109,112,121,141,158,169,171,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[107,107,107,107,-155,-105,-122,-104,-123,107,-106,-124,107,107,107,-108,-107,107,107,107,107,107,-154,107,107,-117,-110,-125,-112,-113,-116,-115,-118,107,-119,-114,-111,-121,-120,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'IF':([0,8,13,16,18,23,34,36,39,40,42,55,59,62,68,73,74,75,96,109,112,113,117,121,129,141,151,158,159,169,199,201,204,209,210,213,214,217,218,221,224,225,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,338,342,],[42,42,-7,109,-9,-6,-5,109,-8,42,109,42,109,-155,109,109,109,42,109,109,109,-144,42,109,-10,109,-24,-154,-28,109,42,42,-15,109,109,109,109,109,109,109,109,-143,109,109,42,42,109,109,109,109,109,109,109,109,109,109,42,42,-30,-29,]),'DCL':([0,8,13,18,23,34,39,55,113,129,151,159,204,225,315,331,338,342,],[43,43,-7,-9,-6,-5,-8,43,-144,-10,-24,-28,-15,-143,43,43,-30,-29,]),'BOOL':([47,49,50,126,131,152,207,214,236,266,277,291,292,332,],[-21,-23,149,149,149,149,-22,149,149,149,149,149,149,149,]),'ARRAY':([47,49,50,126,131,152,207,266,291,332,],[-21,-23,147,147,147,147,-22,147,147,147,]),'INT':([47,49,50,126,131,152,207,214,236,266,277,291,292,332,],[-21,-23,148,148,148,148,-22,148,148,148,148,148,148,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_definition':([4,150,],[51,51,]),'string_slice':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'string_length':([212,],[253,]),'empty_literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'action_statement_nullable':([40,117,199,240,],[115,197,238,282,]),'parenthesized_expression':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'right_element':([224,],[269,]),'result_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'arithmetic_additive_operator':([11,104,229,],[65,187,187,]),'end_value':([280,305,307,325,],[306,324,326,334,]),'statement':([0,8,55,315,331,],[8,55,55,55,55,]),'literal_range':([209,213,214,292,],[248,254,255,255,]),'return_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'mode':([50,126,131,152,266,291,332,],[136,205,208,216,296,313,337,]),'step_enumeration':([116,],[195,]),'procedure_definition':([72,],[159,]),'discrete_range_mode':([50,126,131,152,214,236,266,277,291,292,332,],[138,138,138,138,138,138,138,138,138,138,138,]),'mode_name':([50,126,131,152,266,291,332,],[139,139,139,139,139,139,139,]),'value_array_element':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'operator1':([90,],[181,]),'iteration':([116,],[194,]),'index_mode_list':([214,292,],[256,314,]),'integer_literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,212,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,252,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'do_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'start_element':([74,],[164,]),'builtin_call':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'declaration':([43,203,],[124,124,]),'builtin_name':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'statement_list':([0,],[20,]),'boolean_mode':([50,126,131,152,214,236,266,277,291,292,332,],[137,137,137,137,137,137,137,137,137,137,137,]),'monadic_operator':([16,36,42,59,68,73,74,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'synonym_statement':([0,8,55,315,331,],[23,23,23,23,23,]),'closed_dyadic_operator':([11,],[70,]),'string_mode':([50,126,131,152,266,291,332,],[146,146,146,146,146,146,146,]),'synonym_definition':([1,127,],[46,46,]),'expression':([16,36,42,59,68,73,74,96,109,112,121,141,169,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[98,114,123,155,157,161,165,185,189,161,200,211,226,250,251,250,250,261,262,161,268,272,280,284,286,298,299,300,261,250,322,327,328,]),'operator2':([104,229,],[188,188,]),'then_expression':([189,300,322,],[233,321,333,]),'assigning_operator':([11,],[68,]),'composite_mode':([50,126,131,152,266,291,332,],[143,143,143,143,143,143,143,]),'expression_list':([59,169,218,],[156,227,263,]),'declaration_statement':([0,8,55,315,331,],[34,34,34,34,34,]),'procedure_call':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'for_control':([40,],[119,]),'element_mode':([291,],[312,]),'exit_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'control_part':([40,],[120,]),'result_spec':([294,],[316,]),'else_expression':([233,275,],[276,302,]),'referenced_location':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'location':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'operand1':([16,36,42,59,68,73,74,96,109,112,121,141,169,181,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[104,104,104,104,104,104,104,104,104,104,104,104,104,229,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'array_slice':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'lower_bound':([59,209,213,214,292,],[154,249,249,249,249,]),'action_statement_list':([201,241,],[239,283,]),'literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'while_control':([40,119,],[122,198,]),'call_action':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[45,45,108,108,45,108,45,108,108,108,108,45,108,108,108,108,108,45,108,108,108,108,108,108,45,45,108,108,108,108,108,108,108,108,108,108,45,45,108,108,108,108,108,108,108,108,108,108,45,45,]),'array_mode':([50,126,131,152,266,291,332,],[130,130,130,130,130,130,130,]),'parameter_list':([73,112,221,],[163,191,267,]),'primitive_value':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'declaration_list':([43,203,],[125,245,]),'range_enumeration':([116,],[196,]),'discrete_mode_name':([50,126,131,152,214,236,266,277,291,292,332,],[133,133,133,133,133,133,133,133,133,133,133,]),'operand2':([16,36,42,59,68,73,74,96,109,112,121,141,169,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,231,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'upper_bound':([217,288,],[260,311,]),'statement_nullable':([8,55,315,331,],[56,153,330,336,]),'character_string_literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'array_location':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[11,11,84,84,11,84,11,84,84,84,84,11,84,172,84,84,84,11,84,84,84,84,84,84,11,11,84,84,84,84,84,84,84,84,84,84,11,11,84,84,84,84,84,84,84,84,84,84,11,11,]),'identifier_list':([1,4,43,127,128,150,203,220,295,],[50,53,126,50,207,53,126,266,266,]),'string_concatenation_operator':([11,104,229,],[58,186,186,]),'arithmetic_multiplicative_operator':([11,81,231,],[60,171,171,]),'identifier':([0,1,4,5,8,16,36,40,42,43,50,55,59,68,73,74,75,77,87,96,109,112,116,117,121,126,127,128,131,141,150,152,169,171,181,188,199,201,203,209,210,213,214,217,218,220,221,224,232,236,237,240,241,242,246,266,270,273,274,277,288,291,292,295,301,308,309,315,331,332,],[15,47,47,54,15,106,106,15,106,47,140,15,106,106,106,106,106,106,106,106,106,106,193,15,106,140,47,47,140,106,47,140,106,106,106,106,15,15,47,106,106,106,257,106,106,47,106,106,106,278,106,15,15,106,106,140,106,106,106,278,106,140,257,47,106,106,106,15,15,140,]),'synonym_list':([1,127,],[48,206,]),'dereferenced_reference':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'newmode_list':([4,150,],[52,215,]),'operand4':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[89,89,89,89,89,89,89,170,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'operand0':([16,36,42,59,68,73,74,96,109,112,121,141,169,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'array_element':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'procedure_statement':([0,8,55,315,331,],[18,18,18,18,18,]),'character_mode':([50,126,131,152,214,236,266,277,291,292,332,],[144,144,144,144,144,144,144,144,144,144,144,]),'conditional_expression':([16,36,42,59,68,73,74,96,109,112,121,141,169,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'string_element':([0,8,16,36,40,42,55,59,68,73,74,75,77,87,96,109,112,117,121,141,169,171,181,188,199,201,209,210,213,214,217,218,221,224,232,237,240,241,242,246,270,273,274,288,292,301,308,309,315,331,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'empty':([8,16,40,55,117,199,240,315,331,],[57,97,118,57,118,118,118,57,57,]),'elsif_expression':([233,],[275,]),'membership_operator':([90,],[174,]),'boolean_literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'else_clause':([202,310,],[244,329,]),'program':([0,],[25,]),'if_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'formal_parameter_list':([220,295,],[264,318,]),'reference_mode':([50,126,131,152,266,291,332,],[134,134,134,134,134,134,134,]),'integer_mode':([50,126,131,152,214,236,266,277,291,292,332,],[135,135,135,135,135,135,135,135,135,135,135,]),'assignment_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'step_value':([280,],[307,]),'newmode_statement':([0,8,55,315,331,],[13,13,13,13,13,]),'formal_parameter':([220,295,],[265,265,]),'relational_operator':([90,],[184,]),'left_element':([74,],[166,]),'value_array_slice':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'bracketed_action':([0,8,40,55,75,117,199,201,240,241,315,331,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'operand3':([16,36,42,59,68,73,74,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[105,105,105,105,105,105,105,105,105,105,105,105,105,228,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'action_statement':([0,8,40,55,117,199,201,240,241,315,331,],[39,39,117,39,117,117,240,117,240,39,39,]),'index_mode':([214,292,],[258,258,]),'result':([16,],[101,]),'character_literal':([16,36,42,59,68,73,74,77,96,109,112,121,141,169,171,181,188,209,210,213,214,217,218,221,224,232,237,242,246,270,273,274,288,292,301,308,309,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'initialization':([205,],[247,]),'action':([0,8,40,55,75,117,199,201,240,241,315,331,],[29,29,29,29,168,29,29,29,29,29,29,29,]),'discrete_mode':([50,126,131,152,214,236,266,277,291,292,332,],[145,145,145,145,259,279,145,304,145,259,145,]),'then_clause':([123,284,],[202,310,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',416),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',420),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',428),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',433),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',437),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',441),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',442),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',458),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',465),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',466),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',473),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',474),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',482),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',483),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',490),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',491),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',492),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',503),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',504),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',505),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',509),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',510),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',514),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',518),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',519),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',533),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',534),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',538),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',543),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',548),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',560),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',567),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',571),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',575),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',579),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',587),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',591),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',596),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',600),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',604),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',615),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',616),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',621),
  ('action -> assignment_action','action',1,'p_action','Parser.py',622),
  ('action -> call_action','action',1,'p_action','Parser.py',623),
  ('action -> exit_action','action',1,'p_action','Parser.py',624),
  ('action -> result_action','action',1,'p_action','Parser.py',625),
  ('action -> return_action','action',1,'p_action','Parser.py',626),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',630),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',635),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',639),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',640),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',644),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',650),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',651),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',659),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',661),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',672),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',684),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',685),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',702),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',703),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',707),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',708),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',713),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',724),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',725),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',729),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',739),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',747),
  ('result -> expression','result',1,'p_result','Parser.py',751),
  ('result -> empty','result',1,'p_result','Parser.py',752),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',755),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',763),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',764),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',771),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',772),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',773),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',777),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',781),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',786),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',789),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',801),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',805),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',809),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',810),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',817),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',823),
]

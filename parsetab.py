
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D90B9E909A527FFE6036FAEDF024B92C'
    
_lr_action_items = {'INT':([45,46,47,119,129,192,207,210,231,256,272,285,286,315,],[-23,126,-21,126,126,126,126,-22,126,126,126,126,126,126,]),'CCONST':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[55,55,55,55,55,-103,-102,55,55,55,-117,-151,-118,55,-100,55,-101,-99,-119,55,55,55,55,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,55,-110,-105,-113,55,-150,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'SYN':([0,6,10,13,18,28,29,52,118,147,152,194,196,242,290,313,318,332,337,342,345,346,],[1,1,-5,-9,-7,-8,-6,1,-140,-10,-28,-24,-15,-139,1,1,1,1,-32,-31,-30,-29,]),'TRUE':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[57,57,57,57,57,-103,-102,57,57,57,-117,-151,-118,57,-100,57,-101,-99,-119,57,57,57,57,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,57,-110,-105,-113,57,-150,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FOR':([15,],[89,]),'MODULO':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,64,65,67,69,71,72,73,75,76,77,78,80,81,82,83,85,86,87,88,99,150,155,177,199,201,212,225,226,228,235,241,251,261,271,307,319,],[-78,-70,-23,-164,104,-69,-71,-72,-68,-165,-125,-135,-98,-133,-72,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,104,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-23,-176,104,-81,-93,-74,-166,-68,-130,-136,-77,-131,]),'BOOL':([45,46,47,119,129,192,207,210,231,256,272,285,286,315,],[-23,128,-21,128,128,128,128,-22,128,128,128,128,128,128,]),'ELSIF':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,90,93,99,118,150,155,157,177,183,199,212,216,217,222,225,226,227,228,235,241,242,261,262,267,270,271,295,299,307,319,321,323,334,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-163,-202,-73,-140,-177,-104,218,-94,-162,-167,-176,-157,-202,266,-91,-81,-89,-93,-74,-166,-139,-130,-161,297,-84,-136,218,-82,-77,-131,-86,-83,-87,]),'ID':([0,1,6,8,10,13,15,18,19,21,22,28,29,30,37,45,46,47,49,52,59,61,68,70,74,84,89,93,95,97,98,100,101,102,103,104,106,109,118,119,122,123,125,129,138,146,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,192,193,194,196,197,206,207,208,209,210,211,213,217,218,220,223,230,231,233,234,238,242,256,260,266,269,272,283,285,286,290,292,297,303,305,313,315,318,332,337,342,345,346,],[5,45,5,88,-5,-9,88,-7,88,45,45,-8,-6,45,88,-23,45,-21,88,5,88,88,-103,-102,88,88,45,88,88,-117,-151,-118,88,-100,88,-101,-99,-119,-140,45,88,201,45,45,88,45,-10,-28,88,88,88,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,88,-110,-105,-113,88,88,-150,45,45,-24,-15,45,88,88,88,88,-22,88,45,88,88,88,88,88,45,88,88,88,-139,45,88,88,88,45,88,88,45,5,45,88,88,88,5,45,5,5,-32,-31,-30,-29,]),'REF':([45,46,47,119,129,192,210,256,286,315,],[-23,129,-21,129,129,129,-22,129,129,129,]),'END':([10,13,18,28,29,51,52,118,147,152,153,194,196,242,290,313,314,318,329,332,333,337,340,342,345,346,],[-5,-9,-7,-8,-6,-4,-202,-140,-10,-28,-3,-24,-15,-139,-202,-202,330,-202,336,-202,341,-32,344,-31,-30,-29,]),'ARROW':([2,4,5,7,8,16,17,19,23,32,36,37,39,49,58,61,68,69,70,74,83,84,88,95,97,98,99,100,101,102,103,104,106,109,122,138,150,154,155,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,199,201,206,207,208,209,211,212,218,223,230,233,234,235,238,241,251,260,266,269,283,285,297,303,305,307,],[-78,-70,-23,-164,59,99,-69,59,-71,-72,-68,59,-165,59,-72,59,-103,99,-102,59,-68,59,-23,59,-117,-151,-73,-118,59,-100,59,-101,-99,-119,59,59,-177,59,99,59,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,59,-110,-105,-113,59,-150,-167,-23,59,59,59,59,59,-176,59,59,59,59,59,-74,59,-166,-68,59,59,59,59,59,59,59,59,-77,]),'IF':([0,6,8,10,13,15,18,19,28,29,37,49,52,61,74,93,95,98,101,103,118,122,123,138,147,152,154,156,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[8,8,61,-5,-9,8,-7,61,-8,-6,61,61,8,61,61,8,61,-151,61,61,-140,61,8,61,-10,-28,61,8,8,-150,-24,-15,61,61,61,61,61,8,61,8,61,61,61,61,61,-139,61,61,61,61,61,8,61,61,61,8,8,8,-32,-31,-30,-29,]),'CHAR':([45,46,47,119,129,192,207,210,231,256,272,285,286,315,],[-23,135,-21,135,135,135,135,-22,135,135,135,135,135,135,]),'LESS':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,175,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'HAT':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[62,62,62,62,62,-103,-102,62,62,62,-117,-151,-118,62,-100,62,-101,-99,-119,62,62,62,62,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,62,-110,-105,-113,62,-150,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'BY':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,261,271,273,299,307,319,323,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-130,-136,303,-82,-77,-131,-83,]),'ASSIGN':([2,4,5,7,16,17,23,32,36,39,45,46,47,83,88,97,99,100,102,104,105,106,107,108,109,110,114,126,127,128,130,132,133,134,135,136,137,139,140,141,142,145,150,180,195,199,201,203,210,212,235,241,282,284,287,307,310,311,],[-78,-70,-23,-164,98,-69,-71,-72,-68,-165,-23,138,-21,-68,-23,-117,-73,-118,-100,-101,-153,-99,191,-154,-119,-152,192,-49,-47,-50,-42,-59,-45,-44,-51,-46,-58,-43,-41,-39,-40,209,-177,230,238,-167,-23,-57,-22,-176,-74,-166,-60,-53,-52,-77,-62,-67,]),'LBRACKET':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,64,67,69,71,72,73,75,76,77,78,81,83,85,87,88,99,131,143,150,155,199,201,212,226,235,241,251,261,271,307,319,],[-78,-70,-23,-164,101,-69,-71,-72,-68,-165,-125,-135,154,-133,-72,-134,-122,101,-138,-124,-127,-121,-123,-129,-126,-137,-68,-132,-128,-23,-73,204,207,-177,101,-167,-23,-176,-81,-74,-166,-68,-130,-136,-77,-131,]),'COLON':([2,4,5,7,17,23,36,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,187,188,199,212,214,225,226,227,228,235,241,245,246,251,261,271,299,307,319,323,],[-78,-70,50,-164,-69,-71,123,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,233,-55,-167,-176,260,-91,-81,-89,-93,-74,-166,283,-55,-68,-130,-136,-82,-77,-131,-83,]),'RPAREN':([2,4,7,17,23,39,45,49,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,122,126,127,128,130,132,133,134,135,136,137,139,140,141,142,148,149,150,155,163,177,198,199,203,212,213,224,225,226,227,228,235,241,247,253,255,258,259,261,271,278,282,284,287,288,299,307,308,310,311,312,316,319,323,331,338,],[-78,-70,-164,-69,-71,-165,-23,150,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,199,-49,-47,-50,-42,-59,-45,-44,-51,-46,-58,-43,-41,-39,-40,-178,212,-177,-104,226,-94,241,-167,-57,-176,257,271,-91,-81,-89,-93,-74,-166,284,287,-179,-33,293,-130,-136,-56,-60,-53,-52,-36,-82,-77,-54,-62,-67,-35,-34,-131,-83,339,343,]),'RETURNS':([257,293,],[291,291,]),'LOWER':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[3,3,3,-5,-9,3,-7,3,-8,-6,3,3,3,3,3,-103,-102,3,3,3,3,-117,-151,-118,3,-100,3,-101,-99,-119,-140,3,3,3,-10,-28,3,3,3,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,3,-110,-105,-113,3,3,-150,-24,-15,3,3,3,3,3,3,3,3,3,3,3,3,3,-139,3,3,3,3,3,3,3,3,3,3,3,3,-32,-31,-30,-29,]),'NOT':([8,19,37,49,61,74,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[68,68,68,68,68,68,68,-117,-151,-118,68,-100,68,-101,-99,-119,68,68,68,68,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,68,-110,-105,-113,68,-150,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'UPPER':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[14,14,14,-5,-9,14,-7,14,-8,-6,14,14,14,14,14,-103,-102,14,14,14,14,-117,-151,-118,14,-100,14,-101,-99,-119,-140,14,14,14,-10,-28,14,14,14,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,14,-110,-105,-113,14,14,-150,-24,-15,14,14,14,14,14,14,14,14,14,14,14,14,14,-139,14,14,14,14,14,14,14,14,14,14,14,14,-32,-31,-30,-29,]),'$end':([6,9,10,13,18,24,28,29,51,52,53,118,147,152,153,194,196,242,337,342,345,346,],[-202,-1,-5,-9,-7,0,-8,-6,-4,-202,-2,-140,-10,-28,-3,-24,-15,-139,-32,-31,-30,-29,]),'DO':([0,6,10,13,15,18,28,29,52,93,118,123,147,152,156,182,194,196,217,220,242,290,313,318,332,337,342,345,346,],[15,15,-5,-9,15,-7,-8,-6,15,15,-140,15,-10,-28,15,15,-24,-15,15,15,-139,15,15,15,15,-32,-31,-30,-29,]),'READ':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[20,20,20,-5,-9,20,-7,20,-8,-6,20,20,20,20,20,-103,-102,20,20,20,20,-117,-151,-118,20,-100,20,-101,-99,-119,-140,20,20,20,-10,-28,20,20,20,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,20,-110,-105,-113,20,20,-150,-24,-15,20,20,20,20,20,20,20,20,20,20,20,20,20,-139,20,20,20,20,20,20,20,20,20,20,20,20,-32,-31,-30,-29,]),'AND':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,171,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'MINUS':([2,4,5,7,8,16,17,19,23,32,36,37,39,49,54,55,56,57,58,61,63,64,65,67,69,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,88,95,97,98,99,100,101,102,103,104,106,109,122,138,150,154,155,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,191,199,201,206,207,208,209,211,212,218,223,225,226,227,228,230,233,234,235,238,241,251,260,261,266,269,271,283,285,297,303,305,307,319,],[-78,-70,-23,-164,70,100,-69,70,-71,-72,-68,70,-165,70,-125,-135,-98,-133,-72,70,100,-134,-95,-122,-96,-138,-124,-127,70,-121,-123,-129,-126,-90,-137,-97,-68,-132,-92,-128,-23,70,-117,-151,-73,-118,70,-100,70,-101,-99,-119,70,70,-177,70,-104,70,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,70,-110,-105,-113,70,-94,-150,-167,-23,70,70,70,70,70,-176,70,70,-91,-81,100,-93,70,70,70,-74,70,-166,-68,70,-130,70,70,-136,70,70,70,70,70,-77,-131,]),'RETURN':([0,6,10,13,15,18,28,29,52,93,118,123,147,152,156,182,194,196,217,220,242,290,313,318,332,337,342,345,346,],[19,19,-5,-9,19,-7,-8,-6,19,19,-140,19,-10,-28,19,19,-24,-15,19,19,-139,19,19,19,19,-32,-31,-30,-29,]),'DIVIDE':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,64,65,67,69,71,72,73,75,76,77,78,80,81,82,83,85,86,87,88,99,150,155,177,199,201,212,225,226,228,235,241,251,261,271,307,319,],[-78,-70,-23,-164,102,-69,-71,-72,-68,-165,-125,-135,-98,-133,-72,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,102,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-23,-176,102,-81,-93,-74,-166,-68,-130,-136,-77,-131,]),'SCONST':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[71,71,71,71,71,-103,-102,71,71,71,-117,-151,-118,71,-100,71,-101,-99,-119,71,71,71,71,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,71,-110,-105,-113,71,-150,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TYPE':([0,6,10,13,18,28,29,52,118,147,152,194,196,242,290,313,318,332,337,342,345,346,],[21,21,-5,-9,-7,-8,-6,21,-140,-10,-28,-24,-15,-139,21,21,21,21,-32,-31,-30,-29,]),'EXIT':([0,6,10,13,15,18,28,29,52,93,118,123,147,152,156,182,194,196,217,220,242,290,313,318,332,337,342,345,346,],[22,22,-5,-9,22,-7,-8,-6,22,22,-140,22,-10,-28,22,22,-24,-15,22,22,-139,22,22,22,22,-32,-31,-30,-29,]),'PLUS':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,80,81,82,83,85,86,87,88,99,150,155,177,199,201,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-23,-164,97,-69,-71,-72,-68,-165,-125,-135,-98,-133,-72,97,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-23,-176,-91,-81,97,-93,-74,-166,-68,-130,-136,-77,-131,]),'PROC':([50,],[151,]),'LENGTH':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[25,25,25,-5,-9,25,-7,25,-8,-6,25,25,25,25,25,-103,-102,25,25,25,25,-117,-151,-118,25,-100,25,-101,-99,-119,-140,25,25,25,-10,-28,25,25,25,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,25,-110,-105,-113,25,25,-150,-24,-15,25,25,25,25,25,25,25,25,25,25,25,25,25,-139,25,25,25,25,25,25,25,25,25,25,25,25,-32,-31,-30,-29,]),'LTEQUAL':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,166,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'IN':([2,4,7,17,23,39,45,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,180,199,212,225,226,227,228,229,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-23,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,167,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,231,-167,-176,-91,-81,-89,-93,272,-74,-166,-68,-130,-136,-77,-131,]),'OR':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,168,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'GREATER':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,169,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'DCL':([0,6,10,13,18,28,29,52,118,147,152,194,196,242,290,313,318,332,337,342,345,346,],[30,30,-5,-9,-7,-8,-6,30,-140,-10,-28,-24,-15,-139,30,30,30,30,-32,-31,-30,-29,]),'LPAREN':([3,5,8,14,19,20,25,26,33,35,37,40,42,45,49,61,62,68,70,74,84,88,95,97,98,100,101,102,103,104,106,109,122,126,127,128,133,134,135,136,138,139,142,144,151,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,201,206,207,208,209,211,218,223,230,233,234,238,249,251,260,266,269,274,275,283,284,285,287,291,297,301,303,305,],[-172,49,74,-171,74,-174,-173,-175,-168,122,74,-169,-170,-23,74,74,159,-103,-102,74,74,49,74,-117,-151,-118,74,-100,74,-101,-99,-119,74,-49,-47,-50,-45,-44,-51,-46,74,-48,206,208,213,74,74,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,74,-110,-105,-113,74,-150,49,74,74,74,74,74,74,74,74,74,74,74,206,-48,74,74,74,206,-48,74,-53,74,-52,315,74,206,74,74,]),'FALSE':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[64,64,64,64,64,-103,-102,64,64,64,-117,-151,-118,64,-100,64,-101,-99,-119,64,64,64,64,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,64,-110,-105,-113,64,-150,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'WHILE':([2,4,7,15,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,94,99,126,127,128,133,134,135,136,150,155,177,178,179,181,199,212,225,226,227,228,235,241,261,271,274,284,287,299,301,306,307,319,323,324,327,328,335,],[-78,-70,-164,95,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,95,-73,-49,-47,-50,-45,-44,-51,-46,-177,-104,-94,-190,-191,-192,-167,-176,-91,-81,-89,-93,-74,-166,-130,-136,-200,-53,-52,-82,-199,-196,-77,-131,-83,-195,-194,-198,-193,]),'CHARS':([45,46,47,119,129,192,210,256,286,315,],[-23,131,-21,131,131,131,-22,131,131,131,]),'TIMES':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,64,65,67,69,71,72,73,75,76,77,78,80,81,82,83,85,86,87,88,99,150,155,177,199,201,212,225,226,228,235,241,251,261,271,307,319,],[-78,-70,-23,-164,106,-69,-71,-72,-68,-165,-125,-135,-98,-133,-72,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,106,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-23,-176,106,-81,-93,-74,-166,-68,-130,-136,-77,-131,]),'TO':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,261,271,273,299,302,304,307,319,323,325,326,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-130,-136,305,-82,305,305,-77,-131,-83,-197,305,]),'NOTEQ':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,173,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'FI':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,90,93,99,118,150,155,157,177,183,199,212,216,217,219,225,226,227,228,235,241,242,261,262,265,268,271,295,298,299,300,307,319,320,323,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-163,-202,-73,-140,-177,-104,221,-94,-162,-167,-176,-157,-202,264,-91,-81,-89,-93,-74,-166,-139,-130,-161,-158,299,-136,-160,323,-82,-85,-77,-131,-159,-83,]),'NULL':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[81,81,81,81,81,-103,-102,81,81,81,-117,-151,-118,81,-100,81,-101,-99,-119,81,81,81,81,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,81,-110,-105,-113,81,-150,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'CONCAT':([2,4,5,7,16,17,23,32,36,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,80,81,82,83,85,86,87,88,99,150,155,177,199,201,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-23,-164,109,-69,-71,-72,-68,-165,-125,-135,-98,-133,-72,109,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-23,-176,-91,-81,109,-93,-74,-166,-68,-130,-136,-77,-131,]),'COMMA':([2,4,7,17,23,39,44,45,47,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,115,121,126,127,128,130,132,133,134,135,136,137,139,140,141,142,148,150,155,177,188,195,199,203,205,212,214,225,226,227,228,235,236,239,241,248,249,252,254,258,261,271,278,279,281,282,284,287,288,299,307,308,310,311,312,319,323,],[-78,-70,-164,-69,-71,-165,125,-23,146,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,193,197,-49,-47,-50,-42,-59,-45,-44,-51,-46,-58,-43,-41,-39,-40,211,-177,-104,-94,234,-19,-167,-57,-14,-176,234,-91,-81,-89,-93,-74,-27,-18,-166,285,-65,-66,-13,292,-130,-136,-56,234,-20,-60,-53,-52,-36,-82,-77,-54,-62,-67,-35,-131,-83,]),'DOWN':([2,4,7,17,23,39,45,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,180,199,212,225,226,227,228,235,241,261,271,273,299,304,307,319,323,325,],[-78,-70,-164,-69,-71,-165,-23,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,229,-167,-176,-91,-81,-89,-93,-74,-166,-130,-136,302,-82,326,-77,-131,-83,-197,]),'ABS':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[33,33,33,-5,-9,33,-7,33,-8,-6,33,33,33,33,33,-103,-102,33,33,33,33,-117,-151,-118,33,-100,33,-101,-99,-119,-140,33,33,33,-10,-28,33,33,33,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,33,-110,-105,-113,33,33,-150,-24,-15,33,33,33,33,33,33,33,33,33,33,33,33,33,-139,33,33,33,33,33,33,33,33,33,33,33,33,-32,-31,-30,-29,]),'OD':([15,90,93,96,118,182,183,232,242,],[-202,-163,-202,186,-140,-202,-162,276,-139,]),'RESULT':([0,6,10,13,15,18,28,29,52,93,118,123,147,152,156,182,194,196,217,220,242,290,313,318,332,337,342,345,346,],[37,37,-5,-9,37,-7,-8,-6,37,37,-140,37,-10,-28,37,37,-24,-15,37,37,-139,37,37,37,37,-32,-31,-30,-29,]),'EQUAL':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,170,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'RBRACKET':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,126,127,128,133,134,135,136,150,155,177,188,189,199,212,214,215,225,226,227,228,235,241,243,244,248,249,250,252,261,271,277,278,279,280,284,287,294,299,307,308,309,319,323,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-49,-47,-50,-45,-44,-51,-46,-177,-104,-94,-75,235,-167,-176,-75,261,-91,-81,-89,-93,-74,-166,-61,282,-63,-65,286,-66,-130,-136,307,-56,-75,-76,-53,-52,319,-82,-77,-54,-64,-131,-83,]),'GTEQUAL':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,177,199,212,225,226,227,228,235,241,251,261,271,307,319,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-122,-96,-138,-124,-127,-121,-123,-129,-126,164,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,-94,-167,-176,-91,-81,-89,-93,-74,-166,-68,-130,-136,-77,-131,]),'ARRAY':([45,46,47,119,129,192,210,256,286,315,],[-23,143,-21,143,143,143,-22,143,143,143,]),'ASC':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[40,40,40,-5,-9,40,-7,40,-8,-6,40,40,40,40,40,-103,-102,40,40,40,40,-117,-151,-118,40,-100,40,-101,-99,-119,-140,40,40,40,-10,-28,40,40,40,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,40,-110,-105,-113,40,40,-150,-24,-15,40,40,40,40,40,40,40,40,40,40,40,40,40,-139,40,40,40,40,40,40,40,40,40,40,40,40,-32,-31,-30,-29,]),'ICONST':([8,19,37,49,61,68,70,74,84,95,97,98,100,101,102,103,104,106,109,122,138,154,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,191,204,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[85,85,85,85,85,-103,-102,85,85,85,-117,-151,-118,85,-100,85,-101,-99,-119,85,85,85,224,85,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,85,-110,-105,-113,85,-150,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'SEMI':([2,4,7,11,12,17,19,23,27,31,32,34,38,39,41,43,44,45,48,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,99,111,112,113,115,116,117,120,121,124,126,127,128,130,132,133,134,135,136,137,139,140,141,142,150,155,177,178,179,181,184,185,186,190,195,199,200,202,203,205,212,221,225,226,227,228,235,236,237,239,240,241,254,257,261,264,271,274,276,281,282,284,287,289,293,299,301,306,307,310,311,317,319,323,324,327,328,330,335,336,339,341,343,344,],[-78,-70,-164,-141,-148,-69,-202,-71,118,-146,-143,-142,-144,-165,-147,-145,-11,-23,147,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-189,182,-188,-73,-183,-182,-181,-25,194,-180,196,-16,-184,-49,-47,-50,-42,-59,-45,-44,-51,-46,-58,-43,-41,-39,-40,-177,-104,-94,-190,-191,-192,-187,-201,-186,-149,-19,-167,242,-12,-57,-14,-176,-156,-91,-81,-89,-93,-74,-27,-26,-18,-17,-166,-13,290,-130,-155,-136,-200,-185,-20,-60,-53,-52,313,318,-82,-199,-196,-77,-62,-67,332,-131,-83,-195,-194,-198,337,-193,342,-38,345,-37,346,]),'LOC':([45,126,127,128,130,132,133,134,135,136,137,139,140,141,142,203,282,284,287,288,310,311,331,],[-23,-49,-47,-50,-42,-59,-45,-44,-51,-46,-58,-43,-41,-39,-40,-57,-60,-53,-52,312,-62,-67,338,]),'THEN':([2,4,7,17,23,39,54,55,56,57,58,60,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,99,150,155,158,177,199,212,225,226,227,228,235,241,261,263,271,296,299,307,319,322,323,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,156,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-73,-177,-104,223,-94,-167,-176,-91,-81,-89,-93,-74,-166,-130,156,-136,223,-82,-77,-131,223,-83,]),'NUM':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[42,42,42,-5,-9,42,-7,42,-8,-6,42,42,42,42,42,-103,-102,42,42,42,42,-117,-151,-118,42,-100,42,-101,-99,-119,-140,42,42,42,-10,-28,42,42,42,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,42,-110,-105,-113,42,42,-150,-24,-15,42,42,42,42,42,42,42,42,42,42,42,42,42,-139,42,42,42,42,42,42,42,42,42,42,42,42,-32,-31,-30,-29,]),'ELSE':([2,4,7,17,23,39,54,55,56,57,58,63,64,65,66,67,69,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,90,93,99,118,150,155,157,177,183,199,212,216,217,222,225,226,227,228,235,241,242,261,262,267,270,271,295,299,307,319,321,323,334,],[-78,-70,-164,-69,-71,-165,-125,-135,-98,-133,-72,-88,-134,-95,-80,-122,-96,-138,-124,-127,-121,-123,-129,-126,-79,-90,-137,-97,-68,-132,-92,-128,-23,-163,-202,-73,-140,-177,-104,220,-94,-162,-167,-176,-157,-202,269,-91,-81,-89,-93,-74,-166,-139,-130,-161,269,-84,-136,220,-82,-77,-131,-86,-83,-87,]),'PRINT':([0,6,8,10,13,15,18,19,28,29,37,49,52,59,61,68,70,74,84,93,95,97,98,100,101,102,103,104,106,109,118,122,123,138,147,152,154,156,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,182,191,194,196,206,207,208,209,211,217,218,220,223,230,233,234,238,242,260,266,269,283,285,290,297,303,305,313,318,332,337,342,345,346,],[26,26,26,-5,-9,26,-7,26,-8,-6,26,26,26,26,26,-103,-102,26,26,26,26,-117,-151,-118,26,-100,26,-101,-99,-119,-140,26,26,26,-10,-28,26,26,26,-116,-115,-112,-106,-114,-120,-108,-111,-109,-107,26,-110,-105,-113,26,26,-150,-24,-15,26,26,26,26,26,26,26,26,26,26,26,26,26,-139,26,26,26,26,26,26,26,26,26,26,26,26,-32,-31,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'integer_literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,204,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,243,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'identifier_list':([1,21,30,125,146,193,197,213,292,],[46,114,119,46,210,114,119,256,256,]),'primitive_value':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'action_statement_list':([156,220,],[216,265,]),'value_array_slice':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'empty':([6,15,19,52,93,182,217,290,313,318,332,],[51,90,111,51,90,90,90,51,51,51,51,]),'boolean_literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'arithmetic_multiplicative_operator':([16,80,225,],[105,176,176,]),'index_mode':([207,285,],[248,248,]),'initialization':([195,],[239,]),'end_value':([273,302,304,326,],[306,324,327,335,]),'then_expression':([158,296,322,],[222,321,334,]),'boolean_mode':([46,119,129,192,207,231,256,272,285,286,315,],[133,133,133,133,133,133,133,133,133,133,133,]),'integer_mode':([46,119,129,192,207,231,256,272,285,286,315,],[134,134,134,134,134,134,134,134,134,134,134,]),'do_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operand1':([8,19,37,49,61,74,95,101,103,122,138,154,172,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[63,63,63,63,63,63,63,63,63,63,63,63,227,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'string_mode':([46,119,129,192,256,286,315,],[137,137,137,137,137,137,137,]),'operand4':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[65,65,65,65,65,65,177,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'if_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'mode_name':([46,119,129,192,256,286,315,],[141,141,141,141,141,141,141,]),'value_array_element':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'elsif_expression':([222,],[267,]),'newmode_statement':([0,6,52,290,313,318,332,],[18,18,18,18,18,18,18,]),'array_slice':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'mode':([46,119,129,192,256,286,315,],[145,195,203,236,288,311,331,]),'control_part':([15,],[92,]),'operand2':([8,19,37,49,61,74,95,101,103,122,138,154,160,172,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[80,80,80,80,80,80,80,80,80,80,80,80,225,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[27,27,27,27,27,200,27,27,27,27,27,27,27,27,]),'action_statement':([0,6,15,52,93,156,182,217,220,290,313,318,332,],[28,28,93,28,93,217,93,93,217,28,28,28,28,]),'synonym_statement':([0,6,52,290,313,318,332,],[29,29,29,29,29,29,29,]),'result':([19,],[113,]),'literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_string_literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'string_concatenation_operator':([16,63,227,],[108,161,161,]),'string_length':([204,],[244,]),'index_mode_list':([207,285,],[250,309,]),'synonym_definition':([1,125,],[44,44,]),'assignment_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'composite_mode':([46,119,129,192,256,286,315,],[130,130,130,130,130,130,130,]),'referenced_location':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'literal_range':([206,207,208,285,],[247,252,253,252,]),'declaration_list':([30,197,],[120,240,]),'discrete_mode_name':([46,119,129,192,207,231,256,272,285,286,315,],[144,144,144,144,144,144,144,144,144,144,144,]),'monadic_operator':([8,19,37,49,61,74,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'action_statement_nullable':([15,93,182,217,],[96,183,232,262,]),'exit_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'parameter_list':([49,122,211,],[149,198,255,]),'array_location':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[16,16,69,16,69,69,69,16,155,69,69,69,16,69,69,69,69,16,69,69,16,69,69,69,16,69,69,69,69,69,16,69,16,69,69,69,69,69,69,69,69,69,69,16,69,69,69,16,16,16,]),'formal_parameter':([213,292,],[258,258,]),'parenthesized_expression':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'empty_literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'membership_operator':([79,],[174,]),'closed_dyadic_operator':([16,],[107,]),'while_control':([15,94,],[91,184,]),'iteration':([89,],[178,]),'relational_operator':([79,],[165,]),'upper_bound':([233,283,],[277,308,]),'operator1':([79,],[172,]),'lower_bound':([101,206,207,208,285,],[187,245,245,245,245,]),'array_mode':([46,119,129,192,256,286,315,],[132,132,132,132,132,132,132,]),'result_spec':([257,293,],[289,317,]),'operator2':([63,227,],[160,160,]),'element_mode':([286,],[310,]),'else_clause':([157,295,],[219,320,]),'statement':([0,6,52,290,313,318,332,],[6,52,52,52,52,52,52,]),'mode_definition':([21,193,],[115,115,]),'discrete_range_mode':([46,119,129,192,207,231,256,272,285,286,315,],[127,127,127,127,127,127,127,127,127,127,127,]),'procedure_call':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression':([8,19,37,49,61,74,95,101,103,122,138,154,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[60,112,124,148,158,163,185,188,190,148,205,214,246,246,246,254,148,263,270,273,278,279,281,294,296,300,278,246,322,325,328,]),'range_enumeration':([89,],[181,]),'character_mode':([46,119,129,192,207,231,256,272,285,286,315,],[136,136,136,136,136,136,136,136,136,136,136,]),'statement_list':([0,],[9,]),'declaration_statement':([0,6,52,290,313,318,332,],[10,10,10,10,10,10,10,]),'bracketed_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'procedure_definition':([50,],[152,]),'conditional_expression':([8,19,37,49,61,74,95,101,103,122,138,154,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'discrete_mode':([46,119,129,192,207,231,256,272,285,286,315,],[142,142,142,142,249,274,142,301,249,142,142,]),'location':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'dereferenced_reference':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'statement_nullable':([6,52,290,313,318,332,],[53,153,314,329,333,340,]),'arithmetic_additive_operator':([16,63,227,],[110,162,162,]),'program':([0,],[24,]),'expression_list':([101,154,234,],[189,215,280,]),'then_clause':([60,263,],[157,295,]),'newmode_list':([21,193,],[116,237,]),'synonym_list':([1,125,],[48,202,]),'character_literal':([8,19,37,49,61,74,84,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'builtin_call':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'for_control':([15,],[94,]),'call_action':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[32,32,58,32,58,58,58,32,58,58,58,58,32,58,58,58,58,32,58,58,32,58,58,58,32,58,58,58,58,58,32,58,32,58,58,58,58,58,58,58,58,58,58,32,58,58,58,32,32,32,]),'else_expression':([222,267,],[268,298,]),'operand0':([8,19,37,49,61,74,95,101,103,122,138,154,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'formal_parameter_list':([213,292,],[259,316,]),'array_element':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'builtin_name':([0,6,8,15,19,37,49,52,59,61,74,84,93,95,101,103,122,123,138,154,156,160,172,176,182,206,207,208,209,211,217,218,220,223,230,233,234,238,260,266,269,283,285,290,297,303,305,313,318,332,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'identifier':([0,1,6,8,15,19,21,22,30,37,46,49,52,59,61,74,84,89,93,95,101,103,119,122,123,125,129,138,146,154,156,160,172,176,182,192,193,197,206,207,208,209,211,213,217,218,220,223,230,231,233,234,238,256,260,266,269,272,283,285,286,290,292,297,303,305,313,315,318,332,],[36,47,36,83,36,83,47,117,47,83,139,83,36,83,83,83,83,180,36,83,83,83,139,83,83,47,139,83,47,83,36,83,83,83,36,139,47,47,83,251,83,83,83,47,36,83,36,83,83,275,83,83,83,139,83,83,83,275,83,251,139,36,47,83,83,83,36,139,36,36,]),'step_enumeration':([89,],[179,]),'reference_mode':([46,119,129,192,256,286,315,],[140,140,140,140,140,140,140,]),'declaration':([30,197,],[121,121,]),'assigning_operator':([16,],[103,]),'procedure_statement':([0,6,52,290,313,318,332,],[13,13,13,13,13,13,13,]),'return_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'step_value':([273,],[304,]),'operand3':([8,19,37,49,61,74,95,101,103,122,138,154,160,172,176,206,207,208,209,211,218,223,230,233,234,238,260,266,269,283,285,297,303,305,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,228,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'result_action':([0,6,15,52,93,123,156,182,217,220,290,313,318,332,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> array_element','location',1,'p_location','Parser.py',369),
  ('location -> array_slice','location',1,'p_location','Parser.py',370),
  ('location -> call_action','location',1,'p_location','Parser.py',371),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',399),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',403),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',404),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',412),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',416),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',426),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',427),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',431),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',439),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',440),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',444),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',448),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',468),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',469),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',476),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',484),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',485),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',493),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',494),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',501),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',503),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',514),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',520),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',525),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',529),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',530),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',544),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',545),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',549),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',554),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',559),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',571),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',578),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',582),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',586),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',590),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',598),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',602),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',607),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',608),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',617),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',621),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',632),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',633),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',638),
  ('action -> assignment_action','action',1,'p_action','Parser.py',639),
  ('action -> call_action','action',1,'p_action','Parser.py',640),
  ('action -> exit_action','action',1,'p_action','Parser.py',641),
  ('action -> result_action','action',1,'p_action','Parser.py',642),
  ('action -> return_action','action',1,'p_action','Parser.py',643),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',647),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',652),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',658),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',659),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',665),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',669),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',670),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',674),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',679),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',680),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',691),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',703),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',704),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',721),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',722),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',726),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',727),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',739),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',743),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',744),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',748),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',749),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',758),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',766),
  ('result -> expression','result',1,'p_result','Parser.py',770),
  ('result -> empty','result',1,'p_result','Parser.py',771),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',774),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',782),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',783),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',790),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',791),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',792),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',796),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',801),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',807),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',808),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',820),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',824),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',828),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',829),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',836),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',842),
]

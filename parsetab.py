
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT LENGTH REF WHILE PRINT PROC RETURNS CHARS NULL DCL ARRAY END UPPER NUM LOC TYPE THEN TO FOR ELSE ASC LOWER READ FALSE IF DOWN IN FI DO EXIT TRUE RETURN ELSIF OD SYN RESULT ABS BY INT BOOL CHARprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'ABS':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[1,-5,1,-7,1,1,-6,1,1,-9,-8,-126,1,-106,-108,-125,-158,1,-124,-107,1,-110,-109,1,1,1,1,1,-147,1,1,1,1,1,-157,-24,1,-123,-122,1,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,1,1,1,1,-28,-10,1,-15,1,1,1,1,1,1,1,1,1,1,1,1,1,-146,1,1,1,1,1,1,1,1,1,1,1,1,1,-32,-30,-31,-29,]),'ELSE':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,103,108,110,157,158,167,169,172,177,208,214,215,216,219,220,227,228,234,236,248,249,256,259,260,261,268,292,297,305,318,320,321,322,340,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-170,-209,-147,-111,-101,-169,229,-184,-174,-81,-98,-88,255,-96,-100,-164,-209,-183,-173,-146,-76,255,-91,-143,-137,-168,-84,-89,229,-78,-90,-93,-138,-94,]),'NULL':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[66,66,66,-126,66,-106,-108,-125,-158,66,-124,-107,66,-110,-109,66,66,66,66,66,66,-157,66,-123,-122,66,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DO':([0,4,18,19,22,33,34,41,108,110,118,126,134,165,168,174,178,201,228,229,248,310,329,333,343,350,353,355,357,],[19,-5,-7,19,-6,19,-9,-8,19,-147,19,19,-24,19,19,-28,-10,-15,19,19,-146,19,19,19,19,-32,-30,-31,-29,]),'$end':([3,4,5,18,22,33,34,41,110,116,117,118,134,174,175,178,201,248,350,353,355,357,],[-1,-5,0,-7,-6,-209,-9,-8,-147,-2,-4,-209,-24,-28,-3,-10,-15,-146,-32,-30,-31,-29,]),'TRUE':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[67,67,67,-126,67,-106,-108,-125,-158,67,-124,-107,67,-110,-109,67,67,67,67,67,67,-157,67,-123,-122,67,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'TIMES':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,68,70,72,73,75,77,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,204,208,214,215,220,234,236,249,260,261,284,292,318,322,],[-172,50,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-75,-144,-140,-104,-103,-74,-142,-128,-102,-129,-141,-139,-23,-99,-133,50,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-23,-81,50,-88,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'WHILE':([2,10,12,14,17,19,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,107,157,158,161,162,163,172,177,181,182,189,191,193,194,198,208,214,215,219,220,234,236,249,260,261,265,292,297,300,304,316,317,318,320,322,324,326,327,341,],[-172,-85,-70,-72,-171,102,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,102,-111,-101,-198,-197,-199,-184,-174,-49,-45,-51,-44,-50,-47,-46,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-207,-84,-89,-203,-206,-53,-52,-78,-90,-138,-201,-205,-202,-200,]),'MODULO':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,68,70,72,73,75,77,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,204,208,214,215,220,234,236,249,260,261,284,292,318,322,],[-172,51,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-75,-144,-140,-104,-103,-74,-142,-128,-102,-129,-141,-139,-23,-99,-133,51,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-23,-81,51,-88,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'GTEQUAL':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,147,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'FALSE':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[81,81,81,-126,81,-106,-108,-125,-158,81,-124,-107,81,-110,-109,81,81,81,81,81,81,-157,81,-123,-122,81,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ASC':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[7,-5,7,-7,7,7,-6,7,7,-9,-8,-126,7,-106,-108,-125,-158,7,-124,-107,7,-110,-109,7,7,7,7,7,-147,7,7,7,7,7,-157,-24,7,-123,-122,7,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,7,7,7,7,-28,-10,7,-15,7,7,7,7,7,7,7,7,7,7,7,7,7,-146,7,7,7,7,7,7,7,7,7,7,7,7,7,-32,-30,-31,-29,]),'EXIT':([0,4,18,19,22,33,34,41,108,110,118,126,134,165,168,174,178,201,228,229,248,310,329,333,343,350,353,355,357,],[8,-5,-7,8,-6,8,-9,-8,8,-147,8,8,-24,8,8,-28,-10,-15,8,8,-146,8,8,8,8,-32,-30,-31,-29,]),'LPAREN':([1,7,16,21,23,25,26,29,30,31,32,36,39,46,48,50,51,53,55,56,57,59,60,71,74,78,79,82,85,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,173,181,182,184,186,188,189,191,192,193,194,198,204,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,264,265,280,284,294,299,302,304,311,313,315,316,317,],[-175,-176,71,71,-180,-177,111,-181,-182,71,-178,119,-179,-126,71,-106,-108,-125,-158,71,-124,-107,-23,71,-110,-109,71,142,111,71,71,71,71,71,-157,71,-123,-122,71,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,71,71,235,-49,-45,71,240,241,-51,-44,-48,-50,-47,-46,111,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-48,240,240,-48,71,71,71,240,335,71,71,-53,-52,]),'GREATER':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,150,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'PROC':([112,],[173,]),'CCONST':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[73,73,73,-126,73,-106,-108,-125,-158,73,-124,-107,73,-110,-109,73,73,73,73,73,73,-157,73,-123,-122,73,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NOT':([16,21,31,46,48,50,51,53,55,56,57,59,71,79,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[74,74,74,-126,74,-106,-108,-125,-158,74,-124,-107,74,74,74,74,74,74,-157,74,-123,-122,74,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TYPE':([0,4,18,22,33,34,41,110,118,134,174,178,201,248,310,329,333,343,350,353,355,357,],[11,-5,-7,-6,11,-9,-8,-147,11,-24,-28,-10,-15,-146,11,11,11,11,-32,-30,-31,-29,]),'THEN':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,109,141,157,158,172,177,208,214,215,219,220,234,236,249,260,261,271,292,296,297,318,319,320,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,168,217,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,168,-84,217,-89,-78,217,-90,-138,]),'FOR':([19,],[105,]),'BY':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,263,292,297,318,320,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,299,-84,-89,-78,-90,-138,]),'ICONST':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,237,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[84,84,84,-126,84,-106,-108,-125,-158,84,-124,-107,84,-110,-109,84,84,84,84,84,84,-157,84,-123,-122,218,84,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'REF':([60,64,121,123,133,195,212,275,314,335,],[-23,-21,195,195,195,195,-22,195,195,195,]),'RESULT':([0,4,18,19,22,33,34,41,108,110,118,126,134,165,168,174,178,201,228,229,248,310,329,333,343,350,353,355,357,],[16,-5,-7,16,-6,16,-9,-8,16,-147,16,16,-24,16,16,-28,-10,-15,16,16,-146,16,16,16,16,-32,-30,-31,-29,]),'BOOL':([60,64,121,123,133,195,212,224,239,266,275,313,314,335,],[-23,-21,193,193,193,193,-22,193,193,193,193,193,193,193,]),'SYN':([0,4,18,22,33,34,41,110,118,134,174,178,201,248,310,329,333,343,350,353,355,357,],[37,-5,-7,-6,37,-9,-8,-147,37,-24,-28,-10,-15,-146,37,37,37,37,-32,-30,-31,-29,]),'MINUS':([2,6,9,10,12,14,16,17,21,26,31,35,38,40,44,46,48,49,50,51,53,55,56,57,59,66,67,68,69,70,71,72,73,75,77,79,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,172,177,184,204,208,209,210,214,215,217,219,220,223,231,233,234,236,239,240,241,243,246,249,250,255,257,260,261,262,284,292,294,299,302,313,315,318,322,],[-172,53,-74,-85,-70,-72,78,-171,78,-23,78,-71,-73,-69,-68,-126,78,-75,-106,-108,-125,-158,78,-124,-107,-144,-140,-104,53,-103,78,-74,-142,-128,-102,78,-129,-141,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,78,78,78,78,-157,78,-123,-122,78,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,78,78,-111,-101,-184,-174,78,-23,-81,78,78,-98,-88,78,53,-100,78,78,78,-183,-173,78,78,78,78,78,-76,78,78,78,-143,-137,78,-68,-84,78,78,78,78,78,-78,-138,]),'EQUAL':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,149,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'IF':([0,4,16,18,19,21,22,31,33,34,41,48,55,56,71,79,102,108,110,111,118,119,126,127,128,134,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[21,-5,79,-7,21,79,-6,79,21,-9,-8,79,-158,79,79,79,79,21,-147,79,21,79,21,79,-157,-24,79,21,21,-28,-10,79,-15,79,79,79,79,21,21,79,79,79,79,79,79,79,-146,79,79,79,79,79,79,79,21,79,79,21,21,21,-32,-30,-31,-29,]),'UPPER':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[32,-5,32,-7,32,32,-6,32,32,-9,-8,-126,32,-106,-108,-125,-158,32,-124,-107,32,-110,-109,32,32,32,32,32,-147,32,32,32,32,32,-157,-24,32,-123,-122,32,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,32,32,32,32,-28,-10,32,-15,32,32,32,32,32,32,32,32,32,32,32,32,32,-146,32,32,32,32,32,32,32,32,32,32,32,32,32,-32,-30,-31,-29,]),'DOWN':([2,10,12,14,17,35,38,40,49,60,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,157,158,164,172,177,208,214,215,219,220,234,236,249,260,261,263,292,297,301,318,320,322,323,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-23,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-111,-101,225,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,303,-84,-89,325,-78,-90,-138,-204,]),'READ':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[29,-5,29,-7,29,29,-6,29,29,-9,-8,-126,29,-106,-108,-125,-158,29,-124,-107,29,-110,-109,29,29,29,29,29,-147,29,29,29,29,29,-157,-24,29,-123,-122,29,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,29,29,29,29,-28,-10,29,-15,29,29,29,29,29,29,29,29,29,29,29,29,29,-146,29,29,29,29,29,29,29,29,29,29,29,29,29,-32,-30,-31,-29,]),'LESS':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,153,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'LENGTH':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[23,-5,23,-7,23,23,-6,23,23,-9,-8,-126,23,-106,-108,-125,-158,23,-124,-107,23,-110,-109,23,23,23,23,23,-147,23,23,23,23,23,-157,-24,23,-123,-122,23,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,23,23,23,23,-28,-10,23,-15,23,23,23,23,23,23,23,23,23,23,23,23,23,-146,23,23,23,23,23,23,23,23,23,23,23,23,23,-32,-30,-31,-29,]),'HAT':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[82,82,82,-126,82,-106,-108,-125,-158,82,-124,-107,82,-110,-109,82,82,82,82,82,82,-157,82,-123,-122,82,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'TO':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,263,292,297,301,303,318,320,322,323,325,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,302,-84,-89,302,302,-78,-90,-138,-204,302,]),'NOTEQ':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,152,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'INT':([60,64,121,123,133,195,212,224,239,266,275,313,314,335,],[-23,-21,181,181,181,181,-22,181,181,181,181,181,181,181,]),'NUM':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[25,-5,25,-7,25,25,-6,25,25,-9,-8,-126,25,-106,-108,-125,-158,25,-124,-107,25,-110,-109,25,25,25,25,25,-147,25,25,25,25,25,-157,-24,25,-123,-122,25,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,25,25,25,25,-28,-10,25,-15,25,25,25,25,25,25,25,25,25,25,25,25,25,-146,25,25,25,25,25,25,25,25,25,25,25,25,25,-32,-30,-31,-29,]),'CHARS':([60,64,121,123,133,195,212,275,314,335,],[-23,-21,180,180,180,180,-22,180,180,180,]),'ID':([0,4,8,11,16,18,19,21,22,31,33,34,37,41,42,46,48,50,51,53,55,56,57,59,60,64,71,74,78,79,92,93,102,105,108,110,111,118,119,121,123,126,127,128,133,134,135,136,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,195,199,201,202,209,210,212,217,223,224,228,229,231,233,235,239,240,241,243,246,248,250,255,257,262,266,275,294,299,302,307,310,313,314,315,329,333,335,343,350,353,355,357,],[26,-5,60,60,85,-7,85,85,-6,85,26,-9,60,-8,60,-126,85,-106,-108,-125,-158,85,-124,-107,-23,-21,85,-110,-109,85,85,85,85,60,85,-147,85,26,85,60,60,204,85,-157,60,-24,60,60,85,-123,-122,85,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,85,85,85,85,-28,-10,85,60,60,-15,60,85,85,-22,85,85,60,85,85,85,85,60,85,85,85,85,85,-146,85,85,85,85,60,60,85,85,85,60,26,85,60,85,26,26,60,26,-32,-30,-31,-29,]),'CHAR':([60,64,121,123,133,195,212,224,239,266,275,313,314,335,],[-23,-21,189,189,189,189,-22,189,189,189,189,189,189,189,]),'CONCAT':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,68,69,70,72,73,75,77,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,204,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,46,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-75,-144,-140,-104,46,-103,-74,-142,-128,-102,-129,-141,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-23,-81,-98,-88,46,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'RBRACKET':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,130,131,157,158,172,177,181,182,189,191,193,194,198,205,206,208,214,215,219,220,221,222,234,236,249,251,252,253,254,260,261,277,278,279,280,281,283,290,291,292,297,298,316,317,318,320,322,336,339,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,208,-82,-111,-101,-184,-174,-49,-45,-51,-44,-50,-47,-46,249,-77,-81,-98,-88,-96,-100,261,-82,-183,-173,-76,-83,-82,292,-56,-143,-137,312,-61,-63,-65,-66,314,318,-80,-84,-89,322,-53,-52,-78,-90,-138,-64,-54,]),'ASSIGN':([2,6,9,10,12,14,17,26,35,38,40,44,46,47,49,50,51,52,53,54,57,58,59,60,62,64,85,99,121,164,172,177,179,181,182,183,186,187,189,190,191,192,193,194,196,197,198,200,204,208,212,234,236,242,249,292,312,316,317,318,337,338,],[-172,55,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-126,128,-75,-106,-108,-159,-125,-161,-124,-160,-107,-23,133,-21,-23,-68,184,223,-184,-174,-58,-49,-45,-42,-40,-39,-51,-59,-44,-43,-50,-47,-41,243,-46,246,-23,-81,-22,-183,-173,-57,-76,-84,-60,-53,-52,-78,-62,-67,]),'LOC':([60,179,181,182,183,186,187,189,190,191,192,193,194,196,198,242,308,312,316,317,337,338,346,],[-23,-58,-49,-45,-42,-40,-39,-51,-59,-44,-43,-50,-47,-41,-46,-57,332,-60,-53,-52,-62,-67,351,]),'AND':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,146,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'PRINT':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[30,-5,30,-7,30,30,-6,30,30,-9,-8,-126,30,-106,-108,-125,-158,30,-124,-107,30,-110,-109,30,30,30,30,30,-147,30,30,30,30,30,-157,-24,30,-123,-122,30,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,30,30,30,30,-28,-10,30,-15,30,30,30,30,30,30,30,30,30,30,30,30,30,-146,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,-30,-31,-29,]),'LBRACKET':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,70,72,73,75,80,81,84,85,87,89,90,91,94,95,96,97,99,100,157,172,177,180,185,204,208,215,234,236,249,260,261,284,292,318,322,],[-172,56,-74,-85,-70,-72,-171,-23,-71,-73,-69,127,-75,-144,-140,56,-74,-142,-128,-129,-141,-139,-23,-133,156,-135,-130,-136,-145,-134,-131,127,-132,56,-184,-174,237,239,-23,-81,-88,-183,-173,-76,-143,-137,127,-84,-78,-138,]),'FI':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,103,108,110,157,158,167,169,172,177,208,214,215,219,220,227,228,230,234,236,248,249,258,260,261,268,269,292,293,295,297,305,318,320,322,328,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-170,-209,-147,-111,-101,-169,232,-184,-174,-81,-98,-88,-96,-100,-164,-209,270,-183,-173,-146,-76,297,-143,-137,-168,-165,-84,-92,320,-89,-167,-78,-90,-138,-166,]),'RETURN':([0,4,18,19,22,33,34,41,108,110,118,126,134,165,168,174,178,201,228,229,248,310,329,333,343,350,353,355,357,],[31,-5,-7,31,-6,31,-9,-8,31,-147,31,31,-24,31,31,-28,-10,-15,31,31,-146,31,31,31,31,-32,-30,-31,-29,]),'COMMA':([2,10,12,14,17,35,38,40,49,60,64,65,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,122,125,131,157,158,170,172,177,179,181,182,183,186,187,189,190,191,192,193,194,196,198,200,208,211,214,215,219,220,222,234,236,238,242,245,249,252,254,260,261,274,279,280,281,288,289,292,297,308,312,316,317,318,320,322,332,337,338,339,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-23,135,136,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,199,202,209,-111,-101,233,-184,-174,-58,-49,-45,-42,-40,-39,-51,-59,-44,-43,-50,-47,-41,-46,-19,-81,-27,-98,-88,-96,-100,209,-183,-173,-14,-57,-18,-76,209,-56,-143,-137,307,313,-65,-66,-13,-20,-84,-89,-36,-60,-53,-52,-78,-90,-138,-35,-62,-67,-54,]),'RETURNS':([276,306,],[311,311,]),'IN':([2,10,12,14,17,35,38,40,49,60,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,164,172,177,208,214,215,219,220,225,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-23,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,151,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,224,-184,-174,-81,-98,-88,-96,-100,266,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'COLON':([2,10,12,14,17,26,35,38,40,44,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,131,132,157,158,172,177,206,207,208,214,215,219,220,222,234,236,249,260,261,282,284,285,292,297,318,320,322,],[-172,-85,-70,-72,-171,112,-71,-73,-69,126,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-55,210,-111,-101,-184,-174,-79,250,-81,-98,-88,-96,-100,262,-183,-173,-76,-143,-137,-55,-68,315,-84,-89,-78,-90,-138,]),'LTEQUAL':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,145,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'LOWER':([0,4,16,18,19,21,22,31,33,34,41,46,48,50,51,53,55,56,57,59,71,74,78,79,92,93,102,108,110,111,118,119,126,127,128,134,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,174,178,184,201,209,210,217,223,228,229,231,233,239,240,241,243,246,248,250,255,257,262,294,299,302,310,313,315,329,333,343,350,353,355,357,],[39,-5,39,-7,39,39,-6,39,39,-9,-8,-126,39,-106,-108,-125,-158,39,-124,-107,39,-110,-109,39,39,39,39,39,-147,39,39,39,39,39,-157,-24,39,-123,-122,39,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,39,39,39,39,-28,-10,39,-15,39,39,39,39,39,39,39,39,39,39,39,39,39,-146,39,39,39,39,39,39,39,39,39,39,39,39,39,-32,-30,-31,-29,]),'ARROW':([2,6,9,10,12,14,16,17,21,26,31,35,38,40,44,46,48,49,50,51,53,55,56,57,59,70,71,72,74,78,79,85,93,99,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,172,177,184,204,208,209,210,217,223,231,233,234,236,239,240,241,243,246,249,250,255,257,262,284,292,294,299,302,313,315,318,],[-172,49,-74,-85,-70,-72,92,-171,92,-23,92,-71,-73,-69,-68,-126,92,-75,-106,-108,-125,-158,92,-124,-107,49,92,-74,-110,-109,92,-23,92,-68,92,92,92,92,-157,92,-123,-122,92,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,92,92,49,-184,-174,92,-23,-81,92,92,92,92,92,92,-183,-173,92,92,92,92,92,-76,92,92,92,92,-68,-84,92,92,92,92,92,-78,]),'RPAREN':([2,10,12,14,17,35,38,40,49,60,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,111,119,140,157,158,170,171,172,176,177,179,181,182,183,186,187,189,190,191,192,193,194,196,198,208,214,215,218,219,220,234,235,236,242,249,254,260,261,272,273,274,286,287,292,297,308,312,316,317,318,320,322,331,332,337,338,339,346,351,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-23,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,172,177,215,-111,-101,-185,234,-184,236,-174,-58,-49,-45,-42,-40,-39,-51,-59,-44,-43,-50,-47,-41,-46,-81,-98,-88,260,-96,-100,-183,276,-173,-57,-76,-56,-143,-137,-186,306,-33,316,317,-84,-89,-36,-60,-53,-52,-78,-90,-138,-34,-35,-62,-67,-54,352,356,]),'SEMI':([2,9,10,12,13,14,15,17,20,24,27,28,31,35,38,40,43,45,49,60,61,63,65,66,67,68,69,70,72,73,75,76,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,104,106,107,113,114,115,120,122,124,125,129,157,158,159,160,161,162,163,166,172,177,179,181,182,183,186,187,189,190,191,192,193,194,196,198,200,203,208,211,213,214,215,219,220,232,234,236,238,242,244,245,247,249,260,261,265,267,270,276,288,289,292,297,300,304,306,309,312,316,317,318,320,322,324,326,327,330,337,338,341,345,347,349,352,354,356,],[-172,-150,-85,-70,-148,-72,-152,-171,-149,110,-153,-151,-209,-71,-73,-69,-155,-154,-75,-23,-187,134,-25,-144,-140,-104,-95,-103,-74,-142,-128,-191,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-196,165,-195,-190,-189,-188,178,-11,201,-16,-156,-111,-101,-193,-208,-198,-197,-199,-194,-184,-174,-58,-49,-45,-42,-40,-39,-51,-59,-44,-43,-50,-47,-41,-46,-19,248,-81,-27,-26,-98,-88,-96,-100,-163,-183,-173,-14,-57,-12,-18,-17,-76,-143,-137,-207,-192,-162,310,-13,-20,-84,-89,-203,-206,329,333,-60,-53,-52,-78,-90,-138,-201,-205,-202,343,-62,-67,-200,350,353,355,-38,357,-37,]),'PLUS':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,68,69,70,72,73,75,77,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,204,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,57,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-75,-144,-140,-104,57,-103,-74,-142,-128,-102,-129,-141,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-23,-81,-98,-88,57,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'ARRAY':([60,64,121,123,133,195,212,275,314,335,],[-23,-21,185,185,185,185,-22,185,185,185,]),'OD':([19,101,103,108,110,165,167,226,248,],[-209,159,-170,-209,-147,-209,-169,267,-146,]),'SCONST':([16,21,31,46,48,50,51,53,55,56,57,59,71,74,78,79,93,102,111,119,127,128,137,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[95,95,95,-126,95,-106,-108,-125,-158,95,-124,-107,95,-110,-109,95,95,95,95,95,95,-157,95,-123,-122,95,-112,-121,-114,-119,-113,-116,-118,-127,-117,-120,-115,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'END':([4,18,22,34,41,110,117,118,134,174,175,178,201,248,310,329,333,334,342,343,344,348,350,353,355,357,],[-5,-7,-6,-9,-8,-147,-4,-209,-24,-28,-3,-10,-15,-146,-209,-209,-209,345,347,-209,349,354,-32,-30,-31,-29,]),'ELSIF':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,103,108,110,157,158,167,169,172,177,208,214,215,216,219,220,227,228,234,236,248,249,256,259,260,261,268,292,297,305,318,320,321,322,340,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,-86,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-87,-68,-132,-170,-209,-147,-111,-101,-169,231,-184,-174,-81,-98,-88,257,-96,-100,-164,-209,-183,-173,-146,-76,294,-91,-143,-137,-168,-84,-89,231,-78,-90,-93,-138,-94,]),'DCL':([0,4,18,22,33,34,41,110,118,134,174,178,201,248,310,329,333,343,350,353,355,357,],[42,-5,-7,-6,42,-9,-8,-147,42,-24,-28,-10,-15,-146,42,42,42,42,-32,-30,-31,-29,]),'DIVIDE':([2,6,9,10,12,14,17,26,35,38,40,44,49,66,67,68,70,72,73,75,77,80,81,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,204,208,214,215,220,234,236,249,260,261,284,292,318,322,],[-172,59,-74,-85,-70,-72,-171,-23,-71,-73,-69,-68,-75,-144,-140,-104,-103,-74,-142,-128,-102,-129,-141,-139,-23,-99,-133,59,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-23,-81,59,-88,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),'OR':([2,10,12,14,17,35,38,40,49,66,67,68,69,70,72,73,75,77,80,81,83,84,85,86,87,88,89,90,91,94,95,96,97,99,100,157,158,172,177,208,214,215,219,220,234,236,249,260,261,284,292,318,322,],[-172,-85,-70,-72,-171,-71,-73,-69,-75,-144,-140,-104,-95,-103,-74,-142,-128,-102,-129,-141,154,-139,-23,-99,-133,-97,-105,-135,-130,-136,-145,-134,-131,-68,-132,-111,-101,-184,-174,-81,-98,-88,-96,-100,-183,-173,-76,-143,-137,-68,-84,-78,-138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'builtin_call':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'program':([0,],[5,]),'empty':([19,31,33,108,118,165,228,310,329,333,343,],[103,113,117,103,117,103,103,117,117,117,117,]),'operand4':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[77,77,77,77,77,77,77,158,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'array_location':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[6,70,6,70,70,6,70,70,70,70,157,70,70,6,70,6,70,6,70,70,70,70,70,6,6,70,70,70,70,70,6,6,70,70,70,70,70,70,70,70,70,70,70,70,70,70,6,70,70,6,6,6,]),'call_action':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[9,72,9,72,72,9,72,72,72,72,72,72,72,9,72,9,72,9,72,72,72,72,72,9,9,72,72,72,72,72,9,9,72,72,72,72,72,72,72,72,72,72,72,72,72,72,9,72,72,9,9,9,]),'discrete_mode_name':([121,123,133,195,224,239,266,275,313,314,335,],[188,188,188,188,188,188,188,188,188,188,188,]),'then_clause':([109,271,],[169,305,]),'procedure_definition':([112,],[174,]),'location':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'right_element':([250,],[290,]),'literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operator1':([83,],[143,]),'identifier_list':([11,37,42,135,136,199,202,235,307,],[62,121,123,212,62,121,123,275,275,]),'string_element':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array_element':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'index_mode_list':([239,313,],[283,336,]),'arithmetic_multiplicative_operator':([6,88,214,],[58,155,155,]),'procedure_call':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'referenced_location':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'mode':([121,123,133,195,275,314,335,],[197,200,211,242,308,338,346,]),'declaration_list':([42,202,],[124,247,]),'discrete_range_mode':([121,123,133,195,224,239,266,275,313,314,335,],[194,194,194,194,194,194,194,194,194,194,194,]),'while_control':([19,107,],[104,166,]),'range_enumeration':([105,],[163,]),'boolean_mode':([121,123,133,195,224,239,266,275,313,314,335,],[182,182,182,182,182,182,182,182,182,182,182,]),'operand3':([16,21,31,48,56,71,79,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[86,86,86,86,86,86,86,86,86,86,86,86,86,220,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'exit_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_mode':([121,123,133,195,275,314,335,],[190,190,190,190,190,190,190,]),'primitive_value':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'synonym_definition':([37,199,],[122,122,]),'newmode_list':([11,136,],[63,213,]),'for_control':([19,],[107,]),'value_array_element':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'statement':([0,33,118,310,329,333,343,],[33,118,118,118,118,118,118,]),'discrete_mode':([121,123,133,195,224,239,266,275,313,314,335,],[186,186,186,186,265,280,304,186,280,186,186,]),'if_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'left_element':([127,],[207,]),'string_concatenation_operator':([6,69,219,],[54,138,138,]),'builtin_name':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'start_element':([127,],[205,]),'mode_definition':([11,136,],[65,65,]),'literal_range':([239,240,241,313,],[281,286,287,281,]),'action_statement':([0,19,33,108,118,165,168,228,229,310,329,333,343,],[41,108,41,108,41,108,228,108,228,41,41,41,41,]),'dereferenced_reference':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'operator2':([69,219,],[137,137,]),'action_statement_nullable':([19,108,165,228,],[101,167,226,268,]),'character_literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operand2':([16,21,31,48,56,71,79,102,111,119,127,137,143,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[88,88,88,88,88,88,88,88,88,88,88,214,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'string_length':([237,],[277,]),'string_slice':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'identifier':([0,8,11,16,19,21,31,33,37,42,48,56,71,79,92,93,102,105,108,111,118,119,121,123,126,127,133,135,136,137,143,155,156,165,168,184,195,199,202,209,210,217,223,224,228,229,231,233,235,239,240,241,243,246,250,255,257,262,266,275,294,299,302,307,310,313,314,315,329,333,335,343,],[44,61,64,99,44,99,99,44,64,64,99,99,99,99,99,99,99,164,44,99,44,99,192,192,99,99,192,64,64,99,99,99,99,44,44,99,192,64,64,99,99,99,99,264,44,44,99,99,64,284,99,99,99,99,99,99,99,99,264,192,99,99,99,64,44,284,192,99,44,44,192,44,]),'integer_literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,237,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,278,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'end_value':([263,301,303,325,],[300,324,327,341,]),'statement_nullable':([33,118,310,329,333,343,],[116,175,334,342,344,348,]),'statement_list':([0,],[3,]),'membership_operator':([83,],[144,]),'declaration_statement':([0,33,118,310,329,333,343,],[4,4,4,4,4,4,4,]),'iteration':([105,],[162,]),'arithmetic_additive_operator':([6,69,219,],[52,139,139,]),'composite_mode':([121,123,133,195,275,314,335,],[183,183,183,183,183,183,183,]),'expression_list':([56,156,209,],[130,221,251,]),'else_expression':([216,256,],[258,295,]),'declaration':([42,202,],[125,125,]),'element_mode':([314,],[337,]),'elsif_expression':([216,],[256,]),'index_mode':([239,313,],[279,279,]),'integer_mode':([121,123,133,195,224,239,266,275,313,314,335,],[191,191,191,191,191,191,191,191,191,191,191,]),'bracketed_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'result_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([16,21,31,48,56,71,79,102,111,119,127,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[76,109,114,129,131,140,141,160,170,170,206,222,238,252,254,259,263,271,170,282,282,282,288,289,291,293,296,298,319,323,326,282,254,]),'action_statement_list':([168,229,],[227,269,]),'parameter_list':([111,119,233,],[171,176,272,]),'newmode_statement':([0,33,118,310,329,333,343,],[18,18,18,18,18,18,18,]),'else_clause':([169,305,],[230,328,]),'synonym_list':([37,199,],[120,244,]),'relational_operator':([83,],[148,]),'assignment_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'synonym_statement':([0,33,118,310,329,333,343,],[22,22,22,22,22,22,22,]),'action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[24,24,24,24,24,203,24,24,24,24,24,24,24,24,]),'operand0':([16,21,31,48,56,71,79,102,111,119,127,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'string_mode':([121,123,133,195,275,314,335,],[179,179,179,179,179,179,179,]),'closed_dyadic_operator':([6,],[47,]),'formal_parameter':([235,307,],[274,274,]),'then_expression':([141,296,319,],[216,321,340,]),'return_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'character_mode':([121,123,133,195,224,239,266,275,313,314,335,],[198,198,198,198,198,198,198,198,198,198,198,]),'control_part':([19,],[106,]),'boolean_literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'upper_bound':([210,315,],[253,339,]),'parenthesized_expression':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'formal_parameter_list':([235,307,],[273,331,]),'operand1':([16,21,31,48,56,71,79,102,111,119,127,143,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[69,69,69,69,69,69,69,69,69,69,69,219,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'value_array_slice':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'procedure_statement':([0,33,118,310,329,333,343,],[34,34,34,34,34,34,34,]),'assigning_operator':([6,],[48,]),'step_value':([263,],[301,]),'step_enumeration':([105,],[161,]),'result_spec':([276,306,],[309,330,]),'monadic_operator':([16,21,31,48,56,71,79,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'array_slice':([0,16,19,21,31,33,48,56,71,79,92,93,102,108,111,118,119,126,127,137,143,155,156,165,168,184,209,210,217,223,228,229,231,233,239,240,241,243,246,250,255,257,262,294,299,302,310,313,315,329,333,343,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'initialization':([200,],[245,]),'character_string_literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'mode_name':([121,123,133,195,275,314,335,],[187,187,187,187,187,187,187,]),'result':([31,],[115,]),'reference_mode':([121,123,133,195,275,314,335,],[196,196,196,196,196,196,196,]),'empty_literal':([16,21,31,48,56,71,79,93,102,111,119,127,137,143,155,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'conditional_expression':([16,21,31,48,56,71,79,102,111,119,127,156,184,209,210,217,223,231,233,239,240,241,243,246,250,255,257,262,294,299,302,313,315,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'do_action':([0,19,33,108,118,126,165,168,228,229,310,329,333,343,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'lower_bound':([56,239,240,241,313,],[132,285,285,285,285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]

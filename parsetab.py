
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT TO WHILE DO ARRAY FI RETURNS READ END NULL ABS DCL EXIT INT LOWER THEN ELSIF LENGTH NUM FALSE ASC RETURN TRUE CHAR REF DOWN BY SYN PRINT OD RESULT CHARS IF UPPER BOOL TYPE FOR LOC PROC ELSE INprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'RETURNS':([288,317,],[315,315,]),'EQUAL':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,165,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'PROC':([121,],[202,]),'DO':([0,4,13,14,17,21,23,28,100,107,117,119,149,151,180,188,192,201,219,221,244,314,336,337,346,347,354,355,357,],[14,-9,-6,14,-7,-5,14,-8,-147,14,14,14,-15,14,14,-24,-10,-28,14,14,-146,14,14,14,14,-32,-31,-30,-29,]),'FI':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,100,107,109,150,154,158,183,205,207,217,221,222,223,226,230,231,234,244,245,249,250,265,266,270,273,274,298,301,302,303,305,312,323,326,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-147,-209,-170,220,-101,-111,-169,-184,-174,263,-209,-164,-100,-98,-96,-88,-81,-146,-76,-183,-173,-165,-168,303,-137,-143,-167,326,-92,-89,-84,-78,-166,-90,-138,]),'NULL':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[66,66,66,66,66,-109,-110,66,66,-124,-158,66,-125,-108,-126,-107,-106,66,66,66,66,66,-123,66,-122,66,-115,-119,-114,-112,-116,-113,66,-121,-117,-118,-120,-127,-157,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DCL':([0,4,13,17,21,23,28,100,117,149,188,192,201,244,314,336,337,346,347,354,355,357,],[5,-9,-6,-7,-5,5,-8,-147,5,-15,-24,-10,-28,-146,5,5,5,5,-32,-31,-30,-29,]),'SCONST':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[76,76,76,76,76,-109,-110,76,76,-124,-158,76,-125,-108,-126,-107,-106,76,76,76,76,76,-123,76,-122,76,-115,-119,-114,-112,-116,-113,76,-121,-117,-118,-120,-127,-157,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'IF':([0,4,6,13,14,17,21,23,28,35,44,54,84,88,90,92,100,106,107,117,119,120,122,124,149,151,159,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[6,-9,54,-6,6,-7,-5,6,-8,54,54,54,54,54,-158,54,-147,54,6,6,6,54,54,54,-15,6,54,-157,6,-24,-10,54,-28,54,54,54,54,54,6,6,54,54,54,54,54,-146,54,54,54,54,54,54,54,54,54,54,6,6,6,6,-32,-31,-30,-29,]),'PLUS':([1,3,9,10,15,26,27,30,31,32,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,196,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,89,-72,-172,-85,-68,-69,-23,-74,-70,-171,-128,-97,-129,-136,-99,-104,-140,89,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-23,-184,-174,-100,-98,89,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'END':([4,13,17,21,28,100,117,118,149,188,192,195,201,244,314,334,336,337,344,345,346,347,352,354,355,357,],[-9,-6,-7,-5,-8,-147,-209,-4,-15,-24,-10,-3,-28,-146,-209,342,-209,-209,350,351,-209,-32,356,-31,-30,-29,]),'ABS':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[2,-9,2,-6,2,-7,-5,2,-8,2,2,2,2,-109,2,-110,2,2,-124,-158,2,-125,-108,-126,-107,-106,-147,2,2,2,2,2,2,2,-15,2,2,-123,2,-122,2,-115,-119,-114,-112,-116,-113,2,-121,-117,-118,-120,-127,-157,2,-24,-10,2,-28,2,2,2,2,2,2,2,2,2,2,2,2,-146,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-32,-31,-30,-29,]),'RBRACKET':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,128,131,133,134,139,142,144,154,158,176,178,198,199,205,207,223,226,227,228,230,231,234,245,249,250,251,252,258,259,261,262,273,274,275,276,277,278,285,286,293,295,303,304,305,312,319,322,326,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-44,-45,-49,-50,-46,-51,-47,-101,-111,-82,234,-77,245,-184,-174,-100,-98,-82,273,-96,-88,-81,-76,-183,-173,-61,292,-66,-65,296,-63,-137,-143,-82,-83,-56,305,-80,312,-52,-53,-89,327,-84,-78,-54,-64,-90,-138,]),'TYPE':([0,4,13,17,21,23,28,100,117,149,188,192,201,244,314,336,337,346,347,354,355,357,],[16,-9,-6,-7,-5,16,-8,-147,16,-15,-24,-10,-28,-146,16,16,16,16,-32,-31,-30,-29,]),'MODULO':([1,3,9,10,15,26,27,30,31,32,41,43,52,53,55,56,58,59,60,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,196,205,207,223,226,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,95,-72,-172,-85,-68,-69,-23,-74,-70,-171,-128,95,-129,-136,-99,-104,-140,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-23,-184,-174,-100,95,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'UPPER':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[36,-9,36,-6,36,-7,-5,36,-8,36,36,36,36,-109,36,-110,36,36,-124,-158,36,-125,-108,-126,-107,-106,-147,36,36,36,36,36,36,36,-15,36,36,-123,36,-122,36,-115,-119,-114,-112,-116,-113,36,-121,-117,-118,-120,-127,-157,36,-24,-10,36,-28,36,36,36,36,36,36,36,36,36,36,36,36,-146,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,-31,-30,-29,]),'TO':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,273,274,281,303,305,307,309,312,326,327,329,331,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-137,-143,311,-89,-84,311,311,-78,-90,-138,311,-204,]),'TIMES':([1,3,9,10,15,26,27,30,31,32,41,43,52,53,55,56,58,59,60,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,196,205,207,223,226,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,99,-72,-172,-85,-68,-69,-23,-74,-70,-171,-128,99,-129,-136,-99,-104,-140,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-23,-184,-174,-100,99,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'REF':([46,48,50,115,130,189,216,290,296,335,],[130,-21,-23,130,130,130,-22,130,130,130,]),'RESULT':([0,4,13,14,17,21,23,28,100,107,117,119,149,151,180,188,192,201,219,221,244,314,336,337,346,347,354,355,357,],[35,-9,-6,35,-7,-5,35,-8,-147,35,35,35,-15,35,35,-24,-10,-28,35,35,-146,35,35,35,35,-32,-31,-30,-29,]),'GTEQUAL':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,162,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'RPAREN':([1,3,10,15,26,30,41,43,50,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,122,124,128,131,132,133,134,135,137,138,139,141,142,144,145,146,154,158,173,203,204,205,206,207,209,223,226,229,230,231,234,245,247,249,250,254,256,273,274,277,287,289,291,292,293,295,303,305,312,318,319,320,321,326,327,333,339,343,349,],[-73,-71,-72,-172,-85,-69,-70,-171,-23,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,205,207,-44,-45,-43,-49,-50,-41,-40,-39,-46,-42,-51,-47,-58,-59,-101,-111,231,-185,249,-184,250,-174,-57,-100,-98,274,-96,-88,-81,-76,288,-183,-173,293,295,-137,-143,-56,-33,317,-186,-60,-52,-53,-89,-84,-78,-36,-54,-62,-67,-90,-138,-34,-35,348,353,]),'LTEQUAL':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,168,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'BY':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,273,274,281,303,305,312,326,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-137,-143,310,-89,-84,-78,-90,-138,]),'TRUE':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[60,60,60,60,60,-109,-110,60,60,-124,-158,60,-125,-108,-126,-107,-106,60,60,60,60,60,-123,60,-122,60,-115,-119,-114,-112,-116,-113,60,-121,-117,-118,-120,-127,-157,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ARRAY':([46,48,50,115,130,189,216,290,296,335,],[143,-21,-23,143,143,143,-22,143,143,143,]),'LOWER':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[40,-9,40,-6,40,-7,-5,40,-8,40,40,40,40,-109,40,-110,40,40,-124,-158,40,-125,-108,-126,-107,-106,-147,40,40,40,40,40,40,40,-15,40,40,-123,40,-122,40,-115,-119,-114,-112,-116,-113,40,-121,-117,-118,-120,-127,-157,40,-24,-10,40,-28,40,40,40,40,40,40,40,40,40,40,40,40,-146,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-32,-31,-30,-29,]),'IN':([1,3,10,15,26,30,41,43,50,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,185,205,207,223,226,230,231,234,236,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-23,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,172,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,238,-184,-174,-100,-98,-96,-88,-81,280,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'ELSE':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,100,107,109,150,154,158,183,205,207,221,222,223,224,226,230,231,234,244,245,249,250,266,268,271,273,274,298,303,305,312,324,326,327,340,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-147,-209,-170,219,-101,-111,-169,-184,-174,-209,-164,-100,269,-98,-96,-88,-81,-146,-76,-183,-173,-168,269,-91,-137,-143,219,-89,-84,-78,-93,-90,-138,-94,]),'SEMI':([1,3,7,8,10,11,15,26,29,30,32,34,37,38,39,41,43,44,47,49,50,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,101,102,103,105,110,112,113,114,123,125,126,127,128,131,132,133,134,135,137,138,139,140,141,142,144,145,146,154,158,175,179,181,182,184,186,187,197,205,207,209,213,215,220,223,226,230,231,234,239,240,241,242,245,249,250,257,263,273,274,279,282,284,288,292,293,295,303,305,306,308,312,316,317,320,321,326,327,328,330,332,338,341,342,348,350,351,353,356,],[-73,-71,-151,-153,-72,100,-172,-85,-148,-69,-150,-155,-154,-152,-149,-70,-171,-209,-16,149,-23,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-187,-195,180,-196,188,-25,-11,192,-191,-189,-188,-190,-44,-45,-43,-49,-50,-41,-40,-39,-46,-19,-42,-51,-47,-58,-59,-101,-111,-156,-194,-193,-208,-199,-197,-198,244,-184,-174,-57,-18,-17,-163,-100,-98,-96,-88,-81,-27,-26,-12,-14,-76,-183,-173,-20,-162,-137,-143,-192,-207,-13,314,-60,-52,-53,-89,-84,-206,-203,-78,336,337,-62,-67,-90,-138,-202,-201,-205,346,-200,347,-38,354,355,-37,357,]),'ARROW':([1,3,6,9,10,15,26,27,30,31,32,35,41,43,44,54,57,64,72,73,77,79,84,85,88,89,90,92,93,94,95,97,98,99,106,120,122,124,152,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,205,207,210,211,212,214,218,225,232,233,234,237,243,245,246,248,249,250,260,267,269,272,294,297,300,305,310,311,312,],[-73,-71,65,94,-72,-172,-85,-68,-69,-23,-74,65,-70,-171,65,65,65,-109,-68,-74,-110,-23,65,94,65,-124,-158,65,-125,-75,-108,-126,-107,-106,65,65,65,65,65,-123,65,-122,94,65,-115,-119,-114,-112,-116,-113,65,-121,-117,-118,-120,-127,-157,65,-23,-184,-174,65,65,65,65,65,65,65,65,-81,65,65,-76,65,65,-183,-173,-68,65,65,65,65,65,65,-84,65,65,-78,]),'FALSE':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[67,67,67,67,67,-109,-110,67,67,-124,-158,67,-125,-108,-126,-107,-106,67,67,67,67,67,-123,67,-122,67,-115,-119,-114,-112,-116,-113,67,-121,-117,-118,-120,-127,-157,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'SYN':([0,4,13,17,21,23,28,100,117,149,188,192,201,244,314,336,337,346,347,354,355,357,],[19,-9,-6,-7,-5,19,-8,-147,19,-15,-24,-10,-28,-146,19,19,19,19,-32,-31,-30,-29,]),'READ':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[20,-9,20,-6,20,-7,-5,20,-8,20,20,20,20,-109,20,-110,20,20,-124,-158,20,-125,-108,-126,-107,-106,-147,20,20,20,20,20,20,20,-15,20,20,-123,20,-122,20,-115,-119,-114,-112,-116,-113,20,-121,-117,-118,-120,-127,-157,20,-24,-10,20,-28,20,20,20,20,20,20,20,20,20,20,20,20,-146,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-32,-31,-30,-29,]),'ASC':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[22,-9,22,-6,22,-7,-5,22,-8,22,22,22,22,-109,22,-110,22,22,-124,-158,22,-125,-108,-126,-107,-106,-147,22,22,22,22,22,22,22,-15,22,22,-123,22,-122,22,-115,-119,-114,-112,-116,-113,22,-121,-117,-118,-120,-127,-157,22,-24,-10,22,-28,22,22,22,22,22,22,22,22,22,22,22,22,-146,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-32,-31,-30,-29,]),'HAT':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[69,69,69,69,69,-109,-110,69,69,-124,-158,69,-125,-108,-126,-107,-106,69,69,69,69,69,-123,69,-122,69,-115,-119,-114,-112,-116,-113,69,-121,-117,-118,-120,-127,-157,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'EXIT':([0,4,13,14,17,21,23,28,100,107,117,119,149,151,180,188,192,201,219,221,244,314,336,337,346,347,354,355,357,],[12,-9,-6,12,-7,-5,12,-8,-147,12,12,12,-15,12,12,-24,-10,-28,12,12,-146,12,12,12,12,-32,-31,-30,-29,]),'LOC':([50,128,131,132,133,134,135,137,138,139,141,142,144,145,146,209,292,293,295,318,320,321,343,],[-23,-44,-45,-43,-49,-50,-41,-40,-39,-46,-42,-51,-47,-58,-59,-57,-60,-52,-53,339,-62,-67,349,]),'AND':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,163,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'THEN':([1,3,10,15,26,30,41,43,51,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,153,154,158,205,207,223,226,230,231,234,245,249,250,264,273,274,299,303,305,312,325,326,327,],[-73,-71,-72,-172,-85,-69,-70,-171,151,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,225,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,151,-137,-143,225,-89,-84,-78,225,-90,-138,]),'DOWN':([1,3,10,15,26,30,41,43,50,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,185,205,207,223,226,230,231,234,245,249,250,273,274,281,303,305,309,312,326,327,331,],[-73,-71,-72,-172,-85,-69,-70,-171,-23,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,236,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-137,-143,307,-89,-84,329,-78,-90,-138,-204,]),'LENGTH':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[33,-9,33,-6,33,-7,-5,33,-8,33,33,33,33,-109,33,-110,33,33,-124,-158,33,-125,-108,-126,-107,-106,-147,33,33,33,33,33,33,33,-15,33,33,-123,33,-122,33,-115,-119,-114,-112,-116,-113,33,-121,-117,-118,-120,-127,-157,33,-24,-10,33,-28,33,33,33,33,33,33,33,33,33,33,33,33,-146,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-32,-31,-30,-29,]),'NUM':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[24,-9,24,-6,24,-7,-5,24,-8,24,24,24,24,-109,24,-110,24,24,-124,-158,24,-125,-108,-126,-107,-106,-147,24,24,24,24,24,24,24,-15,24,24,-123,24,-122,24,-115,-119,-114,-112,-116,-113,24,-121,-117,-118,-120,-127,-157,24,-24,-10,24,-28,24,24,24,24,24,24,24,24,24,24,24,24,-146,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-32,-31,-30,-29,]),'OD':([14,100,104,107,109,180,183,235,244,],[-209,-147,181,-209,-170,-209,-169,279,-146,]),'CCONST':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[80,80,80,80,80,-109,-110,80,80,-124,-158,80,-125,-108,-126,-107,-106,80,80,80,80,80,-123,80,-122,80,-115,-119,-114,-112,-116,-113,80,-121,-117,-118,-120,-127,-157,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'WHILE':([1,3,10,14,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,102,128,131,133,134,139,142,144,154,158,184,186,187,205,207,223,226,230,231,234,245,249,250,273,274,282,293,295,303,305,306,308,312,326,327,328,330,332,341,],[-73,-71,-72,106,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,106,-44,-45,-49,-50,-46,-51,-47,-101,-111,-199,-197,-198,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-137,-143,-207,-52,-53,-89,-84,-206,-203,-78,-90,-138,-202,-201,-205,-200,]),'INT':([46,48,50,115,130,189,214,216,238,280,290,296,297,335,],[133,-21,-23,133,133,133,133,-22,133,133,133,133,133,133,]),'NOTEQ':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,169,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'NOT':([6,35,44,54,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[77,77,77,77,77,77,-124,-158,77,-125,-108,-126,-107,-106,77,77,77,77,77,-123,77,-122,77,-115,-119,-114,-112,-116,-113,77,-121,-117,-118,-120,-127,-157,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'LESS':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,171,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'DIVIDE':([1,3,9,10,15,26,27,30,31,32,41,43,52,53,55,56,58,59,60,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,196,205,207,223,226,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,98,-72,-172,-85,-68,-69,-23,-74,-70,-171,-128,98,-129,-136,-99,-104,-140,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-23,-184,-174,-100,98,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'ID':([0,4,5,6,12,13,14,16,17,19,21,23,28,35,44,46,48,50,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,108,115,117,119,120,122,124,130,147,148,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,189,190,191,192,193,201,210,211,212,214,216,218,219,221,225,232,233,237,238,243,244,246,247,248,267,269,272,280,290,294,296,297,300,310,311,313,314,335,336,337,346,347,354,355,357,],[31,-9,50,79,50,-6,79,50,-7,50,-5,31,-8,79,79,50,-21,-23,79,79,-109,79,-110,79,79,-124,-158,79,-125,-108,-126,-107,-106,-147,79,79,50,50,31,196,79,79,79,50,50,50,-15,79,79,-123,79,-122,79,-115,-119,-114,-112,-116,-113,79,-121,-117,-118,-120,-127,-157,79,-24,50,50,50,-10,79,-28,79,79,79,79,-22,79,79,79,79,79,79,79,50,79,-146,79,50,79,79,79,79,50,50,79,50,79,79,79,79,50,31,50,31,31,31,-32,-31,-30,-29,]),'CHARS':([46,48,50,115,130,189,216,290,296,335,],[129,-21,-23,129,129,129,-22,129,129,129,]),'ELSIF':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,100,107,109,150,154,158,183,205,207,221,222,223,224,226,230,231,234,244,245,249,250,266,268,271,273,274,298,303,305,312,324,326,327,340,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-147,-209,-170,218,-101,-111,-169,-184,-174,-209,-164,-100,267,-98,-96,-88,-81,-146,-76,-183,-173,-168,300,-91,-137,-143,218,-89,-84,-78,-93,-90,-138,-94,]),'OR':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,161,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'BOOL':([46,48,50,115,130,189,214,216,238,280,290,296,297,335,],[134,-21,-23,134,134,134,134,-22,134,134,134,134,134,134,]),'COLON':([1,3,10,15,26,27,30,31,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,176,177,198,200,205,207,223,226,227,230,231,234,245,249,250,253,255,260,273,274,303,305,312,326,327,],[-73,-71,-72,-172,-85,119,-69,121,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-55,233,-79,246,-184,-174,-100,-98,272,-96,-88,-81,-76,-183,-173,-55,294,-68,-137,-143,-89,-84,-78,-90,-138,]),'COMMA':([1,3,10,15,26,30,41,43,47,48,50,52,53,55,56,58,59,60,61,62,63,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,85,94,112,113,128,131,132,133,134,135,137,138,139,140,141,142,144,145,146,154,158,176,203,205,207,209,213,223,226,227,230,231,234,239,242,245,249,250,257,258,259,262,273,274,275,277,284,287,292,293,295,303,305,312,318,319,320,321,326,327,339,],[-73,-71,-72,-172,-85,-69,-70,-171,147,148,-23,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,-87,-86,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,190,191,-44,-45,-43,-49,-50,-41,-40,-39,-46,-19,-42,-51,-47,-58,-59,-101,-111,232,248,-184,-174,-57,-18,-100,-98,232,-96,-88,-81,-27,-14,-76,-183,-173,-20,-66,-65,297,-137,-143,232,-56,-13,313,-60,-52,-53,-89,-84,-78,-36,-54,-62,-67,-90,-138,-35,]),'LBRACKET':([1,3,9,10,15,26,27,30,31,32,41,43,52,55,56,60,62,63,66,67,68,72,73,75,76,78,79,80,81,82,83,85,94,129,143,158,196,205,207,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,92,-72,-172,-85,120,-69,-23,-74,-70,-171,-128,-129,-136,-140,-133,-131,-144,-141,159,120,-74,-130,-145,-134,-23,-142,-139,-132,-135,92,-75,208,214,92,-23,-184,-174,-88,-81,-76,-183,-173,120,-137,-143,-84,-78,-138,]),'CHAR':([46,48,50,115,130,189,214,216,238,280,290,296,297,335,],[142,-21,-23,142,142,142,142,-22,142,142,142,142,142,142,]),'ASSIGN':([1,3,9,10,15,26,27,30,31,32,41,43,48,50,72,79,86,87,89,91,93,94,95,96,97,98,99,111,115,128,131,132,133,134,135,137,138,139,140,141,142,144,145,146,185,194,196,205,207,209,216,234,245,249,250,292,293,295,305,312,320,321,],[-73,-71,90,-72,-172,-85,-68,-69,-23,-74,-70,-171,-21,-23,-68,-23,-161,174,-124,-159,-125,-75,-108,-160,-126,-107,-106,189,193,-44,-45,-43,-49,-50,-41,-40,-39,-46,212,-42,-51,-47,-58,-59,237,243,-23,-184,-174,-57,-22,-81,-76,-183,-173,-60,-52,-53,-84,-78,-62,-67,]),'ICONST':([6,35,44,54,57,64,77,84,88,89,90,92,93,95,97,98,99,106,120,122,124,152,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,193,208,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[81,81,81,81,81,-109,-110,81,81,-124,-158,81,-125,-108,-126,-107,-106,81,81,81,81,81,-123,81,-122,81,229,-115,-119,-114,-112,-116,-113,81,-121,-117,-118,-120,-127,-157,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MINUS':([1,3,6,9,10,15,26,27,30,31,32,35,41,43,44,52,53,54,55,56,58,59,60,61,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,92,93,94,95,97,98,99,106,120,122,124,152,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,205,207,210,211,212,214,218,223,225,226,230,231,232,233,234,237,243,245,246,248,249,250,260,267,269,272,273,274,294,297,300,305,310,311,312,327,],[-73,-71,64,93,-72,-172,-85,-68,-69,-23,-74,64,-70,-171,64,-128,-97,64,-129,-136,-99,-104,-140,93,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,64,-103,64,-124,-158,64,-125,-75,-108,-126,-107,-106,64,64,64,64,64,-101,-123,64,-122,-111,64,-115,-119,-114,-112,-116,-113,64,-121,-117,-118,-120,-127,-157,64,-23,-184,-174,64,64,64,64,64,-100,64,-98,93,-88,64,64,-81,64,64,-76,64,64,-183,-173,-68,64,64,64,-137,-143,64,64,64,-84,64,64,-78,-138,]),'$end':([4,13,17,18,21,23,25,28,100,116,117,118,149,188,192,195,201,244,347,354,355,357,],[-9,-6,-7,-1,-5,-209,0,-8,-147,-2,-209,-4,-15,-24,-10,-3,-28,-146,-32,-31,-30,-29,]),'GREATER':([1,3,10,15,26,30,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,71,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,-72,-172,-85,-69,-70,-171,-128,-97,-129,-136,-99,-104,-140,-95,-133,-131,-144,-141,-105,170,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-184,-174,-100,-98,-96,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'FOR':([14,],[108,]),'CONCAT':([1,3,9,10,15,26,27,30,31,32,41,43,52,53,55,56,58,59,60,61,62,63,66,67,68,72,73,74,75,76,78,79,80,81,82,83,85,94,154,158,196,205,207,223,226,230,231,234,245,249,250,260,273,274,305,312,327,],[-73,-71,97,-72,-172,-85,-68,-69,-23,-74,-70,-171,-128,-97,-129,-136,-99,-104,-140,97,-133,-131,-144,-141,-105,-68,-74,-102,-130,-145,-134,-23,-142,-139,-132,-135,-103,-75,-101,-111,-23,-184,-174,-100,-98,97,-88,-81,-76,-183,-173,-68,-137,-143,-84,-78,-138,]),'RETURN':([0,4,13,14,17,21,23,28,100,107,117,119,149,151,180,188,192,201,219,221,244,314,336,337,346,347,354,355,357,],[44,-9,-6,44,-7,-5,44,-8,-147,44,44,44,-15,44,44,-24,-10,-28,44,44,-146,44,44,44,44,-32,-31,-30,-29,]),'PRINT':([0,4,6,13,14,17,21,23,28,35,44,54,57,64,65,77,84,88,89,90,92,93,95,97,98,99,100,106,107,117,119,120,122,124,149,151,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,180,188,192,193,201,210,211,212,214,218,219,221,225,232,233,237,243,244,246,248,267,269,272,294,297,300,310,311,314,336,337,346,347,354,355,357,],[45,-9,45,-6,45,-7,-5,45,-8,45,45,45,45,-109,45,-110,45,45,-124,-158,45,-125,-108,-126,-107,-106,-147,45,45,45,45,45,45,45,-15,45,45,-123,45,-122,45,-115,-119,-114,-112,-116,-113,45,-121,-117,-118,-120,-127,-157,45,-24,-10,45,-28,45,45,45,45,45,45,45,45,45,45,45,45,-146,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-32,-31,-30,-29,]),'LPAREN':([2,6,20,22,24,31,33,35,36,40,42,44,45,50,54,57,64,69,77,79,84,88,89,90,92,93,95,97,98,99,106,120,122,124,128,131,132,133,134,136,137,139,142,144,152,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,193,196,202,210,211,212,214,218,225,232,233,237,243,246,248,259,260,267,269,272,282,283,293,294,295,297,300,306,310,311,315,],[-175,84,-181,-176,-177,122,-180,84,-178,-179,124,84,-182,-23,84,84,-109,160,-110,122,84,84,-124,-158,84,-125,-108,-126,-107,-106,84,84,84,84,-44,-45,-48,-49,-50,210,211,-46,-51,-47,84,-123,84,-122,84,-115,-119,-114,-112,-116,-113,84,-121,-117,-118,-120,-127,-157,84,122,247,84,84,84,84,84,84,84,84,84,84,84,84,211,-48,84,84,84,211,-48,-52,84,-53,84,84,211,84,84,335,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'procedure_definition':([121,],[201,]),'for_control':([14,],[102,]),'conditional_expression':([6,35,44,54,84,88,92,106,120,122,124,159,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'then_clause':([51,264,],[150,298,]),'procedure_statement':([0,23,117,314,336,337,346,],[4,4,4,4,4,4,4,]),'boolean_mode':([46,115,130,189,214,238,280,290,296,297,335,],[131,131,131,131,131,131,131,131,131,131,131,]),'result_spec':([288,317,],[316,338,]),'character_string_literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'array_location':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[9,85,9,9,85,85,85,85,158,85,85,85,85,9,9,9,85,85,85,9,85,85,85,85,9,85,85,85,85,85,85,9,9,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,9,9,9,9,]),'operator2':([61,230,],[156,156,]),'operand3':([6,35,44,54,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[58,58,58,58,58,58,58,58,58,58,58,223,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'start_element':([120,],[199,]),'boolean_literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'control_part':([14,],[103,]),'membership_operator':([71,],[164,]),'element_mode':([296,],[320,]),'action_statement_nullable':([14,107,180,221,],[104,183,235,266,]),'parenthesized_expression':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'composite_mode':([46,115,130,189,290,296,335,],[141,141,141,141,141,141,141,]),'else_clause':([150,298,],[217,323,]),'statement_nullable':([23,117,314,336,337,346,],[116,195,334,344,345,352,]),'dereferenced_reference':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'arithmetic_multiplicative_operator':([9,53,226,],[96,152,152,]),'declaration_statement':([0,23,117,314,336,337,346,],[21,21,21,21,21,21,21,]),'primitive_value':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'parameter_list':([122,124,248,],[204,206,291,]),'action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[11,11,11,11,11,197,11,11,11,11,11,11,11,11,]),'lower_bound':([92,210,211,214,297,],[177,255,255,255,255,]),'assigning_operator':([9,],[88,]),'then_expression':([153,299,325,],[224,324,340,]),'operand0':([6,35,44,54,84,88,92,106,120,122,124,159,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'location':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'identifier':([0,5,6,12,14,16,19,23,35,44,46,54,57,65,84,88,92,106,107,108,115,117,119,120,122,124,130,147,148,151,152,156,159,167,180,189,190,191,193,210,211,212,214,218,219,221,225,232,233,237,238,243,246,247,248,267,269,272,280,290,294,296,297,300,310,311,313,314,335,336,337,346,],[27,48,72,101,27,48,48,27,72,72,132,72,72,72,72,72,72,72,27,185,132,27,72,72,72,72,132,48,48,27,72,72,72,72,27,132,48,48,72,72,72,72,260,72,27,27,72,72,72,72,283,72,72,48,72,72,72,72,283,132,72,132,260,72,72,72,48,27,132,27,27,27,]),'action_statement':([0,14,23,107,117,151,180,219,221,314,336,337,346,],[28,107,28,107,28,221,107,221,107,28,28,28,28,]),'elsif_expression':([224,],[268,]),'action_statement_list':([151,219,],[222,265,]),'declaration_list':([5,147,],[49,215,]),'mode_name':([46,115,130,189,290,296,335,],[138,138,138,138,138,138,138,]),'initialization':([140,],[213,]),'iteration':([108,],[186,]),'do_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'operator1':([71,],[167,]),'if_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expression_list':([92,159,232,],[178,228,276,]),'result_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'integer_literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,208,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,251,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'empty_literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'string_mode':([46,115,130,189,290,296,335,],[145,145,145,145,145,145,145,]),'array_mode':([46,115,130,189,290,296,335,],[146,146,146,146,146,146,146,]),'synonym_statement':([0,23,117,314,336,337,346,],[13,13,13,13,13,13,13,]),'monadic_operator':([6,35,44,54,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expression':([6,35,44,54,84,88,92,106,120,122,124,159,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[51,123,125,153,173,175,176,182,198,203,203,227,242,253,253,257,253,264,271,275,277,281,284,285,203,299,302,304,277,253,325,331,332,]),'array_slice':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declaration':([5,147,],[47,47,]),'string_slice':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'operand2':([6,35,44,54,84,88,92,106,120,122,124,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[53,53,53,53,53,53,53,53,53,53,53,226,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'relational_operator':([71,],[166,]),'value_array_element':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'exit_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'return_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'identifier_list':([5,16,19,147,148,190,191,247,313,],[46,111,115,46,216,111,115,290,290,]),'array_element':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'step_enumeration':([108,],[187,]),'string_length':([208,],[252,]),'referenced_location':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'reference_mode':([46,115,130,189,290,296,335,],[135,135,135,135,135,135,135,]),'discrete_mode_name':([46,115,130,189,214,238,280,290,296,297,335,],[136,136,136,136,136,136,136,136,136,136,136,]),'discrete_mode':([46,115,130,189,214,238,280,290,296,297,335,],[137,137,137,137,259,282,306,137,137,259,137,]),'result':([44,],[126,]),'empty':([14,23,44,107,117,180,221,314,336,337,346,],[109,118,127,109,118,109,109,118,118,118,118,]),'builtin_call':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'newmode_list':([16,190,],[110,240,]),'formal_parameter':([247,313,],[287,287,]),'operand1':([6,35,44,54,84,88,92,106,120,122,124,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[61,61,61,61,61,61,61,61,61,61,61,61,230,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'newmode_statement':([0,23,117,314,336,337,346,],[17,17,17,17,17,17,17,]),'synonym_list':([19,191,],[114,241,]),'discrete_range_mode':([46,115,130,189,214,238,280,290,296,297,335,],[144,144,144,144,144,144,144,144,144,144,144,]),'statement_list':([0,],[18,]),'left_element':([120,],[200,]),'literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'string_concatenation_operator':([9,61,230,],[86,155,155,]),'statement':([0,23,117,314,336,337,346,],[23,117,117,117,117,117,117,]),'while_control':([14,102,],[105,179,]),'integer_mode':([46,115,130,189,214,238,280,290,296,297,335,],[128,128,128,128,128,128,128,128,128,128,128,]),'right_element':([246,],[286,]),'program':([0,],[25,]),'formal_parameter_list':([247,313,],[289,333,]),'else_expression':([224,268,],[270,301,]),'call_action':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[32,73,32,32,73,73,73,73,73,73,73,73,73,32,32,32,73,73,73,32,73,73,73,73,32,73,73,73,73,73,73,32,32,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,32,32,32,32,]),'end_value':([281,307,309,329,],[308,328,330,341,]),'operand4':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[74,74,74,74,154,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'bracketed_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'value_array_slice':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_literal':([6,35,44,54,57,84,88,92,106,120,122,124,152,156,159,167,193,210,211,212,214,218,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'upper_bound':([233,294,],[278,319,]),'synonym_definition':([19,191,],[113,113,]),'builtin_name':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'closed_dyadic_operator':([9,],[87,]),'character_mode':([46,115,130,189,214,238,280,290,296,297,335,],[139,139,139,139,139,139,139,139,139,139,139,]),'index_mode_list':([214,297,],[261,322,]),'mode':([46,115,130,189,290,296,335,],[140,194,209,239,318,321,343,]),'arithmetic_additive_operator':([9,61,230,],[91,157,157,]),'index_mode':([214,297,],[262,262,]),'range_enumeration':([108,],[184,]),'literal_range':([210,211,214,297,],[254,256,258,258,]),'mode_definition':([16,190,],[112,112,]),'step_value':([281,],[309,]),'assignment_action':([0,14,23,107,117,119,151,180,219,221,314,336,337,346,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'string_element':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'procedure_call':([0,6,14,23,35,44,54,57,65,84,88,92,106,107,117,119,120,122,124,151,152,156,159,167,180,193,210,211,212,214,218,219,221,225,232,233,237,243,246,248,267,269,272,294,297,300,310,311,314,336,337,346,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]

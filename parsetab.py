
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8C97F256292B00B7E7B2AED6E7423F4F'
    
_lr_action_items = {'RBRACKET':([10,35,36,38,41,43,46,48,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,102,104,105,106,107,108,109,114,134,139,144,145,146,147,149,153,154,155,156,159,163,164,165,166,167,168,169,170,],[-21,-38,-32,-37,-34,-33,-31,-36,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-53,-50,142,-52,143,-48,-89,-79,-61,-39,-78,-76,-74,159,-68,-40,-41,-43,-51,-67,-62,169,-69,-68,170,-66,-70,-64,]),'LBRACKET':([10,33,37,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,151,152,159,163,169,170,],[-21,58,60,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,133,-108,135,-106,-107,-115,-111,-112,-83,-114,-80,135,133,-79,-61,-78,-76,-74,163,-63,-67,-62,-70,-64,]),'ID':([1,3,5,10,12,16,20,24,25,27,34,39,49,51,55,57,58,67,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,142,160,161,162,],[10,10,10,-21,-19,10,10,10,10,10,10,10,10,10,-20,10,10,10,10,-87,-88,10,10,10,-84,-85,10,-86,-92,-96,-94,-93,10,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,10,-97,-104,10,10,10,10,10,10,10,10,]),'PLUS':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,117,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,117,-67,-62,-70,-64,]),'GREATER':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,123,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'OR':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,121,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'DIVIDE':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,78,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,111,-113,-60,-109,-116,-59,-110,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,111,-67,-62,-70,-64,]),'NOT':([39,57,58,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[84,84,84,84,84,84,-84,-85,84,-86,-92,-96,-94,-93,84,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,84,-97,-104,84,84,84,84,84,84,84,]),'COMMA':([10,12,14,17,19,29,30,32,35,36,38,40,41,43,44,45,46,47,48,52,54,59,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,98,102,104,106,109,114,134,137,138,139,143,144,145,146,149,153,154,155,157,158,159,163,166,169,170,],[-21,25,27,49,51,-26,-28,-30,-38,-32,-37,-27,-34,-33,-45,-46,-31,-29,-36,-17,-25,-44,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-12,-80,-16,-53,141,-52,-89,-79,-61,-11,-18,-39,-47,-78,-76,-74,161,-40,-41,-43,-54,-49,-67,-62,161,-70,-64,]),'ARRAY':([10,12,16,20,24,34,55,142,],[-21,-19,33,33,33,33,-20,33,]),'REF':([10,12,16,20,24,34,55,142,],[-21,-19,34,34,34,34,-20,34,]),'ASSIGN':([10,11,12,16,29,30,32,35,36,38,40,41,42,43,44,45,46,47,48,52,55,59,139,143,153,157,158,],[-21,24,-19,39,-26,-28,-30,-38,-32,-37,-27,-34,94,-33,-45,-46,-31,-29,-36,97,-20,-44,-39,-47,-40,-54,-49,]),'$end':([2,4,6,7,8,9,21,22,23,26,28,50,53,],[-7,-1,-5,-118,-6,0,-4,-2,-118,-22,-8,-13,-3,]),'SEMI':([10,13,14,15,17,18,19,29,30,32,35,36,38,40,41,43,44,45,46,47,48,52,54,56,59,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,95,96,98,109,114,134,137,138,139,143,144,145,146,153,157,158,159,163,169,170,],[-21,26,-23,28,-9,50,-14,-26,-28,-30,-38,-32,-37,-27,-34,-33,-45,-46,-31,-29,-36,-17,-25,-24,-44,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-12,-80,-10,-15,-16,-89,-79,-61,-11,-18,-39,-47,-78,-76,-74,-40,-54,-49,-67,-62,-70,-64,]),'CHARS':([10,12,16,20,24,34,55,142,],[-21,-19,37,37,37,37,-20,37,]),'TIMES':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,78,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,110,-113,-60,-109,-116,-59,-110,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,110,-67,-62,-70,-64,]),'ARROW':([10,39,57,58,62,63,65,70,71,73,75,78,80,82,84,93,94,97,103,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,140,141,159,160,161,162,163,169,170,],[-21,67,67,67,-56,-58,-71,67,-60,-87,-59,-57,134,-55,-88,67,67,67,-55,134,-84,-85,67,-86,-92,-96,-94,-93,67,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,67,-97,-104,67,-61,67,67,67,-67,67,67,67,-62,-70,-64,]),'NOTEQ':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,129,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'CONCAT':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,116,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,116,-67,-62,-70,-64,]),'TYPE':([0,2,6,7,8,23,26,28,50,],[1,-7,-5,1,-6,1,-22,-8,-13,]),'CCONST':([39,57,58,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[86,86,86,86,-87,-88,86,86,86,-84,-85,86,-86,-92,-96,-94,-93,86,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,86,-97,-104,86,86,86,86,86,86,86,]),'LESS':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,124,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'BOOL':([10,12,16,20,24,34,55,58,141,142,],[-21,-19,38,38,38,38,-20,38,38,38,]),'CHAR':([10,12,16,20,24,34,55,58,141,142,],[-21,-19,35,35,35,35,-20,35,35,35,]),'SYN':([0,2,6,7,8,23,26,28,50,],[3,-7,-5,3,-6,3,-22,-8,-13,]),'ICONST':([39,57,58,60,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[88,88,88,88,88,-87,-88,88,88,88,-84,-85,88,-86,-92,-96,-94,-93,88,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,88,-97,-104,88,88,88,88,88,88,88,]),'NULL':([39,57,58,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[74,74,74,74,-87,-88,74,74,74,-84,-85,74,-86,-92,-96,-94,-93,74,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,74,-97,-104,74,74,74,74,74,74,74,]),'SCONST':([39,57,58,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[64,64,64,64,-87,-88,64,64,64,-84,-85,64,-86,-92,-96,-94,-93,64,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,64,-97,-104,64,64,64,64,64,64,64,]),'EQUAL':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,126,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'COLON':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,100,101,103,109,114,134,144,145,146,148,149,150,152,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,140,-42,-55,-89,-79,-61,-78,-76,-74,160,-42,162,-65,-67,-62,-70,-64,]),'FALSE':([39,57,58,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[90,90,90,90,-87,-88,90,90,90,-84,-85,90,-86,-92,-96,-94,-93,90,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,90,-97,-104,90,90,90,90,90,90,90,]),'MINUS':([10,39,57,58,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,80,81,82,83,85,86,87,88,89,90,92,93,94,97,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,140,141,144,145,146,159,160,161,162,163,169,170,],[-21,73,73,73,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,120,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,73,73,73,-55,-89,-84,-85,73,-86,-79,-92,-96,-94,-93,73,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,73,-97,-104,73,-61,73,73,73,-78,-76,120,-67,73,73,73,-62,-70,-64,]),'IN':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,127,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'DCL':([0,2,6,7,8,23,26,28,50,],[5,-7,-5,5,-6,5,-22,-8,-13,]),'AND':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,131,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'LPAREN':([10,31,32,35,36,38,40,41,43,46,48,103,106,139,153,],[-21,57,-35,-38,-32,-37,93,-34,-33,-31,-36,-35,93,-39,-40,]),'RPAREN':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,99,109,114,134,136,144,145,146,154,155,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,-72,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,139,-89,-79,-61,153,-78,-76,-74,-41,-43,-67,-62,-70,-64,]),'GTEQUAL':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,128,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'LTEQUAL':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,146,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,-75,-113,-60,-109,-116,-59,-110,-73,-57,132,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,-76,-74,-67,-62,-70,-64,]),'TRUE':([39,57,58,70,73,84,93,94,97,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,140,141,160,161,162,],[69,69,69,69,-87,-88,69,69,69,-84,-85,69,-86,-92,-96,-94,-93,69,-95,-98,-90,-101,-103,-91,-99,-105,-102,-100,69,-97,-104,69,69,69,69,69,69,69,]),'MODULO':([10,61,62,63,64,65,66,68,69,71,72,74,75,76,78,80,81,82,83,85,86,87,88,89,90,92,103,109,114,134,144,145,159,163,169,170,],[-21,-77,-56,-58,-117,-71,-82,113,-113,-60,-109,-116,-59,-110,-57,-81,-108,-55,-106,-107,-115,-111,-112,-83,-114,-80,-55,-89,-79,-61,-78,113,-67,-62,-70,-64,]),'INT':([10,12,16,20,24,34,55,58,141,142,],[-21,-19,48,48,48,48,-20,48,48,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_name':([16,20,24,34,142,],[29,29,29,29,29,]),'reference_mode':([16,20,24,34,142,],[30,30,30,30,30,]),'array_slice':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'operand3':([39,57,58,93,94,97,112,119,130,133,135,140,141,160,161,162,],[61,61,61,61,61,61,144,61,61,61,61,61,61,61,61,61,]),'dereferenced_reference':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'lower_bound':([57,58,93,133,141,],[100,100,100,148,100,]),'string_slice':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'location':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'referenced_location':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'index_mode_list':([58,141,],[105,156,]),'string_element':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'operand2':([39,57,58,93,94,97,119,130,133,135,140,141,160,161,162,],[68,68,68,68,68,68,145,68,68,68,68,68,68,68,68,]),'operator1':([79,],[130,]),'index_mode':([58,141,],[104,104,]),'program':([0,],[9,]),'string_length':([60,],[107,]),'monadic_operator':([39,57,58,93,94,97,112,119,130,133,135,140,141,160,161,162,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'initialization':([52,],[98,]),'discrete_range_mode':([16,20,24,34,58,141,142,],[41,41,41,41,41,41,41,]),'literal_range':([57,58,93,141,],[99,102,136,102,]),'discrete_mode_name':([16,20,24,34,58,141,142,],[31,31,31,31,31,31,31,]),'empty':([7,23,],[21,21,]),'character_literal':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expression_list':([133,161,],[147,165,]),'array_element':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_mode':([16,20,24,34,58,141,142,],[43,43,43,43,43,43,43,]),'declaration':([5,51,],[19,19,]),'identifier_list':([1,3,5,25,27,49,51,],[11,16,20,55,11,16,20,]),'string_mode':([16,20,24,34,142,],[44,44,44,44,44,]),'relational_operator':([79,],[122,]),'primitive_value':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'empty_literal':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'declaration_list':([5,51,],[18,96,]),'synonym_list':([3,49,],[15,95,]),'upper_bound':([140,160,],[154,164,]),'right_element':([162,],[167,]),'newmode_statement':([0,7,23,],[2,2,2,]),'operand0':([39,57,58,93,94,97,133,135,140,141,160,161,162,],[79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_location':([39,57,58,67,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[80,80,80,109,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'boolean_literal':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'identifier':([1,3,5,16,20,24,25,27,34,39,49,51,57,58,67,70,93,94,97,112,119,130,133,135,140,141,142,160,161,162,],[12,12,12,32,32,32,12,12,32,82,12,12,82,103,82,82,82,82,82,82,82,82,82,82,82,103,32,82,82,82,]),'mode_definition':([1,27,],[14,14,]),'statement_list':([0,],[4,]),'element_mode':([142,],[158,]),'arithmetic_additive_operator':([77,146,],[115,115,]),'literal':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'start_element':([135,],[151,]),'boolean_mode':([16,20,24,34,58,141,142,],[36,36,36,36,36,36,36,]),'newmode_list':([1,27,],[13,56,]),'integer_literal':([39,57,58,60,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[85,85,85,108,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'operand1':([39,57,58,93,94,97,130,133,135,140,141,160,161,162,],[77,77,77,77,77,77,146,77,77,77,77,77,77,77,]),'character_string_literal':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'string_concatenation_operator':([77,146,],[118,118,]),'discrete_mode':([16,20,24,34,58,141,142,],[40,40,40,40,106,106,40,]),'declaration_statement':([0,7,23,],[6,6,6,]),'membership_operator':([79,],[125,]),'left_element':([135,],[150,]),'mode':([16,20,24,34,142,],[42,52,54,59,157,]),'synonym_definition':([3,49,],[17,17,]),'statement_nullable':([7,23,],[22,53,]),'arithmetic_multiplicative_operator':([68,145,],[112,112,]),'expression':([39,57,58,93,94,97,133,135,140,141,160,161,162,],[91,101,101,101,137,138,149,152,155,101,155,166,168,]),'operand4':([39,57,58,70,93,94,97,112,119,130,133,135,140,141,160,161,162,],[92,92,92,114,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'statement':([0,7,23,],[7,23,23,]),'synonym_statement':([0,7,23,],[8,8,8,]),'array_mode':([16,20,24,34,142,],[45,45,45,45,45,]),'integer_mode':([16,20,24,34,58,141,142,],[46,46,46,46,46,46,46,]),'composite_mode':([16,20,24,34,142,],[47,47,47,47,47,]),'operator2':([77,146,],[119,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',40),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',44),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',55),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',56),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',68),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',69),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',70),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',79),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',83),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',84),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',93),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',94),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',105),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',109),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',110),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',118),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',119),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',123),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',127),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',128),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',136),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',144),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',148),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',149),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',157),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',161),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',162),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',163),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',164),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',168),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',174),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',175),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',176),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',177),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',181),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',185),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',189),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',193),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',199),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',200),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',204),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',208),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',211),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',217),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',223),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',224),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',228),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',232),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',236),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',240),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',241),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',247),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',248),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',252),
  ('location -> identifier','location',1,'p_location','Parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',262),
  ('location -> string_element','location',1,'p_location','Parser.py',263),
  ('location -> string_slice','location',1,'p_location','Parser.py',264),
  ('location -> array_element','location',1,'p_location','Parser.py',265),
  ('location -> array_slice','location',1,'p_location','Parser.py',266),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',270),
  ('string_element -> identifier LBRACKET start_element LBRACKET','string_element',4,'p_string_element','Parser.py',274),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',278),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',282),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',286),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',290),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',294),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',298),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',299),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',306),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',310),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',319),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',327),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',328),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',335),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',336),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',343),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',344),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',352),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',353),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',360),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',361),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',362),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',366),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',367),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',368),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',372),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',373),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',377),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',385),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',386),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',390),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',391),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',395),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',396),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',400),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',404),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',405),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',406),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',407),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',408),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',409),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',410),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',411),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',415),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',426),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',430),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',431),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',432),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',433),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',434),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',437),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',441),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',442),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',446),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',451),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',455),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',460),
]

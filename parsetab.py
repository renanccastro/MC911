
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '88C00CB79526FB2CA1701C977A3F5F56'
    
_lr_action_items = {'OR':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,128,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'COLON':([2,8,10,11,15,17,30,33,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,193,194,196,203,204,206,207,208,209,213,236,239,241,247,249,261,262,267,291,309,310,311,313,],[-168,-83,-71,-68,-169,-69,105,107,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,240,-77,-171,245,-53,-94,-98,-96,248,-86,-180,-74,-170,-79,-135,300,-53,-66,-87,-76,-82,-136,-88,]),'RETURN':([0,6,14,16,32,35,37,40,87,96,98,107,148,158,182,183,186,197,229,233,238,327,332,341,342,],[1,1,1,-7,-6,-9,-8,-5,1,-144,1,1,1,-15,-24,1,-28,-10,1,1,-143,1,1,-30,-29,]),'ARRAY':([90,93,94,111,171,181,226,278,302,333,],[-23,169,-21,169,169,169,-22,169,169,169,]),'NULL':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[47,47,47,-108,47,47,-107,47,47,47,47,47,-106,47,47,-155,-105,-123,-104,-122,-124,-125,-113,-118,47,-117,-111,-115,-114,-116,-119,-112,-110,47,-120,-121,47,47,47,-154,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'CONCAT':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,191,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,126,-127,-141,-131,-134,-138,-140,-142,-126,-97,-95,-129,-128,126,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-23,-171,126,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'LENGTH':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[19,19,19,19,-7,19,19,-6,-9,-8,-5,-108,19,19,-107,19,19,19,19,-144,19,19,19,19,19,-106,19,19,-155,-105,-123,-104,-122,-124,-125,-113,-118,19,-117,-111,-115,-114,-116,-119,-112,-110,19,-120,-121,19,19,19,-15,-24,19,-28,-10,19,-154,19,19,19,19,19,19,19,19,19,19,-143,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,-29,]),'ELSIF':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,86,87,96,122,145,147,151,184,188,196,206,207,208,212,213,229,230,236,238,239,241,247,249,250,252,272,291,305,309,310,311,312,313,330,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-167,-206,-144,-73,-99,-109,-166,232,-181,-171,-94,-98,-96,251,-86,-206,-161,-180,-143,-74,-170,-79,-135,-89,290,-165,-87,232,-76,-82,-136,-91,-88,-92,]),'BOOL':([90,93,94,111,171,181,216,220,226,259,278,301,302,333,],[-23,174,-21,174,174,174,174,174,-22,174,174,174,174,174,]),'WHILE':([2,6,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,88,122,145,147,153,154,155,162,163,164,166,167,174,177,188,196,206,207,208,213,236,239,241,247,249,257,291,294,298,299,304,309,310,311,313,315,318,319,331,],[-168,83,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,83,-73,-99,-109,-195,-196,-194,-44,-43,-42,-49,-47,-48,-45,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-204,-87,-200,-203,-50,-51,-76,-82,-136,-88,-199,-198,-202,-197,]),'TRUE':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[50,50,50,-108,50,50,-107,50,50,50,50,50,-106,50,50,-155,-105,-123,-104,-122,-124,-125,-113,-118,50,-117,-111,-115,-114,-116,-119,-112,-110,50,-120,-121,50,50,50,-154,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'PLUS':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,191,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,124,-127,-141,-131,-134,-138,-140,-142,-126,-97,-95,-129,-128,124,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-23,-171,124,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'DO':([0,6,14,16,32,35,37,40,87,96,98,107,148,158,182,183,186,197,229,233,238,327,332,341,342,],[6,6,6,-7,-6,-9,-8,-5,6,-144,6,6,6,-15,-24,6,-28,-10,6,6,-143,6,6,-30,-29,]),'NOTEQ':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,133,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'TIMES':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,191,196,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,123,-127,-141,-131,-134,-138,-140,-142,-126,-97,123,-129,-128,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-23,-171,-98,123,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'EXIT':([0,6,14,16,32,35,37,40,87,96,98,107,148,158,182,183,186,197,229,233,238,327,332,341,342,],[9,9,9,-7,-6,-9,-8,-5,9,-144,9,9,9,-15,-24,9,-28,-10,9,9,-143,9,9,-30,-29,]),'LTEQUAL':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,136,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'RPAREN':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,90,106,109,122,145,146,147,159,160,161,162,163,164,166,167,168,170,174,175,176,177,187,188,189,195,196,206,207,208,213,221,236,239,241,247,249,260,271,276,277,279,284,291,299,303,304,308,309,310,311,313,320,322,323,328,329,336,339,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-23,188,196,-73,-99,213,-109,-37,-56,-39,-44,-43,-42,-49,-47,-41,-40,-48,-38,-57,-45,236,-181,-182,241,-171,-94,-98,-96,-86,-55,-180,-74,-170,-79,-135,299,304,306,-31,-183,-54,-87,-50,-58,-51,-34,-76,-82,-136,-88,-52,-60,-65,-32,-33,340,343,]),'UPPER':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[26,26,26,26,-7,26,26,-6,-9,-8,-5,-108,26,26,-107,26,26,26,26,-144,26,26,26,26,26,-106,26,26,-155,-105,-123,-104,-122,-124,-125,-113,-118,26,-117,-111,-115,-114,-116,-119,-112,-110,26,-120,-121,26,26,26,-15,-24,26,-28,-10,26,-154,26,26,26,26,26,26,26,26,26,26,-143,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-30,-29,]),'LESS':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,129,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'IN':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,90,122,145,147,156,188,196,206,207,208,213,217,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,127,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-23,-73,-99,-109,216,-181,-171,-94,-98,-96,-86,259,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'REF':([90,93,94,111,171,181,226,278,302,333,],[-23,171,-21,171,171,171,-22,171,171,171,]),'OD':([6,85,86,87,96,148,151,214,238,],[-206,150,-167,-206,-144,-206,-166,255,-143,]),'GTEQUAL':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,131,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'CHARS':([90,93,94,111,171,181,226,278,302,333,],[-23,173,-21,173,173,173,-22,173,173,173,]),'SCONST':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[53,53,53,-108,53,53,-107,53,53,53,53,53,-106,53,53,-155,-105,-123,-104,-122,-124,-125,-113,-118,53,-117,-111,-115,-114,-116,-119,-112,-110,53,-120,-121,53,53,53,-154,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'FI':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,86,87,96,122,145,147,151,184,188,196,206,207,208,213,229,230,231,236,238,239,241,247,249,253,272,275,289,291,292,305,309,310,311,313,324,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-167,-206,-144,-73,-99,-109,-166,234,-181,-171,-94,-98,-96,-86,-206,-161,273,-180,-143,-74,-170,-79,-135,291,-165,-162,313,-87,-90,-164,-76,-82,-136,-88,-163,]),'RBRACKET':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,162,163,164,166,167,174,177,188,192,194,196,204,205,206,207,208,209,210,213,236,239,241,247,249,263,264,265,266,269,270,280,281,283,284,285,286,287,291,299,304,309,310,311,313,320,321,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-44,-43,-42,-49,-47,-48,-45,-181,239,-75,-171,-80,247,-94,-98,-96,-80,249,-86,-180,-74,-170,-79,-135,-61,-64,-63,302,303,-59,309,-78,310,-54,-80,-81,311,-87,-50,-51,-76,-82,-136,-88,-52,-62,]),'BY':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,256,291,309,310,311,313,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,295,-87,-76,-82,-136,-88,]),'DIVIDE':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,191,196,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,119,-127,-141,-131,-134,-138,-140,-142,-126,-97,119,-129,-128,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-23,-171,-98,119,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'PRINT':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[43,43,43,43,-7,43,43,-6,-9,-8,-5,-108,43,43,-107,43,43,43,43,-144,43,43,43,43,43,-106,43,43,-155,-105,-123,-104,-122,-124,-125,-113,-118,43,-117,-111,-115,-114,-116,-119,-112,-110,43,-120,-121,43,43,43,-15,-24,43,-28,-10,43,-154,43,43,43,43,43,43,43,43,43,43,-143,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-30,-29,]),'ABS':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[24,24,24,24,-7,24,24,-6,-9,-8,-5,-108,24,24,-107,24,24,24,24,-144,24,24,24,24,24,-106,24,24,-155,-105,-123,-104,-122,-124,-125,-113,-118,24,-117,-111,-115,-114,-116,-119,-112,-110,24,-120,-121,24,24,24,-15,-24,24,-28,-10,24,-154,24,24,24,24,24,24,24,24,24,24,-143,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,-29,]),'END':([16,32,35,37,40,96,98,99,158,179,182,186,197,238,327,332,334,335,341,342,],[-7,-6,-9,-8,-5,-144,-206,-4,-15,-3,-24,-28,-10,-143,-206,-206,337,338,-30,-29,]),'ELSE':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,86,87,96,122,145,147,151,184,188,196,206,207,208,212,213,229,230,236,238,239,241,247,249,250,252,272,291,305,309,310,311,312,313,330,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-167,-206,-144,-73,-99,-109,-166,233,-181,-171,-94,-98,-96,254,-86,-206,-161,-180,-143,-74,-170,-79,-135,-89,254,-165,-87,233,-76,-82,-136,-91,-88,-92,]),'TYPE':([0,14,16,32,35,37,40,96,98,158,182,186,197,238,327,332,341,342,],[22,22,-7,-6,-9,-8,-5,-144,22,-15,-24,-28,-10,-143,22,22,-30,-29,]),'GREATER':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,135,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'SEMI':([1,2,3,4,5,8,10,11,12,13,15,17,21,23,25,34,41,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,69,73,74,75,76,77,78,79,80,81,82,84,88,90,91,92,95,100,101,103,110,112,122,145,147,149,150,152,153,154,155,159,160,161,162,163,164,166,167,168,170,172,174,175,176,177,188,190,196,202,206,207,208,213,218,221,223,227,228,234,236,239,241,242,244,247,249,255,257,268,273,282,291,294,298,299,303,304,306,309,310,311,313,315,318,319,322,323,325,331,337,338,340,343,],[-206,-168,-146,-152,-149,-83,-71,-68,96,-148,-169,-69,-145,-147,-150,-67,-70,-151,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-185,-129,-128,-93,-72,-103,-102,-139,-137,-66,-187,-186,-133,-132,-130,-23,-100,-101,148,-193,-192,-23,-16,158,-184,-188,-25,182,197,-11,-73,-99,-109,-205,-190,-191,-195,-196,-194,-37,-56,-39,-44,-43,-42,-49,-47,-41,-40,-19,-48,-38,-57,-45,-181,238,-171,-153,-94,-98,-96,-86,-17,-55,-18,-26,-27,-160,-180,-74,-170,-14,-12,-79,-135,-189,-204,-20,-159,-13,-87,-200,-203,-50,-58,-51,327,-76,-82,-136,-88,-199,-198,-202,-60,-65,332,-197,341,342,-36,-35,]),'LPAREN':([1,19,20,24,26,27,28,29,30,36,38,42,43,63,67,68,70,71,79,83,90,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,162,163,164,165,166,167,168,174,175,177,185,191,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,257,258,265,267,290,295,297,298,299,300,301,304,326,],[71,-177,71,-172,-175,-173,-174,71,106,-178,109,-176,-179,-108,71,71,-107,71,106,71,-23,71,71,71,-106,71,71,-155,-105,-123,-104,-122,-124,-125,-113,-118,71,-117,-111,-115,-114,-116,-119,-112,-110,71,-120,-121,71,71,-44,-43,-42,219,-49,-47,-46,-48,225,-45,235,106,71,-154,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,225,-46,225,-46,71,71,71,225,-50,71,71,-51,333,]),'$end':([14,16,18,31,32,35,37,40,96,97,98,99,158,179,182,186,197,238,341,342,],[-206,-7,-1,0,-6,-9,-8,-5,-144,-2,-206,-4,-15,-3,-24,-28,-10,-143,-30,-29,]),'ASSIGN':([2,8,10,11,15,17,23,30,33,34,41,45,73,79,90,94,102,111,113,114,117,119,120,121,122,123,124,125,126,156,159,160,161,162,163,164,166,167,168,170,172,174,175,176,177,188,191,196,199,221,226,236,239,241,247,299,303,304,309,310,322,323,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,118,-66,-23,-23,-21,181,198,201,-106,-158,-105,-123,-156,-73,-104,-122,-157,-124,215,-37,-56,-39,-44,-43,-42,-49,-47,-41,-40,222,-48,-38,-57,-45,-181,-23,-171,243,-55,-22,-180,-74,-170,-79,-50,-58,-51,-76,-82,-60,-65,]),'MODULO':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,191,196,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,-66,-67,-70,114,-127,-141,-131,-134,-138,-140,-142,-126,-97,114,-129,-128,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-23,-171,-98,114,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'NOT':([1,20,29,67,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[63,63,63,63,63,63,63,63,63,-106,63,63,-155,-105,-123,-104,-122,-124,-125,-113,-118,63,-117,-111,-115,-114,-116,-119,-112,-110,63,-120,-121,63,63,63,-154,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'FOR':([6,],[89,]),'PROC':([105,],[185,]),'NUM':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[28,28,28,28,-7,28,28,-6,-9,-8,-5,-108,28,28,-107,28,28,28,28,-144,28,28,28,28,28,-106,28,28,-155,-105,-123,-104,-122,-124,-125,-113,-118,28,-117,-111,-115,-114,-116,-119,-112,-110,28,-120,-121,28,28,28,-15,-24,28,-28,-10,28,-154,28,28,28,28,28,28,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'FALSE':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[66,66,66,-108,66,66,-107,66,66,66,66,66,-106,66,66,-155,-105,-123,-104,-122,-124,-125,-113,-118,66,-117,-111,-115,-114,-116,-119,-112,-110,66,-120,-121,66,66,66,-154,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ASC':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[27,27,27,27,-7,27,27,-6,-9,-8,-5,-108,27,27,-107,27,27,27,27,-144,27,27,27,27,27,-106,27,27,-155,-105,-123,-104,-122,-124,-125,-113,-118,27,-117,-111,-115,-114,-116,-119,-112,-110,27,-120,-121,27,27,27,-15,-24,27,-28,-10,27,-154,27,27,27,27,27,27,27,27,27,27,-143,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-30,-29,]),'TO':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,256,291,293,296,309,310,311,313,316,317,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,297,-87,297,297,-76,-82,-136,-88,-201,297,]),'IF':([0,1,6,14,16,20,29,32,35,37,40,67,71,83,87,96,98,106,107,108,109,115,116,118,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[29,67,29,29,-7,67,67,-6,-9,-8,-5,67,67,67,29,-144,29,67,29,67,67,67,67,-155,67,29,-15,-24,29,-28,-10,67,-154,67,67,67,67,67,67,29,67,29,67,-143,67,67,67,67,67,67,67,67,67,67,67,67,29,29,-30,-29,]),'ID':([0,1,6,7,9,14,16,20,22,29,32,35,37,39,40,63,67,68,70,71,72,83,87,89,90,93,94,96,98,106,107,108,109,111,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,157,158,171,178,180,181,182,183,186,197,198,200,201,211,215,216,219,220,222,225,226,229,232,233,235,237,238,240,243,245,246,248,251,254,259,278,290,295,297,300,301,302,307,327,332,333,341,342,],[30,79,79,90,90,30,-7,79,90,79,-6,-9,-8,90,-5,-108,79,79,-107,79,79,79,79,90,-23,90,-21,-144,30,79,191,79,79,90,-106,79,79,-155,-105,-123,-104,-122,-124,-125,-113,-118,79,-117,-111,-115,-114,-116,-119,-112,-110,79,-120,-121,79,79,79,90,-15,90,90,90,90,-24,79,-28,-10,79,90,-154,79,79,90,79,79,79,79,-22,79,79,79,90,79,-143,79,79,79,79,79,79,79,90,90,79,79,79,79,79,90,90,30,30,90,-30,-29,]),'ICONST':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,224,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[69,69,69,-108,69,69,-107,69,69,69,69,69,-106,69,69,-155,-105,-123,-104,-122,-124,-125,-113,-118,69,-117,-111,-115,-114,-116,-119,-112,-110,69,-120,-121,69,69,69,-154,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'MINUS':([1,2,8,10,11,15,17,20,23,29,30,33,34,41,45,46,47,48,49,50,52,53,54,55,57,59,60,61,62,64,65,66,67,69,71,73,76,77,78,79,80,81,83,106,108,109,114,115,116,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,188,191,196,198,201,206,207,208,211,213,215,219,220,222,225,232,236,237,239,240,241,243,245,246,247,248,249,251,254,267,290,295,297,300,301,309,310,311,],[70,-168,-83,-71,-68,-169,-69,70,-72,70,-23,-66,-67,-70,120,-127,-141,-131,-134,-138,-140,-142,-126,-97,-95,-129,-128,120,-72,-103,-102,-139,70,-137,70,-66,-133,-132,-130,-23,-100,-101,70,70,70,70,-106,70,70,-155,-105,-123,-73,-104,-122,-124,-125,-113,-118,70,-117,-111,-115,-114,-116,-119,-112,-110,70,-120,-121,70,70,-99,-109,-181,-23,-171,70,-154,120,-98,-96,70,-86,70,70,70,70,70,70,-180,70,-74,70,-170,70,70,70,-79,70,-135,70,70,-66,70,70,70,70,70,-76,-82,-136,]),'ARROW':([1,2,8,10,11,15,17,20,23,29,30,33,34,41,45,62,63,67,68,70,71,73,79,81,83,106,108,109,114,115,116,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,188,191,196,198,201,211,215,219,220,222,225,232,236,237,239,240,241,243,245,246,247,248,251,254,267,290,295,297,300,301,309,310,],[72,-168,-83,-71,-68,-169,-69,72,-72,72,-23,-66,-67,-70,122,-72,-108,72,72,-107,72,-66,-23,122,72,72,72,72,-106,72,72,-155,-105,-123,-73,-104,-122,-124,-125,-113,-118,72,-117,-111,-115,-114,-116,-119,-112,-110,72,-120,-121,72,72,122,-181,-23,-171,72,-154,72,72,72,72,72,72,72,-180,72,-74,72,-170,72,72,72,-79,72,72,72,-66,72,72,72,72,72,-76,-82,]),'CCONST':([1,20,29,63,67,68,70,71,83,106,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,198,201,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[52,52,52,-108,52,52,-107,52,52,52,52,52,-106,52,52,-155,-105,-123,-104,-122,-124,-125,-113,-118,52,-117,-111,-115,-114,-116,-119,-112,-110,52,-120,-121,52,52,52,-154,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'RESULT':([0,6,14,16,32,35,37,40,87,96,98,107,148,158,182,183,186,197,229,233,238,327,332,341,342,],[20,20,20,-7,-6,-9,-8,-5,20,-144,20,20,20,-15,-24,20,-28,-10,20,20,-143,20,20,-30,-29,]),'COMMA':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,90,91,94,101,112,122,145,147,159,160,161,162,163,164,166,167,168,170,172,174,175,176,177,188,189,196,204,206,207,208,209,213,221,223,228,236,239,241,242,247,249,263,264,265,268,277,282,284,285,291,299,303,304,308,309,310,311,313,320,322,323,329,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-23,157,178,180,200,-73,-99,-109,-37,-56,-39,-44,-43,-42,-49,-47,-41,-40,-19,-48,-38,-57,-45,-181,237,-171,246,-94,-98,-96,246,-86,-55,-18,-27,-180,-74,-170,-14,-79,-135,301,-64,-63,-20,307,-13,-54,246,-87,-50,-58,-51,-34,-76,-82,-136,-88,-52,-60,-65,-33,]),'INT':([90,93,94,111,171,181,216,220,226,259,278,301,302,333,],[-23,167,-21,167,167,167,167,167,-22,167,167,167,167,167,]),'LOC':([90,159,160,161,162,163,164,166,167,168,170,174,175,176,177,221,299,303,304,308,322,323,336,],[-23,-37,-56,-39,-44,-43,-42,-49,-47,-41,-40,-48,-38,-57,-45,-55,-50,-58,-51,329,-60,-65,339,]),'EQUAL':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,134,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),'LBRACKET':([2,8,10,11,15,17,23,30,33,34,41,45,46,47,48,49,50,52,53,54,59,60,62,64,66,69,73,76,77,78,79,81,122,147,169,173,188,191,196,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-72,-23,108,-67,-70,116,-127,-141,-131,-134,-138,-140,-142,-126,-129,-128,-72,143,-139,-137,108,-133,-132,-130,-23,116,-73,116,220,224,-181,-23,-171,-86,-180,-74,-170,-79,-135,108,-76,-82,-136,]),'SYN':([0,14,16,32,35,37,40,96,98,158,182,186,197,238,327,332,341,342,],[39,39,-7,-6,-9,-8,-5,-144,39,-15,-24,-28,-10,-143,39,39,-30,-29,]),'LOWER':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[42,42,42,42,-7,42,42,-6,-9,-8,-5,-108,42,42,-107,42,42,42,42,-144,42,42,42,42,42,-106,42,42,-155,-105,-123,-104,-122,-124,-125,-113,-118,42,-117,-111,-115,-114,-116,-119,-112,-110,42,-120,-121,42,42,42,-15,-24,42,-28,-10,42,-154,42,42,42,42,42,42,42,42,42,42,-143,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-30,-29,]),'CHAR':([90,93,94,111,171,181,216,220,226,259,278,301,302,333,],[-23,166,-21,166,166,166,166,166,-22,166,166,166,166,166,]),'DCL':([0,14,16,32,35,37,40,96,98,158,182,186,197,238,327,332,341,342,],[7,7,-7,-6,-9,-8,-5,-144,7,-15,-24,-28,-10,-143,7,7,-30,-29,]),'DOWN':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,90,122,145,147,156,188,196,206,207,208,213,236,239,241,247,249,256,291,296,309,310,311,313,316,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-23,-73,-99,-109,217,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,293,-87,317,-76,-82,-136,-88,-201,]),'RETURNS':([306,],[326,]),'THEN':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,104,122,144,145,147,188,196,206,207,208,213,236,239,241,247,249,274,288,291,309,310,311,313,314,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,-84,-140,-142,-126,-97,-85,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,183,-73,211,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,183,211,-87,-76,-82,-136,-88,211,]),'READ':([0,1,6,14,16,20,29,32,35,37,40,63,67,68,70,71,72,83,87,96,98,106,107,108,109,114,115,116,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,158,182,183,186,197,198,201,211,215,219,220,222,225,229,232,233,237,238,240,243,245,246,248,251,254,290,295,297,300,301,327,332,341,342,],[36,36,36,36,-7,36,36,-6,-9,-8,-5,-108,36,36,-107,36,36,36,36,-144,36,36,36,36,36,-106,36,36,-155,-105,-123,-104,-122,-124,-125,-113,-118,36,-117,-111,-115,-114,-116,-119,-112,-110,36,-120,-121,36,36,36,-15,-24,36,-28,-10,36,-154,36,36,36,36,36,36,36,36,36,36,-143,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-30,-29,]),'AND':([2,8,10,11,15,17,34,41,46,47,48,49,50,51,52,53,54,55,57,59,60,61,62,64,65,66,69,73,76,77,78,79,80,81,122,145,147,188,196,206,207,208,213,236,239,241,247,249,267,309,310,311,],[-168,-83,-71,-68,-169,-69,-67,-70,-127,-141,-131,-134,-138,137,-140,-142,-126,-97,-95,-129,-128,-93,-72,-103,-102,-139,-137,-66,-133,-132,-130,-23,-100,-101,-73,-99,-109,-181,-171,-94,-98,-96,-86,-180,-74,-170,-79,-135,-66,-76,-82,-136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'value_array_element':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'arithmetic_additive_operator':([45,61,206,],[121,140,140,]),'boolean_literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'procedure_call':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'assignment_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'operator2':([61,206,],[142,142,]),'else_expression':([212,252,],[253,289,]),'iteration':([89,],[155,]),'mode':([93,111,171,181,278,302,333,],[172,199,221,228,308,323,336,]),'else_clause':([184,305,],[231,324,]),'mode_name':([93,111,171,181,278,302,333,],[159,159,159,159,159,159,159,]),'index_mode':([220,301,],[263,263,]),'bracketed_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'arithmetic_multiplicative_operator':([45,57,208,],[125,139,139,]),'statement':([0,14,98,327,332,],[14,98,98,98,98,]),'start_element':([108,],[192,]),'control_part':([6,],[82,]),'assigning_operator':([45,],[115,]),'mode_definition':([22,180,],[101,101,]),'then_expression':([144,288,314,],[212,312,330,]),'do_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'operand2':([1,20,29,67,71,83,106,108,109,115,116,130,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[57,57,57,57,57,57,57,57,57,57,57,57,208,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'result':([1,],[58,]),'call_action':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[23,62,23,23,62,62,62,62,62,62,62,23,23,62,23,62,62,62,62,62,62,62,62,23,23,62,62,62,62,62,62,62,23,62,23,62,62,62,62,62,62,62,62,62,62,62,62,62,23,23,]),'parenthesized_expression':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'closed_dyadic_operator':([45,],[113,]),'index_mode_list':([220,301,],[266,321,]),'primitive_value':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'string_slice':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'referenced_location':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'element_mode':([302,],[322,]),'procedure_definition':([105,],[186,]),'expression':([1,20,29,67,71,83,106,108,109,115,116,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[75,100,104,144,146,149,189,194,189,202,204,209,242,250,256,262,262,268,262,274,189,281,282,284,285,287,288,292,314,316,319,284,262,]),'integer_mode':([93,111,171,181,216,220,259,278,301,302,333,],[164,164,164,164,164,164,164,164,164,164,164,]),'literal_range':([219,220,225,301,],[260,264,271,264,]),'identifier':([0,1,6,7,9,14,20,22,29,39,67,68,71,72,83,87,89,93,98,106,107,108,109,111,115,116,130,139,142,143,148,157,171,178,180,181,183,198,200,211,215,216,219,220,222,225,229,232,233,235,237,240,243,245,246,248,251,254,259,278,290,295,297,300,301,302,307,327,332,333,],[33,73,33,94,95,33,73,94,73,94,73,73,73,73,73,33,156,168,33,73,73,73,73,168,73,73,73,73,73,73,33,94,168,94,94,168,33,73,94,73,73,258,73,267,73,73,33,73,33,94,73,73,73,73,73,73,73,73,258,168,73,73,73,73,267,168,94,33,33,168,]),'dereferenced_reference':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'empty':([1,6,14,87,98,148,229,327,332,],[74,86,99,86,99,86,86,99,99,]),'step_enumeration':([89,],[153,]),'procedure_statement':([0,14,98,327,332,],[35,35,35,35,35,]),'formal_parameter_list':([235,307,],[276,328,]),'step_value':([256,],[296,]),'character_literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'string_mode':([93,111,171,181,278,302,333,],[160,160,160,160,160,160,160,]),'statement_nullable':([14,98,327,332,],[97,179,334,335,]),'array_element':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'composite_mode':([93,111,171,181,278,302,333,],[170,170,170,170,170,170,170,]),'if_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'declaration_list':([7,157,],[92,218,]),'array_location':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[45,81,45,45,81,81,81,81,81,147,81,45,45,81,45,81,81,81,81,81,81,81,81,45,45,81,81,81,81,81,81,81,45,81,45,81,81,81,81,81,81,81,81,81,81,81,81,81,45,45,]),'action_statement_list':([183,233,],[230,275,]),'newmode_list':([22,180,],[103,227,]),'then_clause':([104,274,],[184,305,]),'upper_bound':([245,300,],[283,320,]),'range_enumeration':([89,],[154,]),'synonym_list':([39,200,],[110,244,]),'character_string_literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'result_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'end_value':([256,293,296,317,],[294,315,318,331,]),'for_control':([6,],[88,]),'operand0':([1,20,29,67,71,83,106,108,109,115,116,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'character_mode':([93,111,171,181,216,220,259,278,301,302,333,],[162,162,162,162,162,162,162,162,162,162,162,]),'declaration_statement':([0,14,98,327,332,],[40,40,40,40,40,]),'array_slice':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'identifier_list':([7,22,39,157,178,180,200,235,307,],[93,102,111,93,226,102,111,278,278,]),'string_element':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'right_element':([240,],[280,]),'action':([0,6,14,87,98,107,148,183,229,233,327,332,],[12,12,12,12,12,190,12,12,12,12,12,12,]),'membership_operator':([51,],[138,]),'literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'operand3':([1,20,29,67,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[55,55,55,55,55,55,55,55,55,55,55,55,207,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'builtin_call':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while_control':([6,88,],[84,152,]),'newmode_statement':([0,14,98,327,332,],[16,16,16,16,16,]),'action_statement_nullable':([6,87,148,229,],[85,151,214,272,]),'statement_list':([0,],[18,]),'synonym_definition':([39,200,],[112,112,]),'lower_bound':([116,219,220,225,301,],[203,261,261,261,261,]),'discrete_mode':([93,111,171,181,216,220,259,278,301,302,333,],[175,175,175,175,257,265,298,175,265,175,175,]),'exit_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'value_array_slice':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'array_mode':([93,111,171,181,278,302,333,],[176,176,176,176,176,176,176,]),'synonym_statement':([0,14,98,327,332,],[32,32,32,32,32,]),'left_element':([108,],[193,]),'result_spec':([306,],[325,]),'return_action':([0,6,14,87,98,107,148,183,229,233,327,332,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'elsif_expression':([212,],[252,]),'operator1':([51,],[130,]),'program':([0,],[31,]),'parameter_list':([106,109,237,],[187,195,279,]),'monadic_operator':([1,20,29,67,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'string_length':([224,],[269,]),'conditional_expression':([1,20,29,67,71,83,106,108,109,115,116,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'boolean_mode':([93,111,171,181,216,220,259,278,301,302,333,],[163,163,163,163,163,163,163,163,163,163,163,]),'discrete_range_mode':([93,111,171,181,216,220,259,278,301,302,333,],[177,177,177,177,177,177,177,177,177,177,177,]),'initialization':([172,],[223,]),'operand1':([1,20,29,67,71,83,106,108,109,115,116,130,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[61,61,61,61,61,61,61,61,61,61,61,206,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'expression_list':([116,143,246,],[205,210,286,]),'action_statement':([0,6,14,87,98,148,183,229,233,327,332,],[37,87,37,87,37,87,229,87,229,37,37,]),'builtin_name':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'declaration':([7,157,],[91,91,]),'string_concatenation_operator':([45,61,206,],[117,141,141,]),'empty_literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'formal_parameter':([235,307,],[277,277,]),'integer_literal':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,224,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,270,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'relational_operator':([51,],[132,]),'location':([0,1,6,14,20,29,67,68,71,72,83,87,98,106,107,108,109,115,116,130,139,142,143,148,183,198,211,215,219,220,222,225,229,232,233,237,240,243,245,246,248,251,254,290,295,297,300,301,327,332,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operand4':([1,20,29,67,68,71,83,106,108,109,115,116,130,139,142,143,198,211,215,219,220,222,225,232,237,240,243,245,246,248,251,254,290,295,297,300,301,],[80,80,80,80,145,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'reference_mode':([93,111,171,181,278,302,333,],[161,161,161,161,161,161,161,]),'discrete_mode_name':([93,111,171,181,216,220,259,278,301,302,333,],[165,165,165,165,165,165,165,165,165,165,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',416),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',420),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',428),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',433),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',437),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',441),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',442),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',458),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',465),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',466),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',473),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',474),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',482),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',483),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',490),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',491),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',492),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',503),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',504),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',505),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',509),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',510),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',514),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',518),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',519),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',533),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',534),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',538),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',543),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',548),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',560),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',567),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',571),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',575),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',579),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',587),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',591),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',596),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',600),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',604),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',615),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',616),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',621),
  ('action -> assignment_action','action',1,'p_action','Parser.py',622),
  ('action -> call_action','action',1,'p_action','Parser.py',623),
  ('action -> exit_action','action',1,'p_action','Parser.py',624),
  ('action -> result_action','action',1,'p_action','Parser.py',625),
  ('action -> return_action','action',1,'p_action','Parser.py',626),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',630),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',635),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',639),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',640),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',644),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',650),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',651),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',659),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',661),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',672),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',684),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',685),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',702),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',703),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',707),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',708),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',713),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',724),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',725),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',729),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',739),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',747),
  ('result -> expression','result',1,'p_result','Parser.py',751),
  ('result -> empty','result',1,'p_result','Parser.py',752),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',755),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',763),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',764),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',771),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',772),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',773),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',777),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',781),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',786),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',789),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',801),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',805),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',809),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',810),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',817),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',823),
]

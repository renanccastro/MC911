
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0F2E256B55EA7B9A5E14DFB6A690CAFC'
    
_lr_action_items = {'READ':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[1,-9,-5,-6,1,1,-8,1,1,1,-7,1,1,1,1,-108,1,-107,1,1,1,1,-144,1,1,-116,-105,1,-114,1,-155,-115,-104,-106,-28,-125,1,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,1,-112,-113,1,1,-24,1,1,-15,-10,1,-154,1,-143,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-30,-29,]),'IN':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,92,124,129,138,140,160,169,208,211,213,214,215,216,217,227,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,141,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-23,-73,-171,-181,-99,-109,226,-170,-74,-180,-94,-98,-96,-86,265,-79,-135,-66,-76,-82,-136,]),'WHILE':([14,15,16,29,30,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,100,124,129,138,140,160,167,168,170,179,187,188,192,193,195,196,208,211,213,214,215,216,217,247,261,263,288,296,299,303,308,310,311,319,320,322,323,325,335,],[-68,-168,-169,-71,96,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,96,-73,-171,-181,-99,-109,-195,-197,-196,-44,-47,-42,-49,-45,-43,-48,-170,-74,-180,-94,-98,-96,-86,-79,-135,-205,-76,-87,-201,-204,-51,-50,-82,-88,-136,-203,-199,-200,-198,]),'NUM':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[35,-9,-5,-6,35,35,-8,35,35,35,-7,35,35,35,35,-108,35,-107,35,35,35,35,-144,35,35,-116,-105,35,-114,35,-155,-115,-104,-106,-28,-125,35,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,35,-112,-113,35,35,-24,35,35,-15,-10,35,-154,35,-143,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-30,-29,]),'ARRAY':([91,92,110,112,164,185,222,254,306,331,],[-21,-23,181,181,181,181,-22,181,181,181,]),'CHAR':([91,92,110,112,164,185,222,226,236,254,265,305,306,331,],[-21,-23,192,192,192,192,-22,192,192,192,192,192,192,192,]),'COMMA':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,91,92,95,109,113,124,128,129,138,140,160,179,180,182,183,184,186,187,188,189,191,192,193,195,196,197,203,208,211,213,214,215,216,217,220,223,238,242,243,247,253,261,271,272,273,282,283,284,286,288,291,296,308,309,310,311,316,319,320,328,329,330,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,162,-23,165,178,201,-73,207,-171,-181,-99,-109,-44,-57,-38,-56,-39,-41,-47,-42,-40,-37,-49,-45,-43,-48,-19,246,-170,-74,-180,-94,-98,-96,-86,246,-27,-55,-18,-14,-79,290,-135,-63,305,-64,-20,-13,246,-54,-76,-34,-87,-51,-58,-50,-82,-33,-88,-136,-60,-65,-52,]),'END':([5,7,13,22,38,86,87,90,137,161,163,177,198,209,313,332,333,338,341,344,],[-9,-5,-6,-8,-7,-207,-4,-144,-28,-3,-24,-15,-10,-143,-207,337,-207,342,-30,-29,]),'DIVIDE':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,63,65,66,67,69,71,72,73,75,77,78,79,80,81,83,84,124,129,131,138,140,160,208,211,213,215,216,217,247,261,275,288,311,320,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,116,-83,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,116,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-23,-181,-99,-109,-170,-74,-180,-98,116,-86,-79,-135,-66,-76,-82,-136,]),'FOR':([30,],[97,]),'DCL':([0,5,7,13,20,22,38,86,90,137,163,177,198,209,313,333,341,344,],[39,-9,-5,-6,39,-8,-7,39,-144,-28,-24,-15,-10,-143,39,39,-30,-29,]),'INT':([91,92,110,112,164,185,222,226,236,254,265,305,306,331,],[-21,-23,187,187,187,187,-22,187,187,187,187,187,187,187,]),'RETURNS':([289,],[312,]),'REF':([91,92,110,112,164,185,222,254,306,331,],[-21,-23,185,185,185,185,-22,185,185,185,]),'AND':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,149,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'ID':([0,5,7,13,18,20,22,26,28,30,32,34,38,39,40,46,47,48,50,59,60,64,74,76,82,86,90,91,92,96,97,99,110,112,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,162,163,164,165,173,175,177,178,185,198,199,201,206,207,209,210,212,219,222,225,226,229,232,233,236,237,240,241,244,246,248,254,255,256,260,265,290,294,298,300,305,306,307,313,331,333,341,344,],[9,-9,-5,-6,56,9,-8,88,92,56,56,56,-7,92,92,56,131,56,56,-108,56,-107,56,56,56,9,-144,-21,-23,56,92,56,92,92,-116,-105,56,-114,56,-155,-115,-104,-106,-28,-125,56,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,56,-112,-113,56,56,92,-24,92,92,56,56,-15,92,92,-10,56,92,-154,56,-143,56,92,56,-22,56,92,56,56,56,56,56,56,56,56,56,56,92,56,56,56,92,92,56,56,56,56,92,56,9,92,9,-30,-29,]),'OR':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,152,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'TO':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,262,288,296,301,302,311,319,320,321,324,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,300,-76,-87,300,300,-82,-88,-136,-202,300,]),'OD':([30,90,99,101,103,171,173,209,228,],[-207,-144,-207,-167,174,-166,-207,-143,266,]),'LENGTH':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[12,-9,-5,-6,12,12,-8,12,12,12,-7,12,12,12,12,-108,12,-107,12,12,12,12,-144,12,12,-116,-105,12,-114,12,-155,-115,-104,-106,-28,-125,12,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,12,-112,-113,12,12,-24,12,12,-15,-10,12,-154,12,-143,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-30,-29,]),'FI':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,90,99,101,124,129,138,140,160,171,176,208,209,211,213,214,215,216,217,229,230,234,247,258,261,267,268,288,292,295,296,304,311,319,320,326,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-144,-207,-167,-73,-171,-181,-99,-109,-166,231,-170,-143,-74,-180,-94,-98,-96,-86,-207,-161,270,-79,296,-135,-165,-162,-76,-90,319,-87,-164,-82,-88,-136,-163,]),'LTEQUAL':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,145,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'MODULO':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,63,65,66,67,69,71,72,73,75,77,78,79,80,81,83,84,124,129,131,138,140,160,208,211,213,215,216,217,247,261,275,288,311,320,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,127,-83,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,127,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-23,-181,-99,-109,-170,-74,-180,-98,127,-86,-79,-135,-66,-76,-82,-136,]),'ELSE':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,90,99,101,124,129,138,140,160,171,176,208,209,211,213,214,215,216,217,218,229,230,247,257,259,261,267,288,296,304,311,317,319,320,334,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-144,-207,-167,-73,-171,-181,-99,-109,-166,232,-170,-143,-74,-180,-94,-98,-96,-86,255,-207,-161,-79,255,-89,-135,-165,-76,-87,232,-82,-91,-88,-136,-92,]),'ICONST':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,239,240,241,244,246,248,255,256,260,294,298,300,305,307,],[53,53,53,53,53,53,-108,53,-107,53,53,53,-116,-105,53,-114,53,-155,-115,-104,-106,-125,53,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,53,-112,-113,53,53,53,-154,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'TRUE':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[75,75,75,75,75,75,-108,75,-107,75,75,75,-116,-105,75,-114,75,-155,-115,-104,-106,-125,75,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,75,-112,-113,75,75,75,-154,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'CCONST':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[77,77,77,77,77,77,-108,77,-107,77,77,77,-116,-105,77,-114,77,-155,-115,-104,-106,-125,77,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,77,-112,-113,77,77,77,-154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'RBRACKET':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,179,187,188,192,193,195,196,203,204,208,211,213,214,215,216,217,220,221,247,250,251,261,271,272,273,274,279,280,284,285,286,287,288,296,297,308,310,311,319,320,327,330,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-44,-47,-42,-49,-45,-43,-48,-80,247,-170,-74,-180,-94,-98,-96,-86,-80,261,-79,-78,288,-135,-63,-61,-64,306,309,-59,-80,-81,-54,311,-76,-87,320,-51,-50,-82,-88,-136,-62,-52,]),'RESULT':([0,5,7,13,20,22,30,38,47,86,90,99,137,163,173,175,177,198,209,229,232,313,333,341,344,],[18,-9,-5,-6,18,-8,18,-7,18,18,-144,18,-28,-24,18,18,-15,-10,-143,18,18,18,18,-30,-29,]),'BOOL':([91,92,110,112,164,185,222,226,236,254,265,305,306,331,],[-21,-23,196,196,196,196,-22,196,196,196,196,196,196,196,]),'MINUS':([6,9,14,15,16,18,29,31,32,33,34,37,42,43,44,46,48,50,52,53,54,55,56,57,58,61,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,96,114,116,118,119,120,121,122,124,125,127,129,131,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,199,206,207,208,210,211,213,214,215,216,217,219,225,233,236,237,240,241,244,246,247,248,255,256,260,261,275,288,294,298,300,305,307,311,320,],[-66,-23,-68,-168,-169,64,-71,-72,64,-69,64,-67,-70,122,-83,64,64,64,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,-95,122,-101,-72,-132,64,-138,64,-140,-103,-134,-129,-141,-97,-130,64,-116,-105,64,-114,64,-155,-115,-73,-104,-106,-171,-23,-181,-99,-125,64,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,64,-112,-113,64,64,-109,64,-154,64,-170,64,-74,-180,122,-98,-96,-86,64,64,64,64,64,64,64,64,64,-79,64,64,64,64,-135,-66,-76,64,64,64,64,64,-82,-136,]),'NOT':([18,32,34,46,48,50,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[59,59,59,59,59,59,59,59,59,-116,-105,59,-114,59,-155,-115,-104,-106,-125,59,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,59,-112,-113,59,59,59,-154,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'PRINT':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[11,-9,-5,-6,11,11,-8,11,11,11,-7,11,11,11,11,-108,11,-107,11,11,11,11,-144,11,11,-116,-105,11,-114,11,-155,-115,-104,-106,-28,-125,11,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,11,-112,-113,11,11,-24,11,11,-15,-10,11,-154,11,-143,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-30,-29,]),'SYN':([0,5,7,13,20,22,38,86,90,137,163,177,198,209,313,333,341,344,],[40,-9,-5,-6,40,-8,-7,40,-144,-28,-24,-15,-10,-143,40,40,-30,-29,]),'PROC':([49,],[136,]),'ABS':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[23,-9,-5,-6,23,23,-8,23,23,23,-7,23,23,23,23,-108,23,-107,23,23,23,23,-144,23,23,-116,-105,23,-114,23,-155,-115,-104,-106,-28,-125,23,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,23,-112,-113,23,23,-24,23,23,-15,-10,23,-154,23,-143,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-30,-29,]),'LOWER':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[24,-9,-5,-6,24,24,-8,24,24,24,-7,24,24,24,24,-108,24,-107,24,24,24,24,-144,24,24,-116,-105,24,-114,24,-155,-115,-104,-106,-28,-125,24,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,24,-112,-113,24,24,-24,24,24,-15,-10,24,-154,24,-143,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,-29,]),'EXIT':([0,5,7,13,20,22,30,38,47,86,90,99,137,163,173,175,177,198,209,229,232,313,333,341,344,],[26,-9,-5,-6,26,-8,26,-7,26,26,-144,26,-28,-24,26,26,-15,-10,-143,26,26,26,26,-30,-29,]),'PLUS':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,131,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,119,-83,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,-95,119,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-23,-181,-99,-109,-170,-74,-180,119,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'TYPE':([0,5,7,13,20,22,38,86,90,137,163,177,198,209,313,333,341,344,],[28,-9,-5,-6,28,-8,-7,28,-144,-28,-24,-15,-10,-143,28,28,-30,-29,]),'THEN':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,107,124,129,138,140,158,160,208,211,213,214,215,216,217,247,261,269,288,293,296,311,318,319,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,175,-73,-171,-181,-99,219,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,175,-76,219,-87,-82,219,-88,-136,]),'TIMES':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,63,65,66,67,69,71,72,73,75,77,78,79,80,81,83,84,124,129,131,138,140,160,208,211,213,215,216,217,247,261,275,288,311,320,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,125,-83,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,125,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-23,-181,-99,-109,-170,-74,-180,-98,125,-86,-79,-135,-66,-76,-82,-136,]),'RPAREN':([14,15,16,29,33,37,42,44,46,50,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,92,124,128,129,130,138,139,140,157,160,179,180,182,183,184,186,187,188,189,191,192,193,195,196,208,211,213,214,215,216,217,238,247,249,252,253,261,278,281,286,288,291,296,308,309,310,311,315,316,319,320,328,329,330,336,339,],[-68,-168,-169,-71,-69,-67,-70,-83,129,138,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-23,-73,-182,-171,208,-181,213,-99,217,-109,-44,-57,-38,-56,-39,-41,-47,-42,-40,-37,-49,-45,-43,-48,-170,-74,-180,-94,-98,-96,-86,-55,-79,-183,289,-31,-135,308,310,-54,-76,-34,-87,-51,-58,-50,-82,-32,-33,-88,-136,-60,-65,-52,340,343,]),'BY':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,262,288,296,311,319,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,298,-76,-87,-82,-88,-136,]),'LESS':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,148,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'DO':([0,5,7,13,20,22,30,38,47,86,90,99,137,163,173,175,177,198,209,229,232,313,333,341,344,],[30,-9,-5,-6,30,-8,30,-7,30,30,-144,30,-28,-24,30,30,-15,-10,-143,30,30,30,30,-30,-29,]),'LBRACKET':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,131,133,135,138,140,160,181,190,208,211,213,214,215,216,217,247,261,275,288,296,311,319,320,],[48,-23,-68,-168,-169,-71,-72,-69,-67,-70,120,-83,-102,-137,-100,48,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,120,-72,-132,-138,-140,159,-134,-129,-141,-97,-130,-73,-171,-23,-75,211,-181,-99,120,236,239,-170,-74,-180,-94,-98,-96,-86,-79,-135,48,-76,-87,-82,-88,-136,]),'RETURN':([0,5,7,13,20,22,30,38,47,86,90,99,137,163,173,175,177,198,209,229,232,313,333,341,344,],[32,-9,-5,-6,32,-8,32,-7,32,32,-144,32,-28,-24,32,32,-15,-10,-143,32,32,32,32,-30,-29,]),'SCONST':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[66,66,66,66,66,66,-108,66,-107,66,66,66,-116,-105,66,-114,66,-155,-115,-104,-106,-125,66,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,66,-112,-113,66,66,66,-154,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FALSE':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[57,57,57,57,57,57,-108,57,-107,57,57,57,-116,-105,57,-114,57,-155,-115,-104,-106,-125,57,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,57,-112,-113,57,57,57,-154,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'SEMI':([2,10,14,15,16,17,19,27,29,31,32,33,36,37,41,42,44,45,51,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,88,89,92,93,95,98,100,102,104,105,106,108,109,111,113,124,129,132,138,140,160,166,167,168,170,172,174,179,180,182,183,184,186,187,188,189,191,192,193,195,196,197,202,208,211,213,214,215,216,217,223,224,231,235,238,242,243,245,247,261,263,266,270,282,283,288,289,296,299,303,308,309,310,311,314,319,320,322,323,325,328,329,335,337,340,342,343,],[-148,-145,-68,-168,-169,-151,-146,90,-71,-147,-207,-69,-150,-67,-149,-70,-83,-152,-189,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-185,-184,-23,163,-25,-194,-193,173,-187,-188,-186,177,-16,198,-11,-73,-171,209,-181,-99,-109,-206,-195,-197,-196,-192,-191,-44,-57,-38,-56,-39,-41,-47,-42,-40,-37,-49,-45,-43,-48,-19,-153,-170,-74,-180,-94,-98,-96,-86,-27,-26,-160,-17,-55,-18,-14,-12,-79,-135,-205,-190,-159,-20,-13,-76,313,-87,-201,-204,-51,-58,-50,-82,333,-88,-136,-203,-199,-200,-60,-65,-198,341,-36,344,-35,]),'LPAREN':([1,4,8,9,11,12,18,21,23,24,32,34,35,46,48,50,56,59,60,64,74,76,92,96,114,116,118,119,120,121,122,125,127,131,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,179,182,186,187,188,192,193,194,195,196,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,263,264,271,275,294,298,300,303,305,307,308,310,312,],[-178,46,-175,50,-179,-177,74,-173,-172,-176,74,74,-174,74,74,74,50,-108,74,-107,74,74,-23,74,-116,-105,74,-114,74,-155,-115,-104,-106,50,212,-125,74,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,74,-112,-113,74,74,-44,237,-46,-47,-42,-49,-45,240,-43,-48,74,-154,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,237,-46,237,-46,74,74,74,237,74,74,-51,-50,331,]),'NOTEQ':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,151,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'IF':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,74,76,86,90,96,99,118,120,121,137,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[34,-9,-5,-6,76,34,-8,34,76,76,-7,76,34,76,76,76,76,34,-144,76,34,76,76,-155,-28,76,-24,34,34,-15,-10,76,-154,76,-143,76,76,76,34,34,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,34,34,-30,-29,]),'GREATER':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,144,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'ASC':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[21,-9,-5,-6,21,21,-8,21,21,21,-7,21,21,21,21,-108,21,-107,21,21,21,21,-144,21,21,-116,-105,21,-114,21,-155,-115,-104,-106,-28,-125,21,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,21,-112,-113,21,21,-24,21,21,-15,-10,21,-154,21,-143,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-30,-29,]),'GTEQUAL':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,143,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'CONCAT':([6,9,14,15,16,29,31,33,37,42,43,44,52,53,54,55,56,57,58,61,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,131,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,114,-83,-102,-137,-100,-66,-23,-139,-133,-127,-126,-128,-142,-131,-95,114,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-23,-181,-99,-109,-170,-74,-180,114,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'ELSIF':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,90,99,101,124,129,138,140,160,171,176,208,209,211,213,214,215,216,217,218,229,230,247,257,259,261,267,288,296,304,311,317,319,320,334,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-144,-207,-167,-73,-171,-181,-99,-109,-166,233,-170,-143,-74,-180,-94,-98,-96,-86,256,-207,-161,-79,294,-89,-135,-165,-76,-87,233,-82,-91,-88,-136,-92,]),'UPPER':([0,5,7,13,18,20,22,30,32,34,38,46,47,48,50,59,60,64,74,76,82,86,90,96,99,114,116,118,119,120,121,122,125,127,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,163,173,175,177,198,199,206,207,209,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,341,344,],[8,-9,-5,-6,8,8,-8,8,8,8,-7,8,8,8,8,-108,8,-107,8,8,8,8,-144,8,8,-116,-105,8,-114,8,-155,-115,-104,-106,-28,-125,8,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,8,-112,-113,8,8,-24,8,8,-15,-10,8,-154,8,-143,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-30,-29,]),'DOWN':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,92,124,129,138,140,160,169,208,211,213,214,215,216,217,247,261,262,288,296,301,311,319,320,321,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-23,-73,-171,-181,-99,-109,227,-170,-74,-180,-94,-98,-96,-86,-79,-135,302,-76,-87,324,-82,-88,-136,-202,]),'ASSIGN':([6,9,14,15,16,29,31,33,37,42,43,44,55,56,91,92,94,112,114,115,116,117,119,122,123,124,125,126,127,129,131,138,169,179,180,182,183,184,186,187,188,189,191,192,193,195,196,197,200,208,211,213,222,238,247,288,308,309,310,311,328,329,],[-66,-23,-68,-168,-169,-71,-72,-69,-67,-70,121,-83,-66,-23,-21,-23,164,199,-116,-158,-105,-157,-114,-115,206,-73,-104,-156,-106,-171,-23,-181,225,-44,-57,-38,-56,-39,-41,-47,-42,-40,-37,-49,-45,-43,-48,241,244,-170,-74,-180,-22,-55,-79,-76,-51,-58,-50,-82,-60,-65,]),'EQUAL':([14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,138,140,160,208,211,213,214,215,216,217,247,261,275,288,311,320,],[-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,147,-126,-128,-142,-131,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-181,-99,-109,-170,-74,-180,-94,-98,-96,-86,-79,-135,-66,-76,-82,-136,]),'COLON':([6,9,14,15,16,29,33,37,42,44,52,53,54,55,56,57,58,61,62,63,65,66,67,68,69,70,71,72,73,75,77,78,79,80,81,83,84,124,129,133,134,138,140,160,203,205,208,211,213,214,215,216,217,220,247,261,275,276,277,288,296,311,319,320,],[47,49,-68,-168,-169,-71,-69,-67,-70,-83,-102,-137,-100,-66,-23,-139,-133,-127,-84,-126,-128,-142,-131,-85,-95,-93,-101,-72,-132,-138,-140,-103,-134,-129,-141,-97,-130,-73,-171,-77,210,-181,-99,-109,-53,248,-170,-74,-180,-94,-98,-96,-86,260,-79,-135,-66,307,-53,-76,-87,-82,-88,-136,]),'NULL':([18,32,34,46,48,50,59,60,64,74,76,96,114,116,118,119,120,121,122,125,127,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,199,206,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[81,81,81,81,81,81,-108,81,-107,81,81,81,-116,-105,81,-114,81,-155,-115,-104,-106,-125,81,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,81,-112,-113,81,81,81,-154,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ARROW':([6,9,14,15,16,18,29,31,32,33,34,37,42,43,44,46,48,50,55,56,59,60,64,71,72,74,76,96,114,116,118,119,120,121,122,124,125,127,129,131,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,199,206,207,208,210,211,213,219,225,233,236,237,240,241,244,246,247,248,255,256,260,275,288,294,298,300,305,307,311,],[-66,-23,-68,-168,-169,82,-71,-72,82,-69,82,-67,-70,124,-83,82,82,82,-66,-23,-108,82,-107,124,-72,82,82,82,-116,-105,82,-114,82,-155,-115,-73,-104,-106,-171,-23,-181,-125,82,-122,-121,-124,-110,-119,-123,-117,-111,-120,-118,82,-112,-113,82,82,124,82,-154,82,-170,82,-74,-180,82,82,82,82,82,82,82,82,82,-79,82,82,82,82,-66,-76,82,82,82,82,82,-82,]),'$end':([3,5,7,13,20,22,25,38,85,86,87,90,137,161,163,177,198,209,341,344,],[-1,-9,-5,-6,-207,-8,0,-7,-2,-207,-4,-144,-28,-3,-24,-15,-10,-143,-30,-29,]),'LOC':([92,179,180,182,183,184,186,187,188,189,191,192,193,195,196,238,291,308,309,310,328,329,336,],[-23,-44,-57,-38,-56,-39,-41,-47,-42,-40,-37,-49,-45,-43,-48,-55,316,-51,-58,-50,-60,-65,339,]),'CHARS':([91,92,110,112,164,185,222,254,306,331,],[-21,-23,190,190,190,190,-22,190,190,190,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dereferenced_reference':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'array_mode':([110,112,164,185,254,306,331,],[180,180,180,180,180,180,180,]),'bracketed_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'string_length':([239,],[279,]),'builtin_name':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'procedure_statement':([0,20,86,313,333,],[5,5,5,5,5,]),'discrete_mode_name':([110,112,164,185,226,236,254,265,305,306,331,],[194,194,194,194,194,194,194,194,194,194,194,]),'monadic_operator':([18,32,34,46,48,50,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'operand4':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[54,54,54,54,54,54,140,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'identifier':([0,18,20,28,30,32,34,39,40,46,47,48,50,60,74,76,82,86,96,97,99,110,112,118,120,142,153,156,159,162,164,165,173,175,178,185,199,201,207,210,212,219,225,226,229,232,233,236,237,240,241,244,246,248,254,255,256,260,265,290,294,298,300,305,306,307,313,331,333,],[6,55,6,91,6,55,55,91,91,55,55,55,55,55,55,55,55,6,55,169,6,186,186,55,55,55,55,55,55,91,186,91,6,6,91,186,55,91,55,55,91,55,55,264,6,6,55,275,55,55,55,55,55,55,186,55,55,55,264,91,55,55,55,275,186,55,6,186,6,]),'array_element':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'formal_parameter':([212,290,],[253,253,]),'integer_mode':([110,112,164,185,226,236,254,265,305,306,331,],[188,188,188,188,188,188,188,188,188,188,188,]),'procedure_definition':([49,],[137,]),'declaration':([39,178,],[109,109,]),'index_mode':([236,305,],[272,272,]),'string_concatenation_operator':([43,70,214,],[115,155,155,]),'synonym_statement':([0,20,86,313,333,],[13,13,13,13,13,]),'string_element':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'discrete_mode':([110,112,164,185,226,236,254,265,305,306,331,],[182,182,182,182,263,271,182,303,271,182,182,]),'builtin_call':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'operator2':([70,214,],[156,156,]),'synonym_definition':([40,201,],[113,113,]),'operand0':([18,32,34,46,48,50,74,76,96,118,120,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'if_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'boolean_literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'string_mode':([110,112,164,185,254,306,331,],[183,183,183,183,183,183,183,]),'newmode_list':([28,165,],[93,224,]),'literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'value_array_slice':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'else_clause':([176,304,],[234,326,]),'formal_parameter_list':([212,290,],[252,315,]),'operand2':([18,32,34,46,48,50,74,76,96,118,120,142,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[69,69,69,69,69,69,69,69,69,69,69,69,216,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'action':([0,20,30,47,86,99,173,175,229,232,313,333,],[27,27,27,132,27,27,27,27,27,27,27,27,]),'action_statement':([0,20,30,86,99,173,175,229,232,313,333,],[22,22,99,22,99,99,229,99,229,22,22,]),'left_element':([48,],[134,]),'action_statement_list':([175,232,],[230,268,]),'for_control':([30,],[100,]),'step_enumeration':([97,],[170,]),'composite_mode':([110,112,164,185,254,306,331,],[189,189,189,189,189,189,189,]),'upper_bound':([248,307,],[287,330,]),'empty':([20,30,32,86,99,173,229,313,333,],[87,101,105,87,101,101,101,87,87,]),'parameter_list':([46,50,207,],[130,139,249,]),'return_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'mode_name':([110,112,164,185,254,306,331,],[191,191,191,191,191,191,191,]),'lower_bound':([120,236,237,240,305,],[205,276,276,276,276,]),'element_mode':([306,],[328,]),'discrete_range_mode':([110,112,164,185,226,236,254,265,305,306,331,],[193,193,193,193,193,193,193,193,193,193,193,]),'primitive_value':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'start_element':([48,],[135,]),'step_value':([262,],[301,]),'referenced_location':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'procedure_call':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'arithmetic_additive_operator':([43,70,214,],[126,154,154,]),'mode':([110,112,164,185,254,306,331,],[197,200,223,238,291,329,336,]),'identifier_list':([28,39,40,162,165,178,201,212,290,],[94,110,112,222,94,110,112,254,254,]),'integer_literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,239,240,241,244,246,248,255,256,260,294,298,300,305,307,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,280,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'elsif_expression':([218,],[257,]),'exit_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'expression':([18,32,34,46,48,50,74,76,96,118,120,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[51,104,107,128,133,128,157,158,166,202,203,220,243,128,250,259,262,269,277,277,277,282,283,284,286,292,293,297,318,321,322,277,286,]),'declaration_list':([39,178,],[108,235,]),'statement_list':([0,],[3,]),'end_value':([262,301,302,324,],[299,323,325,335,]),'then_expression':([158,293,318,],[218,317,334,]),'declaration_statement':([0,20,86,313,333,],[7,7,7,7,7,]),'membership_operator':([62,],[150,]),'expression_list':([120,159,246,],[204,221,285,]),'literal_range':([236,237,240,305,],[273,278,281,273,]),'statement_nullable':([20,86,313,333,],[85,161,332,338,]),'operator1':([62,],[142,]),'empty_literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_slice':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'character_string_literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_slice':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'while_control':([30,100,],[98,172,]),'relational_operator':([62,],[146,]),'mode_definition':([28,165,],[95,95,]),'operand1':([18,32,34,46,48,50,74,76,96,118,120,142,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[70,70,70,70,70,70,70,70,70,70,70,214,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'boolean_mode':([110,112,164,185,226,236,254,265,305,306,331,],[195,195,195,195,195,195,195,195,195,195,195,]),'parenthesized_expression':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'synonym_list':([40,201,],[111,245,]),'assignment_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'statement':([0,20,86,313,333,],[20,86,86,86,86,]),'else_expression':([218,257,],[258,295,]),'range_enumeration':([97,],[168,]),'arithmetic_multiplicative_operator':([43,69,216,],[117,153,153,]),'character_mode':([110,112,164,185,226,236,254,265,305,306,331,],[179,179,179,179,179,179,179,179,179,179,179,]),'program':([0,],[25,]),'conditional_expression':([18,32,34,46,48,50,74,76,96,118,120,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'reference_mode':([110,112,164,185,254,306,331,],[184,184,184,184,184,184,184,]),'operand3':([18,32,34,46,48,50,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[83,83,83,83,83,83,83,83,83,83,83,83,215,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'initialization':([197,],[242,]),'call_action':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[31,72,31,31,72,72,72,31,72,72,72,72,72,72,31,72,31,72,72,72,72,72,72,31,31,72,72,72,72,72,31,31,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,31,31,]),'character_literal':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'index_mode_list':([236,305,],[274,327,]),'iteration':([97,],[167,]),'value_array_element':([18,32,34,46,48,50,60,74,76,96,118,120,142,153,156,159,199,207,210,219,225,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'assigning_operator':([43,],[118,]),'newmode_statement':([0,20,86,313,333,],[38,38,38,38,38,]),'result_spec':([289,],[314,]),'control_part':([30,],[102,]),'then_clause':([107,269,],[176,304,]),'result_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'closed_dyadic_operator':([43,],[123,]),'array_location':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[43,71,43,43,71,71,71,43,71,71,71,71,71,160,43,71,43,71,71,71,71,71,71,43,43,71,71,71,71,71,43,43,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,43,43,]),'result':([32,],[106,]),'right_element':([210,],[251,]),'location':([0,18,20,30,32,34,46,47,48,50,60,74,76,82,86,96,99,118,120,142,153,156,159,173,175,199,207,210,219,225,229,232,233,236,237,240,241,244,246,248,255,256,260,294,298,300,305,307,313,333,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'action_statement_nullable':([30,99,173,229,],[103,171,228,267,]),'label_id':([26,],[89,]),'do_action':([0,20,30,47,86,99,173,175,229,232,313,333,],[45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',61),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',65),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',76),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',77),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',88),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',89),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',90),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',91),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',92),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',101),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',105),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',115),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',116),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',130),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',134),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',135),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',143),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',144),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',148),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',152),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',153),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',161),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',172),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',176),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',177),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',185),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',196),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',200),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',201),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',205),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',206),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',214),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',215),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',222),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',227),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',228),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',229),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',230),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',234),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',242),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',243),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',244),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',245),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',249),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',253),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',257),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',261),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',270),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',271),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',275),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',279),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',283),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',290),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',297),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',298),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',302),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',306),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',310),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',314),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',315),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',323),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',324),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',328),
  ('location -> identifier','location',1,'p_location','Parser.py',339),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',340),
  ('location -> string_element','location',1,'p_location','Parser.py',341),
  ('location -> string_slice','location',1,'p_location','Parser.py',342),
  ('location -> array_element','location',1,'p_location','Parser.py',343),
  ('location -> array_slice','location',1,'p_location','Parser.py',344),
  ('location -> call_action','location',1,'p_location','Parser.py',345),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',349),
  ('string_element -> identifier LBRACKET start_element LBRACKET','string_element',4,'p_string_element','Parser.py',353),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',357),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',361),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',365),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',369),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',373),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',377),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',378),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',385),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',389),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',398),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',399),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',403),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',412),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',416),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',420),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',424),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',425),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',440),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',441),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',448),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',449),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',456),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',457),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',465),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',466),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',473),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',474),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',475),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',486),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',487),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',488),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',492),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',493),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',497),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',501),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',502),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',506),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',507),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',511),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',512),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',516),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',520),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',521),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',531),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',543),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',544),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',545),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',546),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',550),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',551),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',552),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',553),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',554),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',558),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',562),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',570),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',574),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',575),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',579),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',583),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',598),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',599),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',604),
  ('action -> assignment_action','action',1,'p_action','Parser.py',605),
  ('action -> call_action','action',1,'p_action','Parser.py',606),
  ('action -> exit_action','action',1,'p_action','Parser.py',607),
  ('action -> result_action','action',1,'p_action','Parser.py',608),
  ('action -> return_action','action',1,'p_action','Parser.py',609),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',613),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',614),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',618),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',622),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',623),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',627),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',628),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',629),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',633),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',634),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',638),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',642),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',643),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',644),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',655),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',666),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',667),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',683),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',684),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',688),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',689),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',694),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',695),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',696),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',697),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',698),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',699),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',700),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',701),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',705),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',706),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',710),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',711),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',719),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',723),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',727),
  ('result -> expression','result',1,'p_result','Parser.py',731),
  ('result -> empty','result',1,'p_result','Parser.py',732),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',735),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',743),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',744),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',751),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',752),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',753),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',757),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',761),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',762),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',766),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',767),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',768),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',769),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',781),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',785),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',789),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',790),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',797),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',803),
]

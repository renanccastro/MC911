
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT TYPE IF DOWN ABS IN ASC EXIT ELSE TO REF SYN BY THEN PROC LENGTH RESULT INT ELSIF READ NUM BOOL OD CHAR FALSE TRUE FOR DCL UPPER DO RETURNS LOC LOWER NULL PRINT FI RETURN END CHARS ARRAY WHILEprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n                    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'DIVIDE':([1,3,7,9,12,18,28,32,35,38,50,52,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,171,174,196,211,212,213,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,92,-71,-69,-72,-78,92,-98,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-23,-177,-167,92,-93,-81,-176,-74,-166,-68,-130,-136,-77,-131,]),'ELSE':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,107,113,115,154,168,169,174,190,196,211,212,213,216,219,224,225,226,227,230,239,255,259,261,262,266,289,294,301,312,313,315,329,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-140,-202,-163,-104,-94,220,-177,-162,-167,-91,-93,-81,258,-89,-202,-157,-139,-176,-74,-166,-130,258,-84,-136,-161,-82,220,-77,-131,-83,-86,-87,]),'FI':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,107,113,115,154,168,169,174,190,196,211,212,213,219,223,224,225,226,227,230,239,255,257,262,263,266,289,290,291,294,301,312,313,316,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-140,-202,-163,-104,-94,221,-177,-162,-167,-91,-93,-81,-89,265,-202,-157,-139,-176,-74,-166,-130,289,-136,-158,-161,-82,-85,313,-160,-77,-131,-83,-159,]),'LOWER':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[17,-6,17,-5,17,17,-8,17,-9,-7,17,17,17,17,-102,-103,17,17,17,-119,17,-100,-101,-151,-118,-117,17,-99,-140,17,17,17,17,-15,-115,-116,17,17,17,-120,-109,-108,-107,17,-106,-113,-112,-105,-114,-110,-111,17,-28,-150,-24,17,-10,17,17,17,17,17,17,17,17,17,-139,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-32,-31,-30,-29,]),'ASSIGN':([1,3,7,9,12,18,28,32,35,38,44,45,55,58,87,88,90,91,92,93,95,96,97,99,100,106,119,128,130,133,134,135,136,137,138,139,140,141,142,144,145,146,171,174,194,196,200,202,208,227,230,239,282,286,287,301,308,309,],[-165,-164,-68,-70,-23,94,-71,-69,-72,-78,-23,-21,-68,-23,-153,-119,-154,181,-100,-101,-73,-118,-117,-152,-99,185,199,-46,-59,-50,-40,-43,-49,-47,-44,-45,-42,-39,-41,-51,209,-58,-23,-177,236,-167,242,-22,-57,-176,-74,-166,-60,-52,-53,-77,-62,-67,]),'DCL':([0,2,20,27,34,36,41,107,121,127,177,183,197,226,297,318,322,333,339,343,345,346,],[4,-6,-5,-8,4,-9,-7,-140,4,-15,-28,-24,-10,-139,4,4,4,4,-32,-31,-30,-29,]),'ASC':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[5,-6,5,-5,5,5,-8,5,-9,-7,5,5,5,5,-102,-103,5,5,5,-119,5,-100,-101,-151,-118,-117,5,-99,-140,5,5,5,5,-15,-115,-116,5,5,5,-120,-109,-108,-107,5,-106,-113,-112,-105,-114,-110,-111,5,-28,-150,-24,5,-10,5,5,5,5,5,5,5,5,5,-139,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-32,-31,-30,-29,]),'GREATER':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,167,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'IF':([0,2,6,20,21,26,27,34,36,41,43,51,53,84,85,89,94,98,107,111,113,116,121,127,152,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[6,-6,53,-5,53,6,-8,6,-9,-7,53,53,53,6,53,53,-151,53,-140,53,6,53,6,-15,53,6,-28,-150,-24,6,-10,53,53,53,53,53,53,6,53,6,-139,53,53,53,53,53,53,53,53,53,53,53,6,53,53,6,6,6,-32,-31,-30,-29,]),'NUM':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[10,-6,10,-5,10,10,-8,10,-9,-7,10,10,10,10,-102,-103,10,10,10,-119,10,-100,-101,-151,-118,-117,10,-99,-140,10,10,10,10,-15,-115,-116,10,10,10,-120,-109,-108,-107,10,-106,-113,-112,-105,-114,-110,-111,10,-28,-150,-24,10,-10,10,10,10,10,10,10,10,10,10,-139,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-32,-31,-30,-29,]),'$end':([2,8,16,20,27,34,36,41,107,120,121,122,127,177,183,197,201,226,339,343,345,346,],[-6,0,-1,-5,-8,-202,-9,-7,-140,-2,-202,-4,-15,-28,-24,-10,-3,-139,-32,-31,-30,-29,]),'TIMES':([1,3,7,9,12,18,28,32,35,38,50,52,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,171,174,196,211,212,213,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,100,-71,-69,-72,-78,100,-98,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-23,-177,-167,100,-93,-81,-176,-74,-166,-68,-130,-136,-77,-131,]),'ID':([0,2,4,6,20,21,22,26,27,30,34,36,37,41,43,44,45,48,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,114,116,119,121,125,126,127,143,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,184,185,186,197,198,199,202,205,206,207,209,217,220,222,224,226,228,229,231,232,236,238,242,256,258,260,271,278,283,284,285,292,297,298,302,303,317,318,322,333,339,343,345,346,],[12,-6,44,58,-5,58,44,58,-8,44,12,-9,44,-7,58,-23,-21,44,58,58,58,-102,-103,58,171,58,-119,58,-100,-101,-151,-118,-117,58,-99,-140,58,58,44,58,44,12,44,44,-15,44,-115,-116,58,58,58,-120,-109,-108,-107,58,-106,-113,-112,-105,-114,-110,-111,58,-28,-150,-24,44,44,58,-10,44,58,-22,58,58,58,58,58,58,58,58,-139,58,44,58,58,58,44,58,58,58,58,44,44,44,58,58,58,12,44,58,58,44,12,12,12,-32,-31,-30,-29,]),'CONCAT':([1,3,7,9,12,18,28,32,35,38,49,50,52,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,171,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,88,-71,-69,-72,-78,88,-90,-98,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-23,-177,-167,-91,-93,-81,88,-176,-74,-166,-68,-130,-136,-77,-131,]),'RETURNS':([268,299,],[295,295,]),'PROC':([86,],[176,]),'LENGTH':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[14,-6,14,-5,14,14,-8,14,-9,-7,14,14,14,14,-102,-103,14,14,14,-119,14,-100,-101,-151,-118,-117,14,-99,-140,14,14,14,14,-15,-115,-116,14,14,14,-120,-109,-108,-107,14,-106,-113,-112,-105,-114,-110,-111,14,-28,-150,-24,14,-10,14,14,14,14,14,14,14,14,14,-139,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-32,-31,-30,-29,]),'WHILE':([1,3,9,26,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,109,128,133,136,137,138,139,144,154,168,174,191,192,193,196,211,212,213,219,227,230,239,255,262,279,286,287,289,301,306,307,312,313,324,327,328,335,],[-165,-164,-70,111,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,111,-46,-50,-49,-47,-44,-45,-51,-104,-94,-177,-190,-192,-191,-167,-91,-93,-81,-89,-176,-74,-166,-130,-136,-200,-52,-53,-82,-77,-196,-199,-131,-83,-198,-194,-195,-193,]),'PLUS':([1,3,7,9,12,18,28,32,35,38,49,50,52,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,171,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,97,-71,-69,-72,-78,97,-90,-98,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-23,-177,-167,-91,-93,-81,97,-176,-74,-166,-68,-130,-136,-77,-131,]),'CHAR':([44,45,48,119,143,185,202,205,238,271,278,283,285,317,],[-23,-21,144,144,144,144,-22,144,144,144,144,144,144,144,]),'COLON':([1,3,7,9,12,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,179,180,196,211,212,213,215,219,227,230,239,245,247,251,255,262,289,301,312,313,],[-165,-164,84,-70,86,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,231,-55,-167,-91,-93,-81,256,-89,-176,-74,-166,-68,284,-55,-130,-136,-82,-77,-131,-83,]),'FALSE':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[63,63,63,63,63,-102,-103,63,63,-119,63,-100,-101,-151,-118,-117,63,-99,63,63,-115,-116,63,63,63,-120,-109,-108,-107,63,-106,-113,-112,-105,-114,-110,-111,-150,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'EXIT':([0,2,20,26,27,34,36,41,84,107,113,121,127,170,177,183,186,197,220,224,226,297,318,322,333,339,343,345,346,],[37,-6,-5,37,-8,37,-9,-7,37,-140,37,37,-15,37,-28,-24,37,-10,37,37,-139,37,37,37,37,-32,-31,-30,-29,]),'UPPER':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[40,-6,40,-5,40,40,-8,40,-9,-7,40,40,40,40,-102,-103,40,40,40,-119,40,-100,-101,-151,-118,-117,40,-99,-140,40,40,40,40,-15,-115,-116,40,40,40,-120,-109,-108,-107,40,-106,-113,-112,-105,-114,-110,-111,40,-28,-150,-24,40,-10,40,40,40,40,40,40,40,40,40,-139,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-32,-31,-30,-29,]),'TRUE':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[64,64,64,64,64,-102,-103,64,64,-119,64,-100,-101,-151,-118,-117,64,-99,64,64,-115,-116,64,64,64,-120,-109,-108,-107,64,-106,-113,-112,-105,-114,-110,-111,-150,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SCONST':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[69,69,69,69,69,-102,-103,69,69,-119,69,-100,-101,-151,-118,-117,69,-99,69,69,-115,-116,69,69,69,-120,-109,-108,-107,69,-106,-113,-112,-105,-114,-110,-111,-150,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'MODULO':([1,3,7,9,12,18,28,32,35,38,50,52,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,171,174,196,211,212,213,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,93,-71,-69,-72,-78,93,-98,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-23,-177,-167,93,-93,-81,-176,-74,-166,-68,-130,-136,-77,-131,]),'END':([2,20,27,36,41,107,121,122,127,177,183,197,201,226,297,318,319,322,331,333,334,339,340,343,345,346,],[-6,-5,-8,-9,-7,-140,-202,-4,-15,-28,-24,-10,-3,-139,-202,-202,332,-202,338,-202,341,-32,344,-31,-30,-29,]),'AND':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,159,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'PRINT':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[25,-6,25,-5,25,25,-8,25,-9,-7,25,25,25,25,-102,-103,25,25,25,-119,25,-100,-101,-151,-118,-117,25,-99,-140,25,25,25,25,-15,-115,-116,25,25,25,-120,-109,-108,-107,25,-106,-113,-112,-105,-114,-110,-111,25,-28,-150,-24,25,-10,25,25,25,25,25,25,25,25,25,-139,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-32,-31,-30,-29,]),'REF':([44,45,48,119,143,185,202,271,283,317,],[-23,-21,143,143,143,143,-22,143,143,143,]),'OD':([26,107,110,113,115,186,190,226,235,],[-202,-140,188,-202,-163,-202,-162,-139,276,]),'ELSIF':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,107,113,115,154,168,169,174,190,196,211,212,213,216,219,224,225,226,227,230,239,255,259,261,262,266,289,294,301,312,313,315,329,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-140,-202,-163,-104,-94,222,-177,-162,-167,-91,-93,-81,260,-89,-202,-157,-139,-176,-74,-166,-130,292,-84,-136,-161,-82,222,-77,-131,-83,-86,-87,]),'ABS':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[19,-6,19,-5,19,19,-8,19,-9,-7,19,19,19,19,-102,-103,19,19,19,-119,19,-100,-101,-151,-118,-117,19,-99,-140,19,19,19,19,-15,-115,-116,19,19,19,-120,-109,-108,-107,19,-106,-113,-112,-105,-114,-110,-111,19,-28,-150,-24,19,-10,19,19,19,19,19,19,19,19,19,-139,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-32,-31,-30,-29,]),'RETURN':([0,2,20,26,27,34,36,41,84,107,113,121,127,170,177,183,186,197,220,224,226,297,318,322,333,339,343,345,346,],[21,-6,-5,21,-8,21,-9,-7,21,-140,21,21,-15,21,-28,-24,21,-10,21,21,-139,21,21,21,21,-32,-31,-30,-29,]),'TYPE':([0,2,20,27,34,36,41,107,121,127,177,183,197,226,297,318,322,333,339,343,345,346,],[22,-6,-5,-8,22,-9,-7,-140,22,-15,-28,-24,-10,-139,22,22,22,22,-32,-31,-30,-29,]),'EQUAL':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,157,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'OR':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,158,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'COMMA':([1,3,9,28,32,38,44,45,46,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,105,118,128,130,133,134,135,136,137,138,139,140,141,142,144,145,146,154,168,174,175,180,196,208,210,211,212,213,215,219,227,230,234,239,241,248,249,250,254,255,262,269,273,275,281,282,286,287,289,300,301,308,309,310,312,313,323,],[-165,-164,-70,-71,-69,-78,-23,125,126,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,184,198,-46,-59,-50,-40,-43,-49,-47,-44,-45,-42,-39,-41,-51,-19,-58,-104,-94,-177,228,232,-167,-57,-18,-91,-93,-81,232,-89,-176,-74,-27,-166,-14,-65,-66,285,-20,-130,-136,298,-56,232,-13,-60,-52,-53,-82,-36,-77,-62,-67,-54,-131,-83,-35,]),'IN':([1,3,9,28,32,38,44,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,194,196,211,212,213,219,227,230,237,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-23,-88,-90,-98,-68,-123,-23,-137,-121,156,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,238,-167,-91,-93,-81,-89,-176,-74,278,-166,-68,-130,-136,-77,-131,]),'LESS':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,162,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'ARRAY':([44,45,48,119,143,185,202,271,283,317,],[-23,-21,131,131,131,131,-22,131,131,131,]),'READ':([0,2,6,20,21,26,27,34,36,41,43,51,53,54,75,78,81,84,85,88,89,92,93,94,96,97,98,100,107,111,113,116,121,127,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,170,177,181,183,186,197,199,205,206,207,209,217,220,222,224,226,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,339,343,345,346,],[11,-6,11,-5,11,11,-8,11,-9,-7,11,11,11,11,-102,-103,11,11,11,-119,11,-100,-101,-151,-118,-117,11,-99,-140,11,11,11,11,-15,-115,-116,11,11,11,-120,-109,-108,-107,11,-106,-113,-112,-105,-114,-110,-111,11,-28,-150,-24,11,-10,11,11,11,11,11,11,11,11,11,-139,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-32,-31,-30,-29,]),'ICONST':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,155,156,157,158,159,160,161,162,163,164,165,166,167,181,199,204,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[72,72,72,72,72,-102,-103,72,72,-119,72,-100,-101,-151,-118,-117,72,-99,72,72,-115,-116,72,72,72,218,-120,-109,-108,-107,72,-106,-113,-112,-105,-114,-110,-111,-150,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'BY':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,255,262,277,289,301,312,313,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-130,-136,303,-82,-77,-131,-83,]),'NOT':([6,21,43,51,53,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[78,78,78,78,78,78,-119,78,-100,-101,-151,-118,-117,78,-99,78,78,-115,-116,78,78,78,-120,-109,-108,-107,78,-106,-113,-112,-105,-114,-110,-111,-150,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'CHARS':([44,45,48,119,143,185,202,271,283,317,],[-23,-21,129,129,129,129,-22,129,129,129,]),'LTEQUAL':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,165,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'NOTEQ':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,166,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'DO':([0,2,20,26,27,34,36,41,84,107,113,121,127,170,177,183,186,197,220,224,226,297,318,322,333,339,343,345,346,],[26,-6,-5,26,-8,26,-9,-7,26,-140,26,26,-15,26,-28,-24,26,-10,26,26,-139,26,26,26,26,-32,-31,-30,-29,]),'SEMI':([1,3,9,13,15,21,23,24,28,31,32,33,35,38,39,42,44,46,47,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,101,102,103,104,105,108,109,112,117,118,123,124,128,130,133,134,135,136,137,138,139,140,141,142,144,145,146,154,168,172,174,182,187,188,189,191,192,193,196,203,208,210,211,212,213,219,221,227,230,233,234,239,240,241,254,255,262,265,268,276,279,281,282,286,287,289,296,299,301,306,307,308,309,312,313,321,324,327,328,332,335,336,338,341,342,344,],[-165,-164,-70,-142,-146,-202,-145,107,-71,-141,-69,-148,-143,-78,-147,-144,-23,-16,127,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-183,-181,-182,183,-25,186,-188,-189,197,-11,-180,-184,-46,-59,-50,-40,-43,-49,-47,-44,-45,-42,-39,-41,-51,-19,-58,-104,-94,226,-177,-149,-187,-186,-201,-190,-192,-191,-167,-17,-57,-18,-91,-93,-81,-89,-156,-176,-74,-26,-27,-166,-12,-14,-20,-130,-136,-155,297,-185,-200,-13,-60,-52,-53,-82,318,322,-77,-196,-199,-62,-67,-131,-83,333,-198,-194,-195,339,-193,-38,343,345,-37,346,]),'INT':([44,45,48,119,143,185,202,205,238,271,278,283,285,317,],[-23,-21,136,136,136,136,-22,136,136,136,136,136,136,136,]),'FOR':([26,],[114,]),'SYN':([0,2,20,27,34,36,41,107,121,127,177,183,197,226,297,318,322,333,339,343,345,346,],[30,-6,-5,-8,30,-9,-7,-140,30,-15,-28,-24,-10,-139,30,30,30,30,-32,-31,-30,-29,]),'LBRACKET':([1,3,7,9,12,18,28,32,35,38,52,55,57,58,59,61,63,64,66,67,68,69,70,71,72,74,76,77,79,80,95,129,131,154,171,174,196,213,227,230,239,245,255,262,301,312,],[-165,-164,-68,-70,-23,89,-71,-69,-72,-78,152,-68,-123,-23,-137,-121,-134,-133,-129,89,-128,-138,-124,-126,-132,-135,-127,-125,-122,-72,-73,204,205,89,-23,-177,-167,-81,-176,-74,-166,-68,-130,-136,-77,-131,]),'NULL':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[59,59,59,59,59,-102,-103,59,59,-119,59,-100,-101,-151,-118,-117,59,-99,59,59,-115,-116,59,59,59,-120,-109,-108,-107,59,-106,-113,-112,-105,-114,-110,-111,-150,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LPAREN':([5,6,10,11,12,14,17,19,21,25,29,40,43,44,51,53,58,60,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,128,132,133,134,135,136,137,138,139,144,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,171,176,181,199,205,206,207,209,217,222,228,231,232,236,242,245,248,256,258,260,279,280,284,285,286,287,292,295,302,303,307,],[-169,51,-170,-174,85,-173,-172,-168,51,-175,116,-171,51,-23,51,51,85,155,-102,-103,51,51,-119,51,-100,-101,-151,-118,-117,51,-99,51,51,-46,206,-50,207,-48,-49,-47,-44,-45,-51,-115,-116,51,51,51,-120,-109,-108,-107,51,-106,-113,-112,-105,-114,-110,-111,85,229,-150,51,51,51,51,51,51,51,51,51,51,51,51,-48,207,51,51,51,207,-48,51,51,-52,-53,51,317,51,51,207,]),'CCONST':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[74,74,74,74,74,-102,-103,74,74,-119,74,-100,-101,-151,-118,-117,74,-99,74,74,-115,-116,74,74,74,-120,-109,-108,-107,74,-106,-113,-112,-105,-114,-110,-111,-150,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'MINUS':([1,3,6,7,9,12,18,21,28,32,35,38,43,49,50,51,52,53,55,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,85,88,89,92,93,94,95,96,97,98,100,111,116,147,148,149,150,152,154,156,157,158,159,160,161,162,163,164,165,166,167,168,171,174,181,196,199,205,206,207,209,211,212,213,217,219,222,227,228,230,231,232,236,239,242,245,255,256,258,260,262,284,285,292,301,302,303,312,],[-165,-164,75,-68,-70,-23,96,75,-71,-69,-72,-78,75,96,-90,75,-98,75,-68,-123,-23,-137,-121,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,75,-119,75,-100,-101,-151,-73,-118,-117,75,-99,75,75,-115,-116,75,75,75,-104,-120,-109,-108,-107,75,-106,-113,-112,-105,-114,-110,-111,-94,-23,-177,-150,-167,75,75,75,75,75,-91,-93,-81,75,96,75,-176,75,-74,75,75,75,-166,75,-68,-130,75,75,75,-136,75,75,75,-77,75,75,-131,]),'GTEQUAL':([1,3,9,28,32,38,49,50,52,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,245,255,262,301,312,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-123,-23,-137,-121,163,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-68,-130,-136,-77,-131,]),'BOOL':([44,45,48,119,143,185,202,205,238,271,278,283,285,317,],[-23,-21,133,133,133,133,-22,133,133,133,133,133,133,133,]),'HAT':([6,21,43,51,53,75,78,81,85,88,89,92,93,94,96,97,98,100,111,116,147,148,149,150,152,156,157,158,159,160,161,162,163,164,165,166,167,181,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[60,60,60,60,60,-102,-103,60,60,-119,60,-100,-101,-151,-118,-117,60,-99,60,60,-115,-116,60,60,60,-120,-109,-108,-107,60,-106,-113,-112,-105,-114,-110,-111,-150,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TO':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,196,211,212,213,219,227,230,239,255,262,277,289,301,304,305,312,313,325,326,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-130,-136,302,-82,-77,302,302,-131,-83,-197,302,]),'RBRACKET':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,128,133,136,137,138,139,144,154,168,174,178,180,196,211,212,213,214,215,219,227,230,239,243,244,246,248,249,250,255,262,272,273,274,275,286,287,288,289,301,310,311,312,313,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-46,-50,-49,-47,-44,-45,-51,-104,-94,-177,230,-75,-167,-91,-93,-81,255,-75,-89,-176,-74,-166,-61,282,283,-65,-66,-63,-130,-136,301,-56,-76,-75,-52,-53,312,-82,-77,-54,-64,-131,-83,]),'ARROW':([1,3,6,7,9,12,18,21,28,32,35,38,43,51,53,55,58,67,75,78,80,81,85,88,89,92,93,94,95,96,97,98,100,111,116,147,148,149,150,152,154,156,157,158,159,160,161,162,163,164,165,166,167,171,174,181,196,199,205,206,207,209,217,222,227,228,230,231,232,236,239,242,245,256,258,260,284,285,292,301,302,303,],[-165,-164,54,-68,-70,-23,95,54,-71,-69,-72,-78,54,54,54,-68,-23,95,-102,-103,-72,54,54,-119,54,-100,-101,-151,-73,-118,-117,54,-99,54,54,-115,-116,54,54,54,95,-120,-109,-108,-107,54,-106,-113,-112,-105,-114,-110,-111,-23,-177,-150,-167,54,54,54,54,54,54,54,-176,54,-74,54,54,54,-166,54,-68,54,54,54,54,54,54,-77,54,54,]),'DOWN':([1,3,9,28,32,38,44,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,95,154,168,174,194,196,211,212,213,219,227,230,239,255,262,277,289,301,304,312,313,325,],[-165,-164,-70,-71,-69,-78,-23,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,-73,-104,-94,-177,237,-167,-91,-93,-81,-89,-176,-74,-166,-130,-136,305,-82,-77,326,-131,-83,-197,]),'THEN':([1,3,9,28,32,38,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,83,95,153,154,168,174,196,211,212,213,219,227,230,239,255,262,264,289,293,301,312,313,314,],[-165,-164,-70,-71,-69,-78,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,170,-73,217,-104,-94,-177,-167,-91,-93,-81,-89,-176,-74,-166,-130,-136,170,-82,217,-77,-131,-83,217,]),'LOC':([44,128,130,133,134,135,136,137,138,139,140,141,142,144,146,208,282,286,287,300,308,309,330,],[-23,-46,-59,-50,-40,-43,-49,-47,-44,-45,-42,-39,-41,-51,-58,-57,-60,-52,-53,323,-62,-67,337,]),'RPAREN':([1,3,9,28,32,38,44,49,50,52,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,79,80,82,85,95,116,128,130,133,134,135,136,137,138,139,140,141,142,144,146,151,154,168,173,174,175,195,196,208,211,212,213,218,219,227,229,230,239,252,253,255,262,267,269,270,273,282,286,287,289,300,301,308,309,310,312,313,320,323,330,337,],[-165,-164,-70,-71,-69,-78,-23,-88,-90,-98,-68,-80,-123,-23,-137,-121,-79,-134,-133,-92,-129,-96,-128,-138,-124,-126,-132,-95,-135,-127,-125,-122,-72,-97,174,-73,196,-46,-59,-50,-40,-43,-49,-47,-44,-45,-42,-39,-41,-51,-58,213,-104,-94,227,-177,-178,239,-167,-57,-91,-93,-81,262,-89,-176,268,-74,-166,286,287,-130,-136,-179,-33,299,-56,-60,-52,-53,-82,-36,-77,-62,-67,-54,-131,-83,-34,-35,336,342,]),'RESULT':([0,2,20,26,27,34,36,41,84,107,113,121,127,170,177,183,186,197,220,224,226,297,318,322,333,339,343,345,346,],[43,-6,-5,43,-8,43,-9,-7,43,-140,43,43,-15,43,-28,-24,43,-10,43,43,-139,43,43,43,43,-32,-31,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([62,],[161,]),'builtin_call':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'if_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'procedure_call':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'declaration_list':([4,126,],[47,203,]),'primitive_value':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'arithmetic_multiplicative_operator':([18,50,211,],[87,150,150,]),'else_clause':([169,294,],[223,316,]),'for_control':([26,],[109,]),'identifier':([0,4,6,21,22,26,30,34,37,43,48,51,53,54,81,84,85,89,98,111,113,114,116,119,121,125,126,143,149,150,152,160,170,184,185,186,198,199,205,206,207,209,217,220,222,224,228,229,231,232,236,238,242,256,258,260,271,278,283,284,285,292,297,298,302,303,317,318,322,333,],[7,45,55,55,45,7,45,7,123,55,135,55,55,55,55,55,55,55,55,55,7,194,55,135,7,45,45,135,55,55,55,55,7,45,135,7,45,55,245,55,55,55,55,7,55,7,55,45,55,55,55,280,55,55,55,55,135,280,135,55,245,55,7,45,55,55,135,7,7,7,]),'mode_definition':([22,184,],[105,105,]),'array_element':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'conditional_expression':([6,21,43,51,53,85,89,98,111,116,152,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'value_array_slice':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'mode_name':([48,119,143,185,271,283,317,],[141,141,141,141,141,141,141,]),'assignment_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'string_length':([204,],[244,]),'declaration':([4,126,],[46,46,]),'literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'operator1':([62,],[160,]),'operand0':([6,21,43,51,53,85,89,98,111,116,152,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'boolean_mode':([48,119,143,185,205,238,271,278,283,285,317,],[139,139,139,139,139,139,139,139,139,139,139,]),'procedure_definition':([86,],[177,]),'statement_list':([0,],[16,]),'array_location':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[18,67,67,18,18,67,67,67,154,67,18,67,67,67,67,18,67,18,67,67,67,67,18,18,67,67,67,67,67,67,18,67,18,67,67,67,67,67,67,67,67,67,67,67,18,67,67,18,18,18,]),'string_mode':([48,119,143,185,271,283,317,],[146,146,146,146,146,146,146,]),'expression_list':([89,152,232,],[178,214,274,]),'newmode_list':([22,184,],[104,233,]),'array_mode':([48,119,143,185,271,283,317,],[130,130,130,130,130,130,130,]),'statement_nullable':([34,121,297,318,322,333,],[120,201,319,331,334,340,]),'step_enumeration':([114,],[193,]),'discrete_mode':([48,119,143,185,205,238,271,278,283,285,317,],[134,134,134,134,248,279,134,307,134,248,134,]),'action_statement':([0,26,34,113,121,170,186,220,224,297,318,322,333,],[27,113,27,113,27,224,113,224,113,27,27,27,27,]),'while_control':([26,109,],[112,187,]),'builtin_name':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'discrete_range_mode':([48,119,143,185,205,238,271,278,283,285,317,],[137,137,137,137,137,137,137,137,137,137,137,]),'dereferenced_reference':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'statement':([0,34,121,297,318,322,333,],[34,121,121,121,121,121,121,]),'call_action':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[35,80,80,35,35,80,80,80,80,80,35,80,80,80,80,35,80,35,80,80,80,80,35,35,80,80,80,80,80,80,35,80,35,80,80,80,80,80,80,80,80,80,80,80,35,80,80,35,35,35,]),'composite_mode':([48,119,143,185,271,283,317,],[140,140,140,140,140,140,140,]),'integer_literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,204,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,243,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'formal_parameter_list':([229,298,],[270,320,]),'empty_literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'step_value':([277,],[304,]),'assigning_operator':([18,],[98,]),'newmode_statement':([0,34,121,297,318,322,333,],[41,41,41,41,41,41,41,]),'monadic_operator':([6,21,43,51,53,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'referenced_location':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'identifier_list':([4,22,30,125,126,184,198,229,298,],[48,106,119,202,48,106,119,271,271,]),'operand1':([6,21,43,51,53,85,89,98,111,116,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[49,49,49,49,49,49,49,49,49,49,49,219,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'operand2':([6,21,43,51,53,85,89,98,111,116,149,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[50,50,50,50,50,50,50,50,50,50,211,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'parameter_list':([85,116,228,],[173,195,267,]),'synonym_statement':([0,34,121,297,318,322,333,],[2,2,2,2,2,2,2,]),'synonym_definition':([30,198,],[118,118,]),'procedure_statement':([0,34,121,297,318,322,333,],[36,36,36,36,36,36,36,]),'membership_operator':([62,],[164,]),'elsif_expression':([216,],[259,]),'formal_parameter':([229,298,],[269,269,]),'result_spec':([268,299,],[296,321,]),'arithmetic_additive_operator':([18,49,219,],[99,147,147,]),'program':([0,],[8,]),'character_string_literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'element_mode':([283,],[308,]),'else_expression':([216,259,],[257,291,]),'iteration':([114,],[191,]),'range_enumeration':([114,],[192,]),'integer_mode':([48,119,143,185,205,238,271,278,283,285,317,],[138,138,138,138,138,138,138,138,138,138,138,]),'index_mode':([205,285,],[250,250,]),'operand3':([6,21,43,51,53,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[65,65,65,65,65,65,65,65,65,65,65,212,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'return_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'reference_mode':([48,119,143,185,271,283,317,],[142,142,142,142,142,142,142,]),'then_expression':([153,293,314,],[216,315,329,]),'character_literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[24,24,24,172,24,24,24,24,24,24,24,24,24,24,]),'exit_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'end_value':([277,304,305,326,],[306,327,328,335,]),'parenthesized_expression':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'declaration_statement':([0,34,121,297,318,322,333,],[20,20,20,20,20,20,20,]),'control_part':([26,],[108,]),'then_clause':([83,264,],[169,294,]),'character_mode':([48,119,143,185,205,238,271,278,283,285,317,],[128,128,128,128,128,128,128,128,128,128,128,]),'boolean_literal':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'result_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'string_concatenation_operator':([18,49,219,],[90,148,148,]),'action_statement_nullable':([26,113,186,224,],[110,190,235,266,]),'synonym_list':([30,198,],[117,240,]),'result':([21,],[102,]),'discrete_mode_name':([48,119,143,185,205,238,271,278,283,285,317,],[132,132,132,132,132,132,132,132,132,132,132,]),'upper_bound':([231,284,],[272,310,]),'initialization':([145,],[210,]),'array_slice':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'action_statement_list':([170,220,],[225,263,]),'bracketed_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'closed_dyadic_operator':([18,],[91,]),'index_mode_list':([205,285,],[246,311,]),'do_action':([0,26,34,84,113,121,170,186,220,224,297,318,322,333,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'lower_bound':([89,205,206,207,285,],[179,247,247,247,247,]),'empty':([21,26,34,113,121,186,224,297,318,322,333,],[101,115,122,115,122,115,115,122,122,122,122,]),'operator2':([49,219,],[149,149,]),'operand4':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[73,73,73,73,73,168,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'location':([0,6,21,26,34,43,51,53,54,81,84,85,89,98,111,113,116,121,149,150,152,160,170,186,199,205,206,207,209,217,220,222,224,228,231,232,236,242,256,258,260,284,285,292,297,302,303,318,322,333,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'value_array_element':([6,21,43,51,53,81,85,89,98,111,116,149,150,152,160,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'literal_range':([205,206,207,285,],[249,252,253,249,]),'mode':([48,119,143,185,271,283,317,],[145,200,208,234,300,309,330,]),'expression':([6,21,43,51,53,85,89,98,111,116,152,199,205,206,207,209,217,222,228,231,232,236,242,256,258,260,284,285,292,302,303,],[83,103,124,151,153,175,180,182,189,175,215,241,251,251,251,254,261,264,175,273,275,277,281,288,290,293,273,251,314,324,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> array_element','location',1,'p_location','Parser.py',369),
  ('location -> array_slice','location',1,'p_location','Parser.py',370),
  ('location -> call_action','location',1,'p_location','Parser.py',371),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',399),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',403),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',404),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',412),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',416),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',426),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',427),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',431),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',439),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',440),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',444),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',448),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',468),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',469),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',476),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',484),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',485),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',493),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',494),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',501),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',503),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',514),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',520),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',525),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',529),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',530),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',544),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',545),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',549),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',554),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',559),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',571),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',578),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',582),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',586),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',590),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',598),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',602),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',607),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',608),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',617),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',621),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',632),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',633),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',638),
  ('action -> assignment_action','action',1,'p_action','Parser.py',639),
  ('action -> call_action','action',1,'p_action','Parser.py',640),
  ('action -> exit_action','action',1,'p_action','Parser.py',641),
  ('action -> result_action','action',1,'p_action','Parser.py',642),
  ('action -> return_action','action',1,'p_action','Parser.py',643),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',647),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',652),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',656),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',657),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',661),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',667),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',668),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',672),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',676),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',678),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',689),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',701),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',702),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',719),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',720),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',724),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',725),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',730),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',741),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',742),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',746),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',747),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',756),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',764),
  ('result -> expression','result',1,'p_result','Parser.py',768),
  ('result -> empty','result',1,'p_result','Parser.py',769),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',772),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',780),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',781),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',788),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',789),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',790),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',794),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',798),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',803),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',806),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',818),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',822),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',826),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',827),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',834),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',840),
]

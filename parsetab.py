
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT WHILE DCL UPPER INT END ASC IN BY LOWER PRINT FI BOOL ELSE FALSE RESULT ABS LOC ELSIF CHAR ARRAY DOWN TO DO FOR EXIT TRUE REF CHARS TYPE IF THEN PROC SYN READ NULL RETURN OD RETURNS NUM LENGTHprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'CHAR':([97,98,100,107,162,186,226,231,250,284,289,302,303,330,],[-21,159,-23,159,159,159,-22,159,159,159,159,159,159,159,]),'MODULO':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,83,84,85,86,87,88,89,91,92,133,139,183,193,198,210,215,222,223,235,243,246,261,266,275,292,306,322,],[52,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,52,-129,-132,-144,-134,-136,-128,-135,-142,-130,-140,-101,-111,-23,-184,-174,-81,-88,-100,52,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'EQUAL':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,146,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'ELSE':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,123,124,133,137,139,193,198,202,210,211,215,220,221,222,223,224,235,237,243,246,258,259,261,265,266,292,295,299,306,319,321,322,340,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-147,-170,-209,-101,217,-111,-184,-174,-169,-81,256,-88,-164,-209,-100,-98,-96,-76,-146,-183,-173,256,-91,-137,-168,-143,-84,-89,217,-78,-93,-90,-138,-94,]),'$end':([9,19,26,29,30,35,41,44,95,115,116,117,157,185,190,195,196,237,348,353,356,357,],[-5,-7,-9,0,-209,-6,-1,-8,-147,-2,-4,-209,-15,-24,-10,-28,-3,-146,-32,-31,-30,-29,]),'FI':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,123,124,133,137,139,193,198,202,210,215,218,220,221,222,223,224,235,237,243,246,257,261,263,265,266,292,294,295,297,299,306,321,322,323,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-147,-170,-209,-101,219,-111,-184,-174,-169,-81,-88,264,-164,-209,-100,-98,-96,-76,-146,-183,-173,295,-137,-165,-168,-143,-84,-92,-89,321,-167,-78,-90,-138,-166,]),'LOC':([100,159,160,161,167,168,169,170,171,172,173,174,175,176,177,227,301,304,305,310,325,326,343,],[-23,-51,-45,-58,-59,-49,-43,-46,-47,-39,-42,-50,-41,-40,-44,-57,-52,-60,-53,331,-67,-62,349,]),'LTEQUAL':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,149,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'NULL':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[84,84,84,84,-158,-125,84,-124,-108,-107,-126,-106,84,84,84,-110,-109,84,84,84,84,-157,84,84,84,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'READ':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[5,5,-5,-7,5,-9,5,-6,5,5,-8,5,-158,-125,5,-124,-108,-107,-126,-106,5,5,5,-110,5,-109,-147,5,5,5,5,5,5,5,-157,5,5,5,5,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,5,-15,-24,5,-10,-28,5,5,5,5,5,5,5,5,5,5,5,5,-146,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-32,-31,-30,-29,]),'IF':([0,6,9,19,23,26,30,35,37,40,44,46,47,49,64,73,95,101,102,109,117,118,122,124,132,135,138,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[6,64,-5,-7,64,-9,6,-6,6,64,-8,64,-158,64,64,64,-147,64,6,64,6,64,64,6,-157,64,6,-15,-24,64,-10,-28,6,64,64,64,64,6,6,64,64,64,64,64,-146,64,64,64,64,64,64,64,64,64,6,64,64,6,6,6,-32,-31,-30,-29,]),'CONCAT':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,91,92,133,139,183,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[55,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,55,-132,-144,-134,-136,-128,-135,-142,-130,-140,-101,-111,-23,-184,-174,-81,-88,-100,-98,55,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'LOWER':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[42,42,-5,-7,42,-9,42,-6,42,42,-8,42,-158,-125,42,-124,-108,-107,-126,-106,42,42,42,-110,42,-109,-147,42,42,42,42,42,42,42,-157,42,42,42,42,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,42,-15,-24,42,-10,-28,42,42,42,42,42,42,42,42,42,42,42,42,-146,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-32,-31,-30,-29,]),'GTEQUAL':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,145,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'BY':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,288,292,295,306,321,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,315,-84,-89,-78,-90,-138,]),'END':([9,19,26,35,44,95,116,117,157,185,190,195,196,237,308,328,329,333,341,344,345,348,351,353,356,357,],[-5,-7,-9,-6,-8,-147,-4,-209,-15,-24,-10,-28,-3,-146,-209,-209,342,-209,347,-209,352,-32,355,-31,-30,-29,]),'PRINT':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[4,4,-5,-7,4,-9,4,-6,4,4,-8,4,-158,-125,4,-124,-108,-107,-126,-106,4,4,4,-110,4,-109,-147,4,4,4,4,4,4,4,-157,4,4,4,4,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,4,-15,-24,4,-10,-28,4,4,4,4,4,4,4,4,4,4,4,4,-146,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-32,-31,-30,-29,]),'FALSE':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[70,70,70,70,-158,-125,70,-124,-108,-107,-126,-106,70,70,70,-110,-109,70,70,70,70,-157,70,70,70,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'SCONST':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[69,69,69,69,-158,-125,69,-124,-108,-107,-126,-106,69,69,69,-110,-109,69,69,69,69,-157,69,69,69,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'AND':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,154,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'RBRACKET':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,129,131,133,139,159,160,168,170,171,174,177,179,180,193,198,210,213,214,215,222,223,224,235,243,246,251,252,253,254,261,266,271,272,273,274,276,277,279,280,292,295,298,301,305,306,321,322,324,327,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-82,210,-101,-111,-51,-45,-49,-46,-47,-50,-44,-77,235,-184,-174,-81,-82,261,-88,-100,-98,-96,-76,-183,-173,-82,-83,-56,292,-137,-143,-66,302,-63,-65,304,-61,306,-80,-84,-89,322,-52,-53,-78,-90,-138,-54,-64,]),'INT':([97,98,100,107,162,186,226,231,250,284,289,302,303,330,],[-21,168,-23,168,168,168,-22,168,168,168,168,168,168,168,]),'PLUS':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,91,92,133,139,183,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[50,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,50,-132,-144,-134,-136,-128,-135,-142,-130,-140,-101,-111,-23,-184,-174,-81,-88,-100,-98,50,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'LESS':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,153,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'DOWN':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,133,139,193,198,206,210,215,222,223,224,235,243,246,261,266,288,292,295,306,317,321,322,336,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-23,-101,-111,-184,-174,249,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,316,-84,-89,-78,339,-90,-138,-204,]),'LPAREN':([2,3,4,5,6,20,21,23,36,40,42,43,45,46,47,48,49,50,52,54,55,59,60,64,67,73,76,93,94,100,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,159,160,164,168,169,170,171,174,176,177,183,189,194,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,274,275,290,291,296,300,301,303,305,309,313,315,318,],[-176,-178,-182,-181,73,-177,109,73,118,73,-179,-175,-180,73,-158,-125,73,-124,-108,-107,-126,-106,73,73,109,73,-110,-109,156,-23,73,73,73,73,-157,73,73,73,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,73,-51,-45,230,-49,-48,-46,-47,-50,233,-44,109,73,245,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,233,-48,-48,233,73,73,-52,73,-53,330,73,73,233,]),'HAT':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[94,94,94,94,-158,-125,94,-124,-108,-107,-126,-106,94,94,94,-110,-109,94,94,94,94,-157,94,94,94,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'ABS':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[43,43,-5,-7,43,-9,43,-6,43,43,-8,43,-158,-125,43,-124,-108,-107,-126,-106,43,43,43,-110,43,-109,-147,43,43,43,43,43,43,43,-157,43,43,43,43,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,43,-15,-24,43,-10,-28,43,43,43,43,43,43,43,43,43,43,43,43,-146,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-31,-30,-29,]),'FOR':([37,],[126,]),'ELSIF':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,123,124,133,137,139,193,198,202,210,211,215,220,221,222,223,224,235,237,243,246,258,259,261,265,266,292,295,299,306,319,321,322,340,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-147,-170,-209,-101,216,-111,-184,-174,-169,-81,255,-88,-164,-209,-100,-98,-96,-76,-146,-183,-173,296,-91,-137,-168,-143,-84,-89,216,-78,-93,-90,-138,-94,]),'TYPE':([0,9,19,26,30,35,44,95,117,157,185,190,195,237,308,328,333,344,348,353,356,357,],[16,-5,-7,-9,16,-6,-8,-147,16,-15,-24,-10,-28,-146,16,16,16,16,-32,-31,-30,-29,]),'WHILE':([11,15,25,27,31,33,34,37,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,125,133,139,159,160,168,170,171,174,177,193,198,204,205,207,210,215,222,223,224,235,243,246,261,266,291,292,295,301,305,306,314,318,321,322,335,337,338,346,],[-72,-171,-70,-172,-73,-85,-69,122,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,122,-101,-111,-51,-45,-49,-46,-47,-50,-44,-184,-174,-197,-199,-198,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-207,-84,-89,-52,-53,-78,-203,-206,-90,-138,-205,-202,-201,-200,]),'BOOL':([97,98,100,107,162,186,226,231,250,284,289,302,303,330,],[-21,174,-23,174,174,174,-22,174,174,174,174,174,174,174,]),'SYN':([0,9,19,26,30,35,44,95,117,157,185,190,195,237,308,328,333,344,348,353,356,357,],[18,-5,-7,-9,18,-6,-8,-147,18,-15,-24,-10,-28,-146,18,18,18,18,-32,-31,-30,-29,]),'NOT':([6,23,40,46,47,48,49,50,52,54,55,59,64,73,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[76,76,76,76,-158,-125,76,-124,-108,-107,-126,-106,76,76,76,76,76,76,-157,76,76,76,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PROC':([110,],[194,]),'NUM':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[20,20,-5,-7,20,-9,20,-6,20,20,-8,20,-158,-125,20,-124,-108,-107,-126,-106,20,20,20,-110,20,-109,-147,20,20,20,20,20,20,20,-157,20,20,20,20,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,20,-15,-24,20,-10,-28,20,20,20,20,20,20,20,20,20,20,20,20,-146,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-32,-31,-30,-29,]),'ICONST':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,189,208,209,212,216,229,230,231,232,233,236,241,244,248,255,256,260,296,300,303,313,315,],[77,77,77,77,-158,-125,77,-124,-108,-107,-126,-106,77,77,77,-110,-109,77,77,77,77,-157,77,77,77,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,77,225,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'ID':([0,6,9,10,16,18,19,22,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,97,98,100,101,102,107,109,117,118,122,124,126,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,162,178,184,185,186,187,189,190,195,200,208,209,212,216,217,221,226,229,230,231,233,236,237,241,244,245,248,250,255,256,260,284,289,296,300,302,303,308,312,313,315,328,330,333,344,348,353,356,357,],[21,67,-5,100,100,100,-7,100,67,-9,21,-6,67,67,-8,67,-158,-125,67,-124,-108,-107,-126,-106,67,67,67,-110,67,-109,-147,-21,100,-23,67,183,100,67,21,67,67,67,100,-157,67,67,67,67,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,67,-15,100,100,100,100,-24,100,100,67,-10,-28,67,67,67,67,67,67,67,-22,67,67,67,67,67,-146,67,67,100,67,100,67,67,67,100,100,67,67,100,67,21,100,67,67,21,100,21,21,-32,-31,-30,-29,]),'ARROW':([1,6,11,12,14,15,21,23,25,27,31,33,34,39,40,46,47,48,49,50,52,54,55,56,59,60,61,64,67,71,73,75,76,93,101,109,118,122,132,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,189,193,198,208,209,210,212,216,229,230,231,233,235,236,241,243,244,246,248,255,256,260,275,292,296,300,303,306,313,315,],[56,78,-72,-68,-74,-171,-23,78,-70,-172,-73,-85,-69,-71,78,78,-158,-125,78,-124,-108,-107,-126,-75,-106,78,56,78,-23,-68,78,-74,-110,-109,78,78,78,78,-157,78,56,78,78,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,78,-23,78,-184,-174,78,78,-81,78,78,78,78,78,78,-76,78,78,-183,78,-173,78,78,78,78,-68,-84,78,78,78,-78,78,78,]),'EXIT':([0,9,19,26,30,35,37,44,95,102,117,124,138,157,185,190,195,200,217,221,237,308,328,333,344,348,353,356,357,],[22,-5,-7,-9,22,-6,22,-8,-147,22,22,22,22,-15,-24,-10,-28,22,22,22,-146,22,22,22,22,-32,-31,-30,-29,]),'THEN':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,74,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,134,139,193,198,210,215,222,223,224,235,243,246,261,262,266,292,293,295,306,320,321,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,138,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-101,212,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,138,-143,-84,212,-89,-78,212,-90,-138,]),'TIMES':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,83,84,85,86,87,88,89,91,92,133,139,183,193,198,210,215,222,223,235,243,246,261,266,275,292,306,322,],[59,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,59,-129,-132,-144,-134,-136,-128,-135,-142,-130,-140,-101,-111,-23,-184,-174,-81,-88,-100,59,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'RETURN':([0,9,19,26,30,35,37,44,95,102,117,124,138,157,185,190,195,200,217,221,237,308,328,333,344,348,353,356,357,],[23,-5,-7,-9,23,-6,23,-8,-147,23,23,23,23,-15,-24,-10,-28,23,23,23,-146,23,23,23,23,-32,-31,-30,-29,]),'IN':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,133,139,193,198,206,210,215,222,223,224,235,243,246,249,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,144,-130,-140,-23,-101,-111,-184,-174,250,-81,-88,-100,-98,-96,-76,-183,-173,289,-137,-143,-68,-84,-78,-138,]),'RETURNS':([283,311,],[309,309,]),'TO':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,288,292,295,306,316,317,321,322,336,339,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,313,-84,-89,-78,313,313,-90,-138,-204,313,]),'OR':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,148,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'GREATER':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,150,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'DCL':([0,9,19,26,30,35,44,95,117,157,185,190,195,237,308,328,333,344,348,353,356,357,],[10,-5,-7,-9,10,-6,-8,-147,10,-15,-24,-10,-28,-146,10,10,10,10,-32,-31,-30,-29,]),'REF':([97,98,100,107,162,186,226,284,302,330,],[-21,162,-23,162,162,162,-22,162,162,162,]),'OD':([37,95,119,123,124,200,202,237,247,],[-209,-147,199,-170,-209,-209,-169,-146,287,]),'ARRAY':([97,98,100,107,162,186,226,284,302,330,],[-21,165,-23,165,165,165,-22,165,165,165,]),'RPAREN':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,109,118,133,136,139,159,160,161,167,168,169,170,171,172,173,174,175,176,177,191,192,193,197,198,210,215,222,223,224,225,227,235,243,245,246,253,261,266,270,278,282,285,286,292,295,301,304,305,306,310,321,322,324,325,326,331,334,343,349,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-23,193,198,-101,215,-111,-51,-45,-58,-59,-49,-43,-46,-47,-39,-42,-50,-41,-40,-44,243,-185,-184,246,-174,-81,-88,-100,-98,-96,266,-57,-76,-183,283,-173,-56,-137,-143,301,305,-186,311,-33,-84,-89,-52,-60,-53,-78,-36,-90,-138,-54,-67,-62,-35,-34,350,354,]),'CHARS':([97,98,100,107,162,186,226,284,302,330,],[-21,166,-23,166,166,166,-22,166,166,166,]),'COMMA':([11,15,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,103,106,129,133,139,159,160,161,163,167,168,169,170,171,172,173,174,175,176,177,192,193,198,210,213,215,222,223,224,227,228,235,239,242,243,246,251,253,261,266,267,271,273,274,281,286,292,295,301,304,305,306,310,321,322,324,325,326,331,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,158,178,-23,184,187,208,-101,-111,-51,-45,-58,-19,-59,-49,-43,-46,-47,-39,-42,-50,-41,-40,-44,244,-184,-174,-81,208,-88,-100,-98,-96,-57,-18,-76,-27,-14,-183,-173,208,-56,-137,-143,-20,-66,303,-65,-13,312,-84,-89,-52,-60,-53,-78,-36,-90,-138,-54,-67,-62,-35,]),'CCONST':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[89,89,89,89,-158,-125,89,-124,-108,-107,-126,-106,89,89,89,-110,-109,89,89,89,89,-157,89,89,89,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ASC':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[2,2,-5,-7,2,-9,2,-6,2,2,-8,2,-158,-125,2,-124,-108,-107,-126,-106,2,2,2,-110,2,-109,-147,2,2,2,2,2,2,2,-157,2,2,2,2,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,2,-15,-24,2,-10,-28,2,2,2,2,2,2,2,2,2,2,2,2,-146,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-32,-31,-30,-29,]),'UPPER':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[3,3,-5,-7,3,-9,3,-6,3,3,-8,3,-158,-125,3,-124,-108,-107,-126,-106,3,3,3,-110,3,-109,-147,3,3,3,3,3,3,3,-157,3,3,3,3,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,3,-15,-24,3,-10,-28,3,3,3,3,3,3,3,3,3,3,3,3,-146,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-32,-31,-30,-29,]),'ASSIGN':([1,11,12,14,15,21,25,27,31,33,34,39,48,50,51,52,53,54,55,56,57,58,59,67,71,97,100,105,107,159,160,161,163,167,168,169,170,171,172,173,174,175,176,177,183,188,193,198,206,210,226,227,235,243,246,292,301,304,305,306,325,326,],[47,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-125,-124,-160,-108,132,-107,-126,-75,-159,-161,-106,-23,-68,-21,-23,186,189,-51,-45,-58,229,-59,-49,-43,-46,-47,-39,-42,-50,-41,-40,-44,-23,241,-184,-174,248,-81,-22,-57,-76,-183,-173,-84,-52,-60,-53,-78,-67,-62,]),'DO':([0,9,19,26,30,35,37,44,95,102,117,124,138,157,185,190,195,200,217,221,237,308,328,333,344,348,353,356,357,],[37,-5,-7,-9,37,-6,37,-8,-147,37,37,37,37,-15,-24,-10,-28,37,37,37,-146,37,37,37,37,-32,-31,-30,-29,]),'LENGTH':([0,6,9,19,23,26,30,35,37,40,44,46,47,48,49,50,52,54,55,59,60,64,73,76,78,93,95,101,102,109,117,118,122,124,132,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,185,189,190,195,200,208,209,212,216,217,221,229,230,231,233,236,237,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,348,353,356,357,],[45,45,-5,-7,45,-9,45,-6,45,45,-8,45,-158,-125,45,-124,-108,-107,-126,-106,45,45,45,-110,45,-109,-147,45,45,45,45,45,45,45,-157,45,45,45,45,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,45,-15,-24,45,-10,-28,45,45,45,45,45,45,45,45,45,45,45,45,-146,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-32,-31,-30,-29,]),'RESULT':([0,9,19,26,30,35,37,44,95,102,117,124,138,157,185,190,195,200,217,221,237,308,328,333,344,348,353,356,357,],[40,-5,-7,-9,40,-6,40,-8,-147,40,40,40,40,-15,-24,-10,-28,40,40,40,-146,40,40,40,40,-32,-31,-30,-29,]),'DIVIDE':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,83,84,85,86,87,88,89,91,92,133,139,183,193,198,210,215,222,223,235,243,246,261,266,275,292,306,322,],[54,-72,-68,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,54,-129,-132,-144,-134,-136,-128,-135,-142,-130,-140,-101,-111,-23,-184,-174,-81,-88,-100,54,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'LBRACKET':([1,11,12,14,15,21,25,27,31,33,34,39,56,61,62,67,68,69,70,71,75,77,79,81,83,84,85,86,87,88,89,91,92,139,165,166,183,193,198,210,215,235,243,246,261,266,275,292,306,322,],[49,-72,101,-74,-171,-23,-70,-172,-73,-85,-69,-71,-75,49,-131,-23,135,-145,-141,101,-74,-139,-133,-129,-132,-144,-134,-136,-128,-135,-142,-130,-140,49,231,232,-23,-184,-174,-81,-88,-76,-183,-173,-137,-143,101,-84,-78,-138,]),'NOTEQ':([11,15,25,27,31,33,34,39,56,61,62,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,133,139,193,198,210,215,222,223,224,235,243,246,261,266,275,292,306,322,],[-72,-171,-70,-172,-73,-85,-69,-71,-75,-103,-131,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,152,-130,-140,-101,-111,-184,-174,-81,-88,-100,-98,-96,-76,-183,-173,-137,-143,-68,-84,-78,-138,]),'TRUE':([6,23,40,46,47,48,49,50,52,54,55,59,60,64,73,76,93,101,109,118,122,132,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[92,92,92,92,-158,-125,92,-124,-108,-107,-126,-106,92,92,92,-110,-109,92,92,92,92,-157,92,92,92,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'SEMI':([7,8,11,13,14,15,17,23,24,25,27,28,31,32,33,34,38,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,99,100,103,104,106,108,111,112,113,114,120,121,125,127,128,133,139,159,160,161,163,167,168,169,170,171,172,173,174,175,176,177,182,193,198,199,201,203,204,205,207,210,215,219,222,223,224,227,228,234,235,238,239,240,242,243,246,261,264,266,267,281,283,287,291,292,295,301,304,305,306,307,311,314,318,321,322,325,326,332,335,337,338,342,346,347,350,352,354,355,],[-148,95,-72,-155,-150,-171,-153,-209,-154,-70,-172,-151,-73,-149,-85,-69,-152,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,157,-16,-23,-25,185,-11,190,-187,-189,-190,-188,200,-196,-195,-191,-156,-101,-111,-51,-45,-58,-19,-59,-49,-43,-46,-47,-39,-42,-50,-41,-40,-44,237,-184,-174,-193,-208,-194,-197,-199,-198,-81,-88,-163,-100,-98,-96,-57,-18,-17,-76,-26,-27,-12,-14,-183,-173,-137,-162,-143,-20,-13,308,-192,-207,-84,-89,-52,-60,-53,-78,328,333,-203,-206,-90,-138,-67,-62,344,-205,-202,-201,348,-200,353,-38,356,-37,357,]),'MINUS':([1,6,11,12,14,15,21,23,25,27,31,33,34,39,40,46,47,48,49,50,52,54,55,56,59,61,62,64,65,66,67,68,69,70,71,72,73,75,77,79,80,81,82,83,84,85,86,87,88,89,91,92,101,109,118,122,132,133,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,189,193,198,208,209,210,212,215,216,222,223,224,229,230,231,233,235,236,241,243,244,246,248,255,256,260,261,266,275,292,296,300,303,306,313,315,322,],[48,93,-72,-68,-74,-171,-23,93,-70,-172,-73,-85,-69,-71,93,93,-158,-125,93,-124,-108,-107,-126,-75,-106,-103,-131,93,-102,-104,-23,-105,-145,-141,-68,-99,93,-74,-139,-133,-97,-129,48,-132,-144,-134,-136,-128,-135,-142,-130,-140,93,93,93,93,-157,-101,93,-111,93,93,-122,-123,-127,-119,-116,-112,-115,-121,-118,-113,-117,-120,-114,93,-23,93,-184,-174,93,93,-81,93,-88,93,-100,-98,48,93,93,93,93,-76,93,93,-183,93,-173,93,93,93,93,-137,-143,-68,-84,93,93,93,-78,93,93,-138,]),'COLON':([11,12,15,21,25,27,31,33,34,39,56,61,62,63,65,66,67,68,69,70,71,72,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,129,130,133,139,179,181,193,198,210,213,215,222,223,224,235,243,246,261,266,268,269,275,292,295,306,321,322,],[-72,102,-171,110,-70,-172,-73,-85,-69,-71,-75,-103,-131,-87,-102,-104,-23,-105,-145,-141,-68,-99,-74,-139,-133,-97,-129,-95,-132,-144,-134,-136,-128,-135,-142,-86,-130,-140,-55,209,-101,-111,-79,236,-184,-174,-81,260,-88,-100,-98,-96,-76,-183,-173,-137,-143,-55,300,-68,-84,-89,-78,-90,-138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'monadic_operator':([6,23,40,46,49,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'synonym_definition':([18,187,],[106,106,]),'identifier_list':([10,16,18,158,178,184,187,245,312,],[98,105,107,226,98,105,107,284,284,]),'parameter_list':([109,118,244,],[191,197,282,]),'parenthesized_expression':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'action_statement_nullable':([37,124,200,221,],[119,202,247,265,]),'operand4':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[65,65,65,65,65,133,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'synonym_statement':([0,30,117,308,328,333,344,],[35,35,35,35,35,35,35,]),'declaration_statement':([0,30,117,308,328,333,344,],[9,9,9,9,9,9,9,]),'result_spec':([283,311,],[307,332,]),'arithmetic_additive_operator':([1,82,224,],[57,142,142,]),'end_value':([288,316,317,339,],[314,337,338,346,]),'initialization':([163,],[228,]),'primitive_value':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'array_mode':([98,107,162,186,284,302,330,],[167,167,167,167,167,167,167,]),'else_expression':([211,258,],[257,297,]),'identifier':([0,6,10,16,18,22,23,30,37,40,46,49,60,64,73,78,98,101,102,107,109,117,118,122,124,126,135,138,140,141,155,158,162,178,184,186,187,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,245,248,250,255,256,260,284,289,296,300,302,303,308,312,313,315,328,330,333,344,],[12,71,97,97,97,111,71,12,12,71,71,71,71,71,71,71,169,71,71,169,71,12,71,71,12,206,71,12,71,71,71,97,169,97,97,169,97,71,12,71,71,71,71,12,12,71,71,275,71,71,71,71,97,71,290,71,71,71,169,290,71,71,169,275,12,97,71,71,12,169,12,12,]),'operand3':([6,23,40,46,49,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[72,72,72,72,72,72,72,72,72,72,72,72,222,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'formal_parameter':([245,312,],[286,286,]),'builtin_name':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'right_element':([236,],[279,]),'expression':([6,23,40,46,49,64,73,101,109,118,122,135,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[74,112,127,128,129,134,136,179,192,192,201,213,242,251,253,259,262,267,268,268,268,280,281,192,288,293,294,298,320,253,268,335,336,]),'element_mode':([302,],[326,]),'control_part':([37,],[120,]),'mode_definition':([16,184,],[103,103,]),'index_mode':([231,303,],[273,273,]),'lower_bound':([49,230,231,233,303,],[130,269,269,269,269,]),'reference_mode':([98,107,162,186,284,302,330,],[175,175,175,175,175,175,175,]),'string_element':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'program':([0,],[29,]),'assignment_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'location':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'closed_dyadic_operator':([1,],[53,]),'iteration':([126,],[204,]),'start_element':([101,],[180,]),'index_mode_list':([231,303,],[272,327,]),'empty':([23,30,37,117,124,200,221,308,328,333,344,],[113,116,123,116,123,123,123,116,116,116,116,]),'discrete_mode_name':([98,107,162,186,231,250,284,289,302,303,330,],[164,164,164,164,164,164,164,164,164,164,164,]),'elsif_expression':([211,],[258,]),'character_string_literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'array_element':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'bracketed_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'left_element':([101,],[181,]),'membership_operator':([90,],[147,]),'step_enumeration':([126,],[207,]),'action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[8,8,8,182,8,8,8,8,8,8,8,8,8,8,]),'declaration_list':([10,178,],[96,234,]),'procedure_call':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'discrete_range_mode':([98,107,162,186,231,250,284,289,302,303,330,],[171,171,171,171,171,171,171,171,171,171,171,]),'mode_name':([98,107,162,186,284,302,330,],[172,172,172,172,172,172,172,]),'result_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'operand0':([6,23,40,46,49,64,73,101,109,118,122,135,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'value_array_slice':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'for_control':([37,],[125,]),'relational_operator':([90,],[151,]),'string_concatenation_operator':([1,82,224,],[58,143,143,]),'then_clause':([74,262,],[137,299,]),'integer_mode':([98,107,162,186,231,250,284,289,302,303,330,],[177,177,177,177,177,177,177,177,177,177,177,]),'operator1':([90,],[155,]),'array_location':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[1,61,61,1,1,61,61,61,61,61,61,139,61,1,61,1,61,61,1,61,1,61,61,61,61,1,61,61,61,61,1,1,61,61,61,61,61,61,61,61,61,61,61,61,61,61,1,61,61,1,1,1,]),'operator2':([82,224,],[141,141,]),'newmode_list':([16,184,],[104,238,]),'arithmetic_multiplicative_operator':([1,80,223,],[51,140,140,]),'conditional_expression':([6,23,40,46,49,64,73,101,109,118,122,135,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'array_slice':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'mode':([98,107,162,186,284,302,330,],[163,188,227,239,310,325,343,]),'referenced_location':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'else_clause':([137,299,],[218,323,]),'synonym_list':([18,187,],[108,240,]),'step_value':([288,],[317,]),'literal_range':([230,231,233,303,],[270,271,278,271,]),'dereferenced_reference':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'operand1':([6,23,40,46,49,64,73,101,109,118,122,135,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[82,82,82,82,82,82,82,82,82,82,82,82,224,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'statement_nullable':([30,117,308,328,333,344,],[115,196,329,341,345,351,]),'do_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'formal_parameter_list':([245,312,],[285,334,]),'call_action':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[14,75,75,14,14,75,75,75,75,75,75,75,75,14,75,14,75,75,14,75,14,75,75,75,75,14,75,75,75,75,14,14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,14,75,75,14,14,14,]),'while_control':([37,125,],[121,203,]),'return_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'discrete_mode':([98,107,162,186,231,250,284,289,302,303,330,],[176,176,176,176,274,291,176,318,176,274,176,]),'then_expression':([134,293,320,],[211,319,340,]),'newmode_statement':([0,30,117,308,328,333,344,],[19,19,19,19,19,19,19,]),'boolean_mode':([98,107,162,186,231,250,284,289,302,303,330,],[160,160,160,160,160,160,160,160,160,160,160,]),'string_mode':([98,107,162,186,284,302,330,],[161,161,161,161,161,161,161,]),'boolean_literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'upper_bound':([209,300,],[254,324,]),'operand2':([6,23,40,46,49,64,73,101,109,118,122,135,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[80,80,80,80,80,80,80,80,80,80,80,80,223,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'value_array_element':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'if_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'integer_literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,232,233,236,241,244,248,255,256,260,296,300,303,313,315,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,277,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'procedure_statement':([0,30,117,308,328,333,344,],[26,26,26,26,26,26,26,]),'builtin_call':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'action_statement_list':([138,217,],[220,263,]),'action_statement':([0,30,37,117,124,138,200,217,221,308,328,333,344,],[44,44,124,44,124,221,124,221,124,44,44,44,44,]),'exit_action':([0,30,37,102,117,124,138,200,217,221,308,328,333,344,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'result':([23,],[114,]),'declaration':([10,178,],[99,99,]),'statement':([0,30,117,308,328,333,344,],[30,117,117,117,117,117,117,]),'empty_literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'expression_list':([49,135,208,],[131,214,252,]),'assigning_operator':([1,],[46,]),'range_enumeration':([126,],[205,]),'character_mode':([98,107,162,186,231,250,284,289,302,303,330,],[170,170,170,170,170,170,170,170,170,170,170,]),'procedure_definition':([110,],[195,]),'composite_mode':([98,107,162,186,284,302,330,],[173,173,173,173,173,173,173,]),'string_slice':([0,6,23,30,37,40,46,49,60,64,73,78,101,102,109,117,118,122,124,135,138,140,141,155,189,200,208,209,212,216,217,221,229,230,231,233,236,241,244,248,255,256,260,296,300,303,308,313,315,328,333,344,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'character_literal':([6,23,40,46,49,60,64,73,101,109,118,122,135,140,141,155,189,208,209,212,216,229,230,231,233,236,241,244,248,255,256,260,296,300,303,313,315,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'statement_list':([0,],[41,]),'string_length':([232,],[276,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT INT BY LOC SYN UPPER CHARS PRINT THEN END ABS READ LENGTH DCL ASC DOWN DO FI BOOL REF RETURNS PROC IN TO ELSE ELSIF EXIT RESULT WHILE IF TRUE LOWER TYPE OD FALSE FOR ARRAY RETURN CHAR NUM NULLprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'AND':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,143,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'GTEQUAL':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,144,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'CONCAT':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,93,95,96,98,99,101,136,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,47,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-138,47,-97,-23,-139,-95,-23,-99,-109,-171,-181,-79,-74,-86,47,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'FOR':([23,],[106,]),'RESULT':([0,8,9,11,23,25,27,37,61,62,67,108,179,187,192,196,201,205,211,238,240,327,333,341,343,],[21,21,-7,-6,21,-8,-9,-5,21,21,-144,21,-15,21,-24,21,-10,-28,-143,21,21,21,21,-30,-29,]),'LOWER':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[44,44,-7,-6,44,44,-8,-9,44,-5,44,-122,-124,-106,-155,44,-105,-123,44,-104,44,44,44,-144,44,44,-107,44,-108,44,44,44,44,44,-154,44,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,44,-120,-121,44,44,-15,44,-24,44,44,-10,-28,44,44,44,-143,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,-29,]),'ASC':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[7,7,-7,-6,7,7,-8,-9,7,-5,7,-122,-124,-106,-155,7,-105,-123,7,-104,7,7,7,-144,7,7,-107,7,-108,7,7,7,7,7,-154,7,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,7,-120,-121,7,7,-15,7,-24,7,7,-10,-28,7,7,7,-143,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-30,-29,]),'GREATER':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,152,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'READ':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[13,13,-7,-6,13,13,-8,-9,13,-5,13,-122,-124,-106,-155,13,-105,-123,13,-104,13,13,13,-144,13,13,-107,13,-108,13,13,13,13,13,-154,13,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,13,-120,-121,13,13,-15,13,-24,13,13,-10,-28,13,13,13,-143,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-30,-29,]),'SEMI':([1,2,3,5,10,12,18,19,20,24,30,31,32,33,34,35,39,41,57,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,100,101,104,105,109,112,113,115,116,118,119,120,122,124,127,135,139,141,159,162,163,164,165,166,167,168,169,170,171,172,173,174,177,181,183,184,185,188,189,194,203,206,210,214,215,216,219,221,224,228,233,234,235,242,243,245,246,254,266,275,277,282,283,287,288,292,295,296,298,303,306,308,311,314,317,318,319,321,323,326,331,337,339,340,342,],[-149,-70,-152,-169,-148,-67,-68,67,-69,-147,-151,-146,-168,-83,-206,-145,-150,-71,-73,-23,-184,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-188,-95,179,-16,187,-193,-192,-25,192,-185,-187,-186,-11,201,-153,211,-99,-109,-42,-43,-47,-48,-56,-41,-40,-57,-38,-37,-49,-39,-44,-19,-45,-195,-196,-194,-190,-205,-191,-171,-181,-79,-74,-86,-94,-96,-98,-55,-18,-17,-27,-26,-170,-160,-12,-14,-180,-135,-20,-204,-189,-159,-13,-82,-76,-87,-58,-51,-50,-200,-203,327,-136,-88,-65,-60,-199,-198,-202,333,-197,341,-36,343,-35,]),'DOWN':([2,5,12,18,20,32,33,41,57,65,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,182,194,203,206,210,214,215,216,219,235,246,254,273,287,288,292,302,311,314,322,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-23,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-99,-109,230,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,301,-82,-76,-87,320,-136,-88,-201,]),'BOOL':([65,102,103,123,161,190,226,227,231,274,285,299,300,332,],[-23,164,-21,164,164,164,164,-22,164,164,164,164,164,164,]),'FALSE':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[99,99,99,-122,-124,-106,-155,99,-105,-123,99,-104,99,99,99,-107,-108,99,99,99,99,-154,99,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,99,-120,-121,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'ICONST':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,220,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[69,69,69,-122,-124,-106,-155,69,-105,-123,69,-104,69,69,69,-107,-108,69,69,69,69,-154,69,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,69,-120,-121,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'THEN':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,121,139,141,157,194,203,206,210,214,215,216,219,235,246,254,280,287,288,290,292,311,313,314,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,196,-99,-109,217,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,196,-82,-76,217,-87,-136,217,-88,]),'RBRACKET':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,129,131,133,134,139,141,159,162,163,164,171,173,177,194,203,206,210,212,213,214,215,216,219,235,246,248,249,250,251,252,253,254,261,262,268,269,270,271,287,288,289,292,296,298,311,314,315,316,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,206,-80,210,-75,-99,-109,-42,-43,-47,-48,-49,-44,-45,-171,-181,-79,-74,254,-80,-86,-94,-96,-98,-170,-180,287,-54,-81,-80,288,-78,-135,-59,295,-64,-61,-63,300,-82,-76,311,-87,-51,-50,-136,-88,-52,-62,]),'ABS':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[16,16,-7,-6,16,16,-8,-9,16,-5,16,-122,-124,-106,-155,16,-105,-123,16,-104,16,16,16,-144,16,16,-107,16,-108,16,16,16,16,16,-154,16,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,16,-120,-121,16,16,-15,16,-24,16,16,-10,-28,16,16,16,-143,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-30,-29,]),'TRUE':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[93,93,93,-122,-124,-106,-155,93,-105,-123,93,-104,93,93,93,-107,-108,93,93,93,93,-154,93,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,93,-120,-121,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'EXIT':([0,8,9,11,23,25,27,37,61,62,67,108,179,187,192,196,201,205,211,238,240,327,333,341,343,],[15,15,-7,-6,15,-8,-9,-5,15,15,-144,15,-15,15,-24,15,-10,-28,-143,15,15,15,15,-30,-29,]),'TIMES':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,93,96,98,99,101,136,139,141,194,203,206,210,214,216,219,235,246,254,272,287,288,311,],[-70,59,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-138,-97,-23,-139,59,-23,-99,-109,-171,-181,-79,-74,-86,59,-98,-170,-180,-135,-66,-82,-76,-136,]),'LESS':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,145,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'NOTEQ':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,142,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'COMMA':([2,5,12,18,20,32,33,41,57,65,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,103,105,115,122,131,139,141,159,162,163,164,165,166,167,168,169,170,171,172,173,174,177,194,195,203,206,210,213,214,215,216,219,221,224,233,235,245,246,249,251,254,266,268,269,270,283,286,287,288,292,295,296,298,309,311,314,315,317,318,328,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-23,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,178,180,191,198,208,-99,-109,-42,-43,-47,-48,-56,-41,-40,-57,-38,-37,-49,-39,-44,-19,-45,-171,236,-181,-79,-74,208,-86,-94,-96,-98,-55,-18,-27,-170,-14,-180,-54,208,-135,-20,-64,299,-63,-13,310,-82,-76,-87,-58,-51,-50,-34,-136,-88,-52,-65,-60,-33,]),'PRINT':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[17,17,-7,-6,17,17,-8,-9,17,-5,17,-122,-124,-106,-155,17,-105,-123,17,-104,17,17,17,-144,17,17,-107,17,-108,17,17,17,17,17,-154,17,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,17,-120,-121,17,17,-15,17,-24,17,17,-10,-28,17,17,17,-143,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-30,-29,]),'LOC':([65,159,162,163,164,165,166,167,168,169,170,171,172,173,177,221,295,296,298,309,317,318,335,],[-23,-42,-43,-47,-48,-56,-41,-40,-57,-38,-37,-49,-39,-44,-45,-55,-58,-51,-50,328,-65,-60,338,]),'ASSIGN':([2,4,5,6,12,18,20,24,32,33,41,45,46,47,48,49,50,53,54,55,56,57,59,65,90,98,103,114,123,136,159,162,163,164,165,166,167,168,169,170,171,172,173,174,177,182,194,199,203,206,210,221,227,235,246,287,288,295,296,298,317,318,],[-70,51,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-122,-124,-156,-158,-106,-105,-157,-123,128,-73,-104,-23,-66,-23,-21,190,200,-23,-42,-43,-47,-48,-56,-41,-40,-57,-38,-37,-49,-39,-44,223,-45,229,-171,244,-181,-79,-74,-55,-22,-170,-180,-82,-76,-58,-51,-50,-65,-60,]),'PROC':([126,],[204,]),'DO':([0,8,9,11,23,25,27,37,61,62,67,108,179,187,192,196,201,205,211,238,240,327,333,341,343,],[23,23,-7,-6,23,-8,-9,-5,23,23,-144,23,-15,23,-24,23,-10,-28,-143,23,23,23,23,-30,-29,]),'ELSE':([2,5,12,18,20,32,33,41,57,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,108,111,139,141,186,194,197,203,206,210,211,214,215,216,218,219,235,237,238,246,254,256,260,279,287,288,292,307,311,312,314,330,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-144,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-206,-167,-99,-109,-166,-171,240,-181,-79,-74,-143,-86,-94,-96,258,-98,-170,-161,-206,-180,-135,-89,258,-165,-82,-76,-87,240,-136,-91,-88,-92,]),'NULL':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[72,72,72,-122,-124,-106,-155,72,-105,-123,72,-104,72,72,72,-107,-108,72,72,72,72,-154,72,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,72,-120,-121,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EQUAL':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,149,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'DCL':([0,8,9,11,25,27,37,62,67,179,192,201,205,211,327,333,341,343,],[22,22,-7,-6,-8,-9,-5,22,-144,-15,-24,-10,-28,-143,22,22,-30,-29,]),'END':([9,11,25,27,37,62,64,67,137,179,192,201,205,211,327,333,334,336,341,343,],[-7,-6,-8,-9,-5,-206,-4,-144,-3,-15,-24,-10,-28,-143,-206,-206,337,340,-30,-29,]),'LPAREN':([7,13,14,16,17,21,28,29,34,38,42,44,45,46,47,50,51,52,53,55,58,59,60,65,76,85,89,94,97,98,110,117,125,128,136,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,162,163,164,166,169,171,173,175,177,200,204,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,270,272,275,276,293,296,297,298,299,304,305,306,325,],[-173,-178,-174,-172,-179,85,-177,117,85,-175,85,-176,125,-122,-124,-106,-155,85,-105,-123,85,-104,85,-23,85,85,-107,-108,85,125,85,85,85,-154,125,85,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,85,-120,-121,85,85,-42,-43,-47,-48,-46,222,-49,-44,225,-45,85,247,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,222,-46,222,-46,85,-51,85,-50,85,85,85,222,332,]),'NUM':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[14,14,-7,-6,14,14,-8,-9,14,-5,14,-122,-124,-106,-155,14,-105,-123,14,-104,14,14,14,-144,14,14,-107,14,-108,14,14,14,14,14,-154,14,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,14,-120,-121,14,14,-15,14,-24,14,14,-10,-28,14,14,14,-143,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-30,-29,]),'TO':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,273,287,288,292,301,302,311,314,320,322,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,305,-82,-76,-87,305,305,-136,-88,305,-201,]),'WHILE':([2,5,12,18,20,23,32,33,41,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,113,139,141,159,162,163,164,171,173,177,181,183,184,194,203,206,210,214,215,216,219,235,246,254,275,287,288,292,296,298,303,306,311,314,319,321,323,331,],[-70,-169,-67,-68,-69,110,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,110,-99,-109,-42,-43,-47,-48,-49,-44,-45,-195,-196,-194,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-204,-82,-76,-87,-51,-50,-200,-203,-136,-88,-199,-198,-202,-197,]),'TYPE':([0,8,9,11,25,27,37,62,67,179,192,201,205,211,327,333,341,343,],[26,26,-7,-6,-8,-9,-5,26,-144,-15,-24,-10,-28,-143,26,26,-30,-29,]),'REF':([65,102,103,123,161,190,227,285,300,332,],[-23,161,-21,161,161,161,-22,161,161,161,]),'LENGTH':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[28,28,-7,-6,28,28,-8,-9,28,-5,28,-122,-124,-106,-155,28,-105,-123,28,-104,28,28,28,-144,28,28,-107,28,-108,28,28,28,28,28,-154,28,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,28,-120,-121,28,28,-15,28,-24,28,28,-10,-28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'RPAREN':([2,5,12,18,20,32,33,41,57,65,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,117,125,139,140,141,159,162,163,164,165,166,167,168,169,170,171,172,173,177,193,194,195,202,203,206,210,214,215,216,219,221,235,246,249,254,263,267,278,284,286,287,288,292,295,296,298,309,311,314,315,317,318,328,329,335,338,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-23,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,194,203,-99,214,-109,-42,-43,-47,-48,-56,-41,-40,-57,-38,-37,-49,-39,-44,-45,235,-171,-182,246,-181,-79,-74,-86,-94,-96,-98,-55,-170,-180,-54,-135,296,298,-183,308,-31,-82,-76,-87,-58,-51,-50,-34,-136,-88,-52,-65,-60,-33,-32,339,342,]),'OD':([23,67,107,108,111,186,187,211,232,],[-206,-144,185,-206,-167,-166,-206,-143,277,]),'CHARS':([65,102,103,123,161,190,227,285,300,332,],[-23,160,-21,160,160,160,-22,160,160,160,]),'ARRAY':([65,102,103,123,161,190,227,285,300,332,],[-23,176,-21,176,176,176,-22,176,176,176,]),'SCONST':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[84,84,84,-122,-124,-106,-155,84,-105,-123,84,-104,84,84,84,-107,-108,84,84,84,84,-154,84,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,84,-120,-121,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'CCONST':([21,34,42,46,47,50,51,52,53,55,58,59,60,76,85,89,94,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[86,86,86,-122,-124,-106,-155,86,-105,-123,86,-104,86,86,86,-107,-108,86,86,86,86,-154,86,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,86,-120,-121,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'INT':([65,102,103,123,161,190,226,227,231,274,285,299,300,332,],[-23,163,-21,163,163,163,163,-22,163,163,163,163,163,163,]),'DIVIDE':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,93,96,98,99,101,136,139,141,194,203,206,210,214,216,219,235,246,254,272,287,288,311,],[-70,53,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-138,-97,-23,-139,53,-23,-99,-109,-171,-181,-79,-74,-86,53,-98,-170,-180,-135,-66,-82,-76,-136,]),'COLON':([2,5,6,12,18,20,32,33,41,45,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,130,131,132,134,139,141,194,203,206,210,213,214,215,216,219,235,246,254,264,265,272,287,288,292,311,314,],[-70,-169,61,-67,-68,-69,-168,-83,-71,126,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,207,-53,209,-77,-99,-109,-171,-181,-79,-74,255,-86,-94,-96,-98,-170,-180,-135,297,-53,-66,-82,-76,-87,-136,-88,]),'RETURN':([0,8,9,11,23,25,27,37,61,62,67,108,179,187,192,196,201,205,211,238,240,327,333,341,343,],[34,34,-7,-6,34,-8,-9,-5,34,34,-144,34,-15,34,-24,34,-10,-28,-143,34,34,34,34,-30,-29,]),'BY':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,273,287,288,292,311,314,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,304,-82,-76,-87,-136,-88,]),'ARROW':([2,4,5,6,12,18,20,21,24,32,33,34,41,42,45,46,47,50,51,52,53,55,57,58,59,60,68,76,80,85,89,90,94,97,98,110,117,125,128,136,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,194,200,203,206,207,208,209,210,217,222,223,225,226,229,235,236,239,244,246,255,257,258,272,287,288,293,297,299,304,305,],[-70,57,-169,-66,-67,-68,-69,91,-72,-168,-83,91,-71,91,-23,-122,-124,-106,-155,91,-105,-123,-73,91,-104,91,57,91,-72,91,-107,-66,-108,91,-23,91,91,91,-154,-23,91,57,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,91,-120,-121,91,91,-171,91,-181,-79,91,91,91,-74,91,91,91,91,91,91,-170,91,91,91,-180,91,91,91,-66,-82,-76,91,91,91,91,91,]),'LBRACKET':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,80,81,82,83,84,86,88,90,93,98,99,136,141,160,176,194,203,206,210,214,235,246,254,272,287,288,311,],[-70,58,-169,60,-67,-68,-69,-72,-168,-83,-71,-23,-73,58,-137,-134,-128,-141,-133,138,-126,-130,-72,-131,-132,-127,-142,-140,-129,60,-138,-23,-139,-23,58,220,226,-171,-181,-79,-74,-86,-170,-180,-135,60,-82,-76,-136,]),'MODULO':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,93,96,98,99,101,136,139,141,194,203,206,210,214,216,219,235,246,254,272,287,288,311,],[-70,50,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-138,-97,-23,-139,50,-23,-99,-109,-171,-181,-79,-74,-86,50,-98,-170,-180,-135,-66,-82,-76,-136,]),'$end':([8,9,11,25,27,36,37,40,62,63,64,67,137,179,192,201,205,211,341,343,],[-206,-7,-6,-8,-9,-1,-5,0,-206,-2,-4,-144,-3,-15,-24,-10,-28,-143,-30,-29,]),'OR':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,146,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'UPPER':([0,8,9,11,21,23,25,27,34,37,42,46,47,50,51,52,53,55,58,59,60,61,62,67,76,85,89,91,94,97,108,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[38,38,-7,-6,38,38,-8,-9,38,-5,38,-122,-124,-106,-155,38,-105,-123,38,-104,38,38,38,-144,38,38,-107,38,-108,38,38,38,38,38,-154,38,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,38,-120,-121,38,38,-15,38,-24,38,38,-10,-28,38,38,38,-143,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-30,-29,]),'ELSIF':([2,5,12,18,20,32,33,41,57,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,108,111,139,141,186,194,197,203,206,210,211,214,215,216,218,219,235,237,238,246,254,256,260,279,287,288,292,307,311,312,314,330,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-144,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-206,-167,-99,-109,-166,-171,239,-181,-79,-74,-143,-86,-94,-96,257,-98,-170,-161,-206,-180,-135,-89,293,-165,-82,-76,-87,239,-136,-91,-88,-92,]),'LTEQUAL':([2,5,12,18,20,32,33,41,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,148,-138,-93,-97,-23,-139,-95,-99,-109,-171,-181,-79,-74,-86,-94,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'MINUS':([2,4,5,6,12,18,20,21,24,32,33,34,41,42,45,46,47,50,51,52,53,55,57,58,59,60,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,90,93,95,96,97,98,99,101,110,117,125,128,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,194,200,203,206,207,208,209,210,214,215,216,217,219,222,223,225,226,229,235,236,239,244,246,254,255,257,258,272,287,288,293,297,299,304,305,311,],[-70,55,-169,-66,-67,-68,-69,89,-72,-168,-83,89,-71,89,-23,-122,-124,-106,-155,89,-105,-123,-73,89,-104,89,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,89,-140,-100,-129,-66,-138,55,-97,89,-23,-139,-95,89,89,89,-154,-23,89,-99,-109,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,89,-120,-121,89,89,-171,89,-181,-79,89,89,89,-74,-86,55,-96,89,-98,89,89,89,89,89,-170,89,89,89,-180,-135,89,89,89,-66,-82,-76,89,89,89,89,89,-136,]),'IN':([2,5,12,18,20,32,33,41,57,65,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,139,141,182,194,203,206,210,214,215,216,219,230,235,246,254,272,287,288,311,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-23,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,147,-138,-93,-97,-23,-139,-95,-99,-109,231,-171,-181,-79,-74,-86,-94,-96,-98,274,-170,-180,-135,-66,-82,-76,-136,]),'NOT':([21,34,42,46,47,50,51,52,53,55,58,59,60,85,97,110,117,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[94,94,94,-122,-124,-106,-155,94,-105,-123,94,-104,94,94,94,94,94,94,-154,94,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,94,-120,-121,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'PLUS':([2,4,5,6,12,18,20,24,32,33,41,45,57,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,86,87,88,90,93,95,96,98,99,101,136,139,141,194,203,206,210,214,215,216,219,235,246,254,272,287,288,311,],[-70,46,-169,-66,-67,-68,-69,-72,-168,-83,-71,-23,-73,-101,-137,-134,-128,-141,-133,-103,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-138,46,-97,-23,-139,-95,-23,-99,-109,-171,-181,-79,-74,-86,46,-96,-98,-170,-180,-135,-66,-82,-76,-136,]),'CHAR':([65,102,103,123,161,190,226,227,231,274,285,299,300,332,],[-23,171,-21,171,171,171,171,-22,171,171,171,171,171,171,]),'IF':([0,8,9,11,21,23,25,27,34,37,42,51,52,58,60,61,62,67,85,97,108,110,117,125,128,138,179,187,192,196,200,201,205,207,208,209,211,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,341,343,],[42,42,-7,-6,97,42,-8,-9,97,-5,97,-155,97,97,97,42,42,-144,97,97,42,97,97,97,-154,97,-15,42,-24,42,97,-10,-28,97,97,97,-143,97,97,97,97,97,97,97,42,97,42,97,97,97,97,97,97,97,97,97,42,42,-30,-29,]),'RETURNS':([308,],[325,]),'SYN':([0,8,9,11,25,27,37,62,67,179,192,201,205,211,327,333,341,343,],[43,43,-7,-6,-8,-9,-5,43,-144,-15,-24,-10,-28,-143,43,43,-30,-29,]),'ID':([0,8,9,11,15,21,22,23,25,26,27,34,37,42,43,46,47,50,51,52,53,55,58,59,60,61,62,65,67,76,85,89,91,94,97,102,103,106,108,110,117,123,125,128,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,178,179,180,187,190,191,192,196,198,200,201,205,207,208,209,211,217,222,223,225,226,227,229,231,236,238,239,240,244,247,255,257,258,274,285,293,297,299,300,304,305,310,327,332,333,341,343,],[45,45,-7,-6,65,98,65,98,-8,65,-9,98,-5,98,65,-122,-124,-106,-155,98,-105,-123,98,-104,98,136,45,-23,-144,98,98,-107,98,-108,98,65,-21,65,98,98,98,65,98,-154,98,-115,-112,-117,-118,-113,-125,-119,-114,-111,-110,-116,98,-120,-121,98,98,65,65,-15,65,98,65,65,-24,98,65,98,-10,-28,98,98,98,-143,98,98,98,98,98,-22,98,65,98,98,98,98,98,65,98,98,98,65,65,98,98,98,65,98,98,65,45,65,45,-30,-29,]),'FI':([2,5,12,18,20,32,33,41,57,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,86,87,88,90,92,93,95,96,98,99,101,108,111,139,141,186,194,197,203,206,210,211,214,215,216,219,235,237,238,241,246,254,259,279,281,287,288,291,292,294,307,311,314,324,],[-70,-169,-67,-68,-69,-168,-83,-71,-73,-144,-101,-137,-134,-128,-141,-133,-103,-85,-126,-130,-102,-72,-131,-132,-127,-142,-140,-100,-129,-66,-84,-138,-93,-97,-23,-139,-95,-206,-167,-99,-109,-166,-171,242,-181,-79,-74,-143,-86,-94,-96,-98,-170,-161,-206,282,-180,-135,292,-165,-162,-82,-76,-90,-87,314,-164,-136,-88,-163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'result_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'do_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'mode_definition':([26,191,],[115,115,]),'left_element':([60,],[132,]),'statement':([0,8,62,327,333,],[8,62,62,62,62,]),'string_element':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'result_spec':([308,],[326,]),'composite_mode':([102,123,161,190,285,300,332,],[167,167,167,167,167,167,167,]),'character_string_literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'else_clause':([197,307,],[241,324,]),'declaration_list':([22,180,],[104,228,]),'operator2':([95,215,],[156,156,]),'empty_literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'primitive_value':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'discrete_mode':([102,123,161,190,226,231,274,285,299,300,332,],[169,169,169,169,270,275,306,169,270,169,169,]),'result':([34,],[118,]),'synonym_list':([43,198,],[124,243,]),'action':([0,8,23,61,62,108,187,196,238,240,327,333,],[19,19,19,135,19,19,19,19,19,19,19,19,]),'synonym_definition':([43,198,],[122,122,]),'discrete_mode_name':([102,123,161,190,226,231,274,285,299,300,332,],[175,175,175,175,175,175,175,175,175,175,175,]),'action_statement_nullable':([23,108,187,238,],[107,186,232,279,]),'else_expression':([218,260,],[259,294,]),'call_action':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[24,24,80,24,80,80,80,80,80,24,24,80,80,80,80,24,80,80,80,80,80,80,80,24,24,80,80,80,80,80,80,80,80,80,80,80,24,80,24,80,80,80,80,80,80,80,80,80,24,24,]),'action_statement':([0,8,23,62,108,187,196,238,240,327,333,],[25,25,108,25,108,108,238,108,238,25,25,]),'string_concatenation_operator':([4,95,215,],[49,155,155,]),'element_mode':([300,],[318,]),'index_mode_list':([226,299,],[271,316,]),'right_element':([209,],[252,]),'procedure_statement':([0,8,62,327,333,],[27,27,27,27,27,]),'value_array_element':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'formal_parameter':([247,310,],[286,286,]),'integer_mode':([102,123,161,190,226,231,274,285,299,300,332,],[159,159,159,159,159,159,159,159,159,159,159,]),'initialization':([174,],[224,]),'builtin_name':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'boolean_mode':([102,123,161,190,226,231,274,285,299,300,332,],[162,162,162,162,162,162,162,162,162,162,162,]),'assignment_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'operand4':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[87,87,87,87,87,87,139,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'step_enumeration':([106,],[181,]),'start_element':([60,],[133,]),'literal_range':([222,225,226,299,],[263,267,268,268,]),'identifier':([0,8,15,21,22,23,26,34,42,43,52,58,60,61,62,76,85,91,97,102,106,108,110,117,123,125,138,153,156,158,161,178,180,187,190,191,196,198,200,207,208,209,217,222,223,225,226,229,231,236,238,239,240,244,247,255,257,258,274,285,293,297,299,300,304,305,310,327,332,333,],[6,6,66,90,103,6,103,90,90,103,90,90,90,90,6,90,90,90,90,166,182,6,90,90,166,90,90,90,90,90,166,103,103,6,166,103,6,103,90,90,90,90,90,90,90,90,272,90,276,90,6,90,6,90,103,90,90,90,276,166,90,90,272,166,90,90,103,6,166,6,]),'operand0':([21,34,42,52,58,60,85,97,110,117,125,138,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'operator1':([92,],[153,]),'array_mode':([102,123,161,190,285,300,332,],[168,168,168,168,168,168,168,]),'array_slice':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'operand1':([21,34,42,52,58,60,85,97,110,117,125,138,153,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[95,95,95,95,95,95,95,95,95,95,95,95,215,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'then_clause':([121,280,],[197,307,]),'synonym_statement':([0,8,62,327,333,],[11,11,11,11,11,]),'newmode_list':([26,191,],[116,234,]),'procedure_definition':([126,],[205,]),'mode':([102,123,161,190,285,300,332,],[174,199,221,233,309,317,335,]),'control_part':([23,],[109,]),'assigning_operator':([4,],[52,]),'statement_nullable':([8,62,327,333,],[63,137,334,336,]),'for_control':([23,],[113,]),'operand3':([21,34,42,52,58,60,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,219,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'operand2':([21,34,42,52,58,60,85,97,110,117,125,138,153,156,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[101,101,101,101,101,101,101,101,101,101,101,101,101,216,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'discrete_range_mode':([102,123,161,190,226,231,274,285,299,300,332,],[177,177,177,177,177,177,177,177,177,177,177,]),'parameter_list':([117,125,236,],[193,202,278,]),'expression_list':([58,138,208,],[129,212,250,]),'array_element':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'array_location':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[4,4,68,4,68,68,68,68,68,4,4,68,68,141,68,4,68,68,68,68,68,68,68,4,4,68,68,68,68,68,68,68,68,68,68,68,4,68,4,68,68,68,68,68,68,68,68,68,4,4,]),'builtin_call':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'newmode_statement':([0,8,62,327,333,],[9,9,9,9,9,]),'exit_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'membership_operator':([92,],[151,]),'dereferenced_reference':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'then_expression':([157,290,313,],[218,312,330,]),'string_mode':([102,123,161,190,285,300,332,],[165,165,165,165,165,165,165,]),'closed_dyadic_operator':([4,],[56,]),'index_mode':([226,299,],[269,269,]),'value_array_slice':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'range_enumeration':([106,],[183,]),'string_slice':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'arithmetic_additive_operator':([4,95,215,],[48,154,154,]),'location':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'reference_mode':([102,123,161,190,285,300,332,],[172,172,172,172,172,172,172,]),'conditional_expression':([21,34,42,52,58,60,85,97,110,117,125,138,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'lower_bound':([58,222,225,226,299,],[130,264,264,264,264,]),'identifier_list':([22,26,43,178,180,191,198,247,310,],[102,114,123,227,102,114,123,285,285,]),'literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'integer_literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,220,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,261,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'referenced_location':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'action_statement_list':([196,240,],[237,281,]),'elsif_expression':([218,],[260,]),'character_literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'if_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'boolean_literal':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'procedure_call':([0,8,21,23,34,42,52,58,60,61,62,76,85,91,97,108,110,117,125,138,153,156,158,187,196,200,207,208,209,217,222,223,225,226,229,236,238,239,240,244,255,257,258,293,297,299,304,305,327,333,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'formal_parameter_list':([247,310,],[284,329,]),'parenthesized_expression':([21,34,42,52,58,60,76,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'step_value':([273,],[302,]),'arithmetic_multiplicative_operator':([4,101,216,],[54,158,158,]),'bracketed_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'statement_list':([0,],[36,]),'declaration_statement':([0,8,62,327,333,],[37,37,37,37,37,]),'iteration':([106,],[184,]),'return_action':([0,8,23,61,62,108,187,196,238,240,327,333,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'program':([0,],[40,]),'expression':([21,34,42,52,58,60,85,97,110,117,125,138,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[100,120,121,127,131,134,140,157,188,195,195,213,245,249,251,253,256,265,266,265,265,273,195,280,283,289,290,291,313,249,265,322,323,]),'empty':([8,23,34,62,108,187,238,327,333,],[64,111,119,64,111,111,111,64,64,]),'mode_name':([102,123,161,190,285,300,332,],[170,170,170,170,170,170,170,]),'character_mode':([102,123,161,190,226,231,274,285,299,300,332,],[173,173,173,173,173,173,173,173,173,173,173,]),'while_control':([23,113,],[112,189,]),'relational_operator':([92,],[150,]),'monadic_operator':([21,34,42,52,58,60,85,97,110,117,125,138,153,156,158,200,207,208,209,217,222,223,225,226,229,236,239,244,255,257,258,293,297,299,304,305,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'end_value':([273,301,302,320,],[303,319,321,331,]),'string_length':([220,],[262,]),'upper_bound':([207,297,],[248,315,]),'declaration':([22,180,],[105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',156),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',157),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',161),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',165),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',166),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',175),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',185),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',189),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',190),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',199),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',210),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',214),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',215),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',219),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',220),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',229),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',230),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',236),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',237),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',242),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',243),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',244),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',245),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',249),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',257),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',258),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',259),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',260),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',264),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',268),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',272),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',285),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',286),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',290),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',294),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',298),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',305),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',312),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',313),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',317),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',321),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',325),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',329),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',330),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',339),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',340),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',344),
  ('location -> identifier','location',1,'p_location','Parser.py',355),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',356),
  ('location -> string_element','location',1,'p_location','Parser.py',357),
  ('location -> string_slice','location',1,'p_location','Parser.py',358),
  ('location -> array_element','location',1,'p_location','Parser.py',359),
  ('location -> array_slice','location',1,'p_location','Parser.py',360),
  ('location -> call_action','location',1,'p_location','Parser.py',361),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',365),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',369),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',373),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',377),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',381),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',385),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',389),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',393),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',394),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',401),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',415),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',416),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',420),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',428),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',433),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',437),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',441),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',442),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',458),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',465),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',466),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',473),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',474),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',482),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',483),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',490),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',491),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',492),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',503),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',504),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',505),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',509),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',510),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',514),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',518),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',519),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',533),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',534),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',538),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',539),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',543),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',548),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',560),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',561),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',562),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',563),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',567),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',568),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',569),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',570),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',571),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',575),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',579),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',587),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',591),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',592),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',596),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',600),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',604),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',615),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',616),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',621),
  ('action -> assignment_action','action',1,'p_action','Parser.py',622),
  ('action -> call_action','action',1,'p_action','Parser.py',623),
  ('action -> exit_action','action',1,'p_action','Parser.py',624),
  ('action -> result_action','action',1,'p_action','Parser.py',625),
  ('action -> return_action','action',1,'p_action','Parser.py',626),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',630),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',631),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',635),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',639),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',640),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',644),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',645),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',646),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',650),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',651),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',659),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',660),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',661),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',672),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',684),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',685),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',702),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',703),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',707),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',708),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',713),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',714),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',715),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',716),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',717),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',718),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',719),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',720),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',724),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',725),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',729),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',739),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',747),
  ('result -> expression','result',1,'p_result','Parser.py',751),
  ('result -> empty','result',1,'p_result','Parser.py',752),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',755),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',763),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',764),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',771),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',772),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',773),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',777),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',781),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',782),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',786),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',787),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',788),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',789),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',801),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',805),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',809),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',810),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',817),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',823),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C0DC7EA90548C959054696D6166C4D38'
    
_lr_action_items = {'LESS':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,139,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'OD':([40,99,120,123,124,195,196,230,243,],[-207,-144,-207,-167,201,-166,-207,-143,280,]),'ABS':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[24,24,-8,-6,24,24,-5,24,-7,24,-9,24,-108,-107,24,24,24,24,24,24,-144,24,-155,-114,-104,-105,24,24,-106,-115,-116,24,24,24,24,-113,24,-112,24,24,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,24,-120,-15,24,-10,-24,-154,24,-28,24,24,24,24,24,24,24,24,-143,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,-29,]),'PLUS':([13,16,18,20,26,27,29,31,35,38,41,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,109,137,138,175,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,-66,-68,-71,-67,-169,105,-83,-23,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,105,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-73,-99,-109,-23,-171,-181,-96,-86,-98,105,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'CHARS':([85,86,89,97,151,183,229,286,296,334,],[-23,161,-21,161,161,161,-22,161,161,161,]),'ARROW':([2,9,13,16,18,20,23,26,27,29,31,35,38,41,43,46,55,59,63,65,66,69,71,75,94,103,104,105,106,107,109,110,113,114,116,117,119,127,129,130,131,132,136,138,139,140,141,142,143,144,145,146,147,148,149,150,175,180,187,193,205,208,214,222,224,225,227,231,232,235,238,239,240,241,242,244,248,249,250,254,264,290,295,297,301,302,304,306,],[76,76,-70,-168,-72,-66,76,-68,-71,-67,-169,109,-83,-23,-69,76,-72,-66,-108,-107,76,109,76,-23,76,76,-155,-114,-104,-105,-73,76,76,-106,-115,-116,76,76,76,-113,76,-112,76,109,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,76,-120,-23,76,-171,-154,-181,76,76,76,76,76,76,76,-74,76,76,-170,76,76,-79,76,-180,76,76,76,-66,76,76,76,-76,-82,76,76,]),'EQUAL':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,145,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'ASC':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[4,4,-8,-6,4,4,-5,4,-7,4,-9,4,-108,-107,4,4,4,4,4,4,-144,4,-155,-114,-104,-105,4,4,-106,-115,-116,4,4,4,4,-113,4,-112,4,4,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,4,-120,-15,4,-10,-24,-154,4,-28,4,4,4,4,4,4,4,4,-143,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-30,-29,]),'LBRACKET':([13,16,18,20,26,27,29,31,35,38,41,43,48,49,51,52,53,54,55,56,58,59,62,64,67,69,72,73,74,75,77,78,109,138,157,161,175,187,205,218,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,94,-68,-71,-67,-169,110,-83,-23,-69,-132,-126,-140,129,-141,-129,-72,-137,-131,94,-128,-127,-133,110,-130,-138,-142,-23,-134,-139,-73,110,222,223,-23,-171,-181,-86,-74,-170,-79,-180,-135,94,-76,-82,-136,]),'ARRAY':([85,86,89,97,151,183,229,286,296,334,],[-23,157,-21,157,157,157,-22,157,157,157,]),'FI':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,99,109,120,123,134,137,138,187,195,205,211,212,213,217,218,219,220,230,232,239,242,248,252,255,256,258,289,291,292,294,301,302,314,315,316,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-144,-73,-207,-167,215,-99,-109,-171,-166,-181,-96,-207,-161,259,-86,-98,-94,-143,-74,-170,-79,-180,292,-135,-165,-162,-90,314,-87,-164,-76,-82,-88,-136,-163,]),'THEN':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,68,69,70,72,73,74,75,77,78,79,109,128,137,138,187,205,211,218,219,220,232,239,242,248,255,257,288,292,301,302,313,314,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,133,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,208,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,133,208,-87,-76,-82,208,-88,-136,]),'LENGTH':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[6,6,-8,-6,6,6,-5,6,-7,6,-9,6,-108,-107,6,6,6,6,6,6,-144,6,-155,-114,-104,-105,6,6,-106,-115,-116,6,6,6,6,-113,6,-112,6,6,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,6,-120,-15,6,-10,-24,-154,6,-28,6,6,6,6,6,6,6,6,-143,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-30,-29,]),'MODULO':([13,16,18,20,26,27,29,31,35,38,41,43,47,48,49,51,52,53,54,55,56,57,58,59,62,64,67,68,69,70,72,73,74,75,77,78,109,137,138,175,187,205,211,218,219,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,-66,-68,-71,-67,-169,114,-83,-23,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-128,-127,-133,-102,-101,114,-130,-138,-142,-23,-134,-139,-73,-99,-109,-23,-171,-181,114,-86,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'WHILE':([13,16,26,27,29,31,38,40,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,125,137,138,152,154,155,158,159,162,168,187,197,198,199,205,211,218,219,220,232,239,242,248,255,282,292,299,300,301,302,303,308,314,315,321,322,325,332,],[-70,-168,-68,-71,-67,-169,-83,119,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,119,-99,-109,-45,-44,-49,-43,-42,-47,-48,-171,-196,-197,-195,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-205,-87,-51,-50,-76,-82,-201,-204,-88,-136,-203,-199,-200,-198,]),'EXIT':([0,3,5,15,22,37,40,45,90,93,99,120,133,171,182,184,196,204,212,216,230,328,335,339,344,],[10,-8,-6,10,-5,-7,10,-9,10,10,-144,10,10,-15,-10,-24,10,-28,10,10,-143,10,10,-30,-29,]),'CCONST':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[51,51,51,51,-108,-107,51,51,51,51,-155,-114,-104,-105,51,51,-106,-115,-116,51,51,51,-113,51,-112,51,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,51,-120,51,-154,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'COLON':([13,16,20,26,27,29,31,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,176,177,187,189,190,205,209,211,218,219,220,232,239,242,248,255,260,264,265,292,301,302,314,315,],[-70,-168,93,-68,-71,-67,-169,-83,126,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,-99,-109,231,-77,-171,240,-53,-181,254,-96,-86,-98,-94,-74,-170,-79,-180,-135,295,-66,-53,-87,-76,-82,-88,-136,]),'RETURN':([0,3,5,15,22,37,40,45,90,93,99,120,133,171,182,184,196,204,212,216,230,328,335,339,344,],[9,-8,-6,9,-5,-7,9,-9,9,9,-144,9,9,-15,-10,-24,9,-28,9,9,-143,9,9,-30,-29,]),'SYN':([0,3,5,15,22,37,45,90,99,171,182,184,204,230,328,335,339,344,],[28,-8,-6,28,-5,-7,-9,28,-144,-15,-10,-24,-28,-143,28,28,-30,-29,]),'IF':([0,2,3,5,9,15,22,23,37,40,45,46,66,90,93,94,99,103,104,110,113,119,120,127,129,133,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[2,46,-8,-6,46,2,-5,46,-7,2,-9,46,46,2,2,46,-144,46,-155,46,46,46,2,46,46,2,-15,46,-10,-24,-154,2,-28,46,2,46,2,46,46,46,46,-143,46,46,46,46,46,46,46,46,46,46,46,46,46,46,2,2,-30,-29,]),'COMMA':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,85,87,89,96,102,109,137,138,152,153,154,155,156,158,159,160,162,163,164,166,167,168,169,186,187,190,205,209,211,218,219,220,221,226,232,234,236,239,242,248,255,262,263,266,270,274,277,278,285,292,298,299,300,301,302,310,314,315,317,318,319,327,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-23,170,172,179,185,-73,-99,-109,-45,-57,-44,-49,-56,-43,-42,-40,-47,-38,-19,-39,-37,-48,-41,238,-171,241,-181,241,-96,-86,-98,-94,-55,-18,-74,-14,-27,-170,-79,-180,-135,-63,297,-64,-20,-13,-54,241,309,-87,-58,-51,-50,-76,-82,-34,-88,-136,-52,-60,-65,-33,]),'LTEQUAL':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,143,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'UPPER':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[14,14,-8,-6,14,14,-5,14,-7,14,-9,14,-108,-107,14,14,14,14,14,14,-144,14,-155,-114,-104,-105,14,14,-106,-115,-116,14,14,14,14,-113,14,-112,14,14,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,14,-120,-15,14,-10,-24,-154,14,-28,14,14,14,14,14,14,14,14,-143,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-30,-29,]),'DO':([0,3,5,15,22,37,40,45,90,93,99,120,133,171,182,184,196,204,212,216,230,328,335,339,344,],[40,-8,-6,40,-5,-7,40,-9,40,40,-144,40,40,-15,-10,-24,40,-28,40,40,-143,40,40,-30,-29,]),'DCL':([0,3,5,15,22,37,45,90,99,171,182,184,204,230,328,335,339,344,],[12,-8,-6,12,-5,-7,-9,12,-144,-15,-10,-24,-28,-143,12,12,-30,-29,]),'SEMI':([7,8,9,13,16,17,18,26,27,29,31,32,36,38,39,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,80,81,82,83,84,85,87,88,95,96,98,101,102,109,118,121,125,137,138,152,153,154,155,156,158,159,160,162,163,164,166,167,168,169,174,187,192,194,197,198,199,201,202,205,211,215,218,219,220,221,226,228,232,233,234,236,237,239,242,248,255,259,270,274,280,282,292,298,299,300,301,302,303,308,311,314,315,318,319,321,322,325,330,332,336,340,342,343,],[-146,-149,-207,-70,-168,-150,-147,-68,-71,-67,-169,99,-151,-83,-152,-148,-69,-145,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-186,-187,-188,-185,-184,-23,-16,171,-189,-11,182,184,-25,-73,-194,196,-193,-99,-109,-45,-57,-44,-49,-56,-43,-42,-40,-47,-38,-19,-39,-37,-48,-41,230,-171,-153,-206,-196,-197,-195,-191,-192,-181,-96,-160,-86,-98,-94,-55,-18,-17,-74,-12,-14,-27,-26,-170,-79,-180,-135,-159,-20,-13,-190,-205,-87,-58,-51,-50,-76,-82,-201,-204,328,-88,-136,-60,-65,-203,-199,-200,335,-198,339,-36,344,-35,]),'TO':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,281,292,301,302,305,307,314,315,323,324,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,304,-87,-76,-82,304,304,-88,-136,304,-202,]),'ELSIF':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,99,109,120,123,134,137,138,187,195,205,207,211,212,213,218,219,220,230,232,239,242,248,251,253,255,256,292,294,301,302,312,314,315,331,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-144,-73,-207,-167,214,-99,-109,-171,-166,-181,249,-96,-207,-161,-86,-98,-94,-143,-74,-170,-79,-180,290,-89,-135,-165,-87,214,-76,-82,-91,-88,-136,-92,]),'AND':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,146,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'NOTEQ':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,150,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'NUM':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[21,21,-8,-6,21,21,-5,21,-7,21,-9,21,-108,-107,21,21,21,21,21,21,-144,21,-155,-114,-104,-105,21,21,-106,-115,-116,21,21,21,21,-113,21,-112,21,21,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,21,-120,-15,21,-10,-24,-154,21,-28,21,21,21,21,21,21,21,21,-143,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-30,-29,]),'IN':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,85,109,137,138,187,200,205,211,218,219,220,232,239,242,246,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,140,-23,-73,-99,-109,-171,245,-181,-96,-86,-98,-94,-74,-170,-79,284,-180,-135,-66,-76,-82,-136,]),'REF':([85,86,89,97,151,183,229,286,296,334,],[-23,151,-21,151,151,151,-22,151,151,151,]),'TIMES':([13,16,18,20,26,27,29,31,35,38,41,43,47,48,49,51,52,53,54,55,56,57,58,59,62,64,67,68,69,70,72,73,74,75,77,78,109,137,138,175,187,205,211,218,219,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,-66,-68,-71,-67,-169,106,-83,-23,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-128,-127,-133,-102,-101,106,-130,-138,-142,-23,-134,-139,-73,-99,-109,-23,-171,-181,106,-86,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RESULT':([0,3,5,15,22,37,40,45,90,93,99,120,133,171,182,184,196,204,212,216,230,328,335,339,344,],[23,-8,-6,23,-5,-7,23,-9,23,23,-144,23,23,-15,-10,-24,23,-28,23,23,-143,23,23,-30,-29,]),'CHAR':([85,86,89,97,151,183,222,229,245,284,286,296,297,334,],[-23,155,-21,155,155,155,155,-22,155,155,155,155,155,155,]),'PRINT':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[25,25,-8,-6,25,25,-5,25,-7,25,-9,25,-108,-107,25,25,25,25,25,25,-144,25,-155,-114,-104,-105,25,25,-106,-115,-116,25,25,25,25,-113,25,-112,25,25,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,25,-120,-15,25,-10,-24,-154,25,-28,25,25,25,25,25,25,25,25,-143,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-30,-29,]),'FOR':([40,],[122,]),'DOWN':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,85,109,137,138,187,200,205,211,218,219,220,232,239,242,248,255,281,292,301,302,305,314,315,324,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-23,-73,-99,-109,-171,246,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,307,-87,-76,-82,323,-88,-136,-202,]),'LOC':([85,152,153,154,155,156,158,159,160,162,163,166,167,168,169,221,298,299,300,310,318,319,337,],[-23,-45,-57,-44,-49,-56,-43,-42,-40,-47,-38,-39,-37,-48,-41,-55,-58,-51,-50,327,-60,-65,341,]),'ICONST':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,223,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[56,56,56,56,-108,-107,56,56,56,56,-155,-114,-104,-105,56,56,-106,-115,-116,56,56,56,-113,56,-112,56,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,56,-120,56,-154,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'$end':([3,5,11,15,19,22,37,45,90,91,92,99,171,173,182,184,204,230,339,344,],[-8,-6,-1,-207,0,-5,-7,-9,-207,-2,-4,-144,-15,-3,-10,-24,-28,-143,-30,-29,]),'CONCAT':([13,16,18,20,26,27,29,31,35,38,41,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,109,137,138,175,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,-66,-68,-71,-67,-169,117,-83,-23,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,117,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-73,-99,-109,-23,-171,-181,-96,-86,-98,117,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RBRACKET':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,152,154,155,158,159,162,168,177,178,187,190,191,205,209,210,211,218,219,220,232,239,242,248,255,261,262,263,266,267,268,272,273,276,277,278,279,292,293,299,300,301,302,314,315,317,320,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,-99,-109,-45,-44,-49,-43,-42,-47,-48,-75,232,-171,-80,242,-181,-80,255,-96,-86,-98,-94,-74,-170,-79,-180,-135,296,-63,-61,-64,298,-59,301,-78,302,-54,-80,-81,-87,315,-51,-50,-76,-82,-88,-136,-52,-62,]),'LOWER':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[30,30,-8,-6,30,30,-5,30,-7,30,-9,30,-108,-107,30,30,30,30,30,30,-144,30,-155,-114,-104,-105,30,30,-106,-115,-116,30,30,30,30,-113,30,-112,30,30,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,30,-120,-15,30,-10,-24,-154,30,-28,30,30,30,30,30,30,30,30,-143,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-30,-29,]),'MINUS':([2,9,13,16,18,20,23,26,27,29,31,35,38,41,43,46,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,66,67,68,69,70,72,73,74,75,77,78,94,103,104,105,106,107,109,110,113,114,116,117,119,127,129,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,175,180,187,193,205,208,211,214,218,219,220,222,224,225,227,231,232,235,238,239,240,241,242,244,248,249,250,254,255,264,290,295,297,301,302,304,306,315,],[65,65,-70,-168,-72,-66,65,-68,-71,-67,-169,116,-83,-23,-69,65,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,116,-128,-127,65,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,65,65,-155,-114,-104,-105,-73,65,65,-106,-115,-116,65,65,65,-113,65,-112,65,-99,-109,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,65,-120,-23,65,-171,-154,-181,65,-96,65,-86,-98,116,65,65,65,65,65,-74,65,65,-170,65,65,-79,65,-180,65,65,65,-135,-66,65,65,65,-76,-82,65,65,-136,]),'END':([3,5,22,37,45,90,92,99,171,173,182,184,204,230,328,333,335,338,339,344,],[-8,-6,-5,-7,-9,-207,-4,-144,-15,-3,-10,-24,-28,-143,-207,336,-207,342,-30,-29,]),'LPAREN':([1,2,4,6,9,14,21,23,24,25,30,34,41,46,63,65,66,71,75,85,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,152,154,155,158,159,162,163,165,168,169,175,180,193,203,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,262,264,282,283,290,295,297,299,300,304,306,308,329,],[-178,66,-173,-177,66,-175,-174,66,-172,-179,-176,103,127,66,-108,-107,66,66,127,-23,66,66,-155,-114,-104,-105,66,66,-106,-115,-116,66,66,66,-113,66,-112,66,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,66,-120,-45,-44,-49,-43,-42,-47,224,227,-48,-46,127,66,-154,247,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,224,-46,224,-46,66,66,66,-51,-50,66,66,224,334,]),'TYPE':([0,3,5,15,22,37,45,90,99,171,182,184,204,230,328,335,339,344,],[33,-8,-6,33,-5,-7,-9,33,-144,-15,-10,-24,-28,-143,33,33,-30,-29,]),'GTEQUAL':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,141,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RETURNS':([311,],[329,]),'INT':([85,86,89,97,151,183,222,229,245,284,286,296,297,334,],[-23,162,-21,162,162,162,162,-22,162,162,162,162,162,162,]),'NULL':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[53,53,53,53,-108,-107,53,53,53,53,-155,-114,-104,-105,53,53,-106,-115,-116,53,53,53,-113,53,-112,53,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,53,-120,53,-154,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'DIVIDE':([13,16,18,20,26,27,29,31,35,38,41,43,47,48,49,51,52,53,54,55,56,57,58,59,62,64,67,68,69,70,72,73,74,75,77,78,109,137,138,175,187,205,211,218,219,232,239,242,248,255,264,301,302,315,],[-70,-168,-72,-66,-68,-71,-67,-169,107,-83,-23,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-128,-127,-133,-102,-101,107,-130,-138,-142,-23,-134,-139,-73,-99,-109,-23,-171,-181,107,-86,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'GREATER':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,144,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RPAREN':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,85,103,109,127,135,137,138,152,153,154,155,156,158,159,160,162,163,166,167,168,169,186,187,188,205,206,211,218,219,220,221,232,239,242,248,255,269,271,275,277,285,287,292,298,299,300,301,302,310,314,315,317,318,319,326,327,337,341,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-23,187,-73,205,218,-99,-109,-45,-57,-44,-49,-56,-43,-42,-40,-47,-38,-39,-37,-48,-41,-182,-171,239,-181,248,-96,-86,-98,-94,-55,-74,-170,-79,-180,-135,299,300,-183,-54,-31,311,-87,-58,-51,-50,-76,-82,-34,-88,-136,-52,-60,-65,-32,-33,340,343,]),'TRUE':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[73,73,73,73,-108,-107,73,73,73,73,-155,-114,-104,-105,73,73,-106,-115,-116,73,73,73,-113,73,-112,73,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,73,-120,73,-154,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'BOOL':([85,86,89,97,151,183,222,229,245,284,286,296,297,334,],[-23,168,-21,168,168,168,168,-22,168,168,168,168,168,168,]),'ELSE':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,99,109,120,123,134,137,138,187,195,205,207,211,212,213,218,219,220,230,232,239,242,248,251,253,255,256,292,294,301,302,312,314,315,331,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-144,-73,-207,-167,216,-99,-109,-171,-166,-181,250,-96,-207,-161,-86,-98,-94,-143,-74,-170,-79,-180,250,-89,-135,-165,-87,216,-76,-82,-91,-88,-136,-92,]),'SCONST':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[74,74,74,74,-108,-107,74,74,74,74,-155,-114,-104,-105,74,74,-106,-115,-116,74,74,74,-113,74,-112,74,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,74,-120,74,-154,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ID':([0,2,3,5,9,10,12,15,22,23,28,33,37,40,45,46,63,65,66,71,76,85,86,89,90,93,94,97,99,103,104,105,106,107,110,113,114,116,117,119,120,122,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,151,170,171,172,179,180,182,183,184,185,193,196,204,208,212,214,216,222,224,225,227,229,230,231,235,238,240,241,244,245,247,249,250,254,284,286,290,295,296,297,304,306,309,328,334,335,339,344,],[41,75,-8,-6,75,83,85,41,-5,75,85,85,-7,75,-9,75,-108,-107,75,75,75,-23,85,-21,41,175,75,85,-144,75,-155,-114,-104,-105,75,75,-106,-115,-116,75,75,85,75,75,-113,75,-112,75,75,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,75,-120,85,85,-15,85,85,75,-10,85,-24,85,-154,75,-28,75,75,75,75,75,75,75,75,-22,-143,75,75,75,75,75,75,85,85,75,75,75,85,85,75,75,85,75,75,75,85,41,85,41,-30,-29,]),'FALSE':([2,9,23,46,63,65,66,71,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[78,78,78,78,-108,-107,78,78,78,78,-155,-114,-104,-105,78,78,-106,-115,-116,78,78,78,-113,78,-112,78,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,78,-120,78,-154,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'READ':([0,2,3,5,9,15,22,23,37,40,45,46,63,65,66,71,76,90,93,94,99,103,104,105,106,107,110,113,114,116,117,119,120,127,129,130,131,132,133,136,139,140,141,142,143,144,145,146,147,148,149,150,171,180,182,184,193,196,204,208,212,214,216,222,224,225,227,230,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,339,344,],[1,1,-8,-6,1,1,-5,1,-7,1,-9,1,-108,-107,1,1,1,1,1,1,-144,1,-155,-114,-104,-105,1,1,-106,-115,-116,1,1,1,1,-113,1,-112,1,1,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,1,-120,-15,1,-10,-24,-154,1,-28,1,1,1,1,1,1,1,1,-143,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-30,-29,]),'NOT':([2,9,23,46,66,94,103,104,105,106,107,110,113,114,116,117,119,127,129,130,131,132,136,139,140,141,142,143,144,145,146,147,148,149,150,180,193,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[63,63,63,63,63,63,63,-155,-114,-104,-105,63,63,-106,-115,-116,63,63,63,-113,63,-112,63,-123,-125,-122,-118,-124,-121,-119,-117,-111,-110,63,-120,63,-154,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'BY':([13,16,26,27,29,31,38,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,281,292,301,302,314,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-85,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,-84,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,306,-87,-76,-82,-88,-136,]),'PROC':([126,],[203,]),'OR':([13,16,26,27,29,31,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,64,67,68,69,70,72,73,74,75,77,78,79,109,137,138,187,205,211,218,219,220,232,239,242,248,255,264,301,302,315,],[-70,-168,-68,-71,-67,-169,-83,-69,-100,-132,-126,-140,-103,-141,-129,-72,-137,-97,-131,-66,-93,-128,-127,-133,-102,-101,-95,-130,-138,-142,-23,-134,-139,142,-73,-99,-109,-171,-181,-96,-86,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'ASSIGN':([13,16,18,20,26,27,29,31,35,38,41,43,59,75,85,89,97,100,105,106,107,108,109,111,112,114,115,116,117,152,153,154,155,156,158,159,160,162,163,164,166,167,168,169,175,181,187,200,205,221,229,232,239,242,248,298,299,300,301,302,318,319,],[-70,-168,-72,-66,-68,-71,-67,-169,104,-83,-23,-69,-66,-23,-23,-21,180,183,-114,-104,-105,-156,-73,-158,-157,-106,193,-115,-116,-45,-57,-44,-49,-56,-43,-42,-40,-47,-38,225,-39,-37,-48,-41,-23,235,-171,244,-181,-55,-22,-74,-170,-79,-180,-58,-51,-50,-76,-82,-60,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'right_element':([231,],[272,]),'integer_literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,223,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,268,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'character_literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'string_mode':([86,97,151,183,286,296,334,],[156,156,156,156,156,156,156,]),'statement':([0,15,90,328,335,],[15,90,90,90,90,]),'string_concatenation_operator':([35,60,220,],[111,130,130,]),'conditional_expression':([2,9,23,46,66,94,103,110,113,119,127,129,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'label_id':([10,],[84,]),'assignment_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'index_mode_list':([222,297,],[261,320,]),'expression_list':([110,129,241,],[191,210,279,]),'exit_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'array_element':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'discrete_mode':([86,97,151,183,222,245,284,286,296,297,334,],[163,163,163,163,262,282,308,163,163,262,163,]),'arithmetic_multiplicative_operator':([35,70,211,],[112,136,136,]),'statement_nullable':([15,90,328,335,],[91,173,333,338,]),'dereferenced_reference':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'return_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'call_action':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[18,55,55,18,55,18,55,55,55,55,18,18,55,55,55,55,55,18,55,55,55,18,55,55,55,18,55,18,55,18,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,18,18,]),'index_mode':([222,297,],[263,263,]),'element_mode':([296,],[318,]),'operand3':([2,9,23,46,66,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[57,57,57,57,57,57,57,57,57,57,57,57,57,219,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'closed_dyadic_operator':([35,],[115,]),'then_clause':([61,257,],[134,294,]),'location':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'identifier':([0,2,9,12,15,23,28,33,40,46,66,71,76,86,90,93,94,97,103,110,113,119,120,122,127,129,131,133,136,149,151,170,172,179,180,183,185,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,245,247,249,250,254,284,286,290,295,296,297,304,306,309,328,334,335,],[20,59,59,89,20,59,89,89,20,59,59,59,59,169,20,59,59,169,59,59,59,59,20,200,59,59,59,20,59,59,169,89,89,89,59,169,89,20,59,20,59,20,264,59,59,59,59,59,59,59,59,59,283,89,59,59,59,283,169,59,59,169,264,59,59,89,20,169,20,]),'formal_parameter_list':([247,309,],[287,326,]),'result':([9,],[80,]),'operand1':([2,9,23,46,66,94,103,110,113,119,127,129,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[60,60,60,60,60,60,60,60,60,60,60,60,220,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'discrete_range_mode':([86,97,151,183,222,245,284,286,296,297,334,],[152,152,152,152,152,152,152,152,152,152,152,]),'array_mode':([86,97,151,183,286,296,334,],[153,153,153,153,153,153,153,]),'else_expression':([207,251,],[252,291,]),'value_array_slice':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'mode_definition':([33,185,],[102,102,]),'left_element':([94,],[176,]),'result_spec':([311,],[330,]),'newmode_list':([33,185,],[101,237,]),'parameter_list':([103,127,238,],[188,206,275,]),'then_expression':([128,288,313,],[207,312,331,]),'string_element':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'operator2':([60,220,],[131,131,]),'value_array_element':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'builtin_name':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'action':([0,15,40,90,93,120,133,196,212,216,328,335,],[32,32,32,32,174,32,32,32,32,32,32,32,]),'composite_mode':([86,97,151,183,286,296,334,],[160,160,160,160,160,160,160,]),'declaration_statement':([0,15,90,328,335,],[22,22,22,22,22,]),'referenced_location':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'for_control':([40,],[125,]),'declaration':([12,170,],[87,87,]),'monadic_operator':([2,9,23,46,66,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'if_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'step_enumeration':([122,],[197,]),'program':([0,],[19,]),'do_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'elsif_expression':([207,],[251,]),'reference_mode':([86,97,151,183,286,296,334,],[166,166,166,166,166,166,166,]),'procedure_definition':([126,],[204,]),'string_slice':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'bracketed_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'start_element':([94,],[178,]),'synonym_definition':([28,179,],[96,96,]),'lower_bound':([110,222,224,227,297,],[189,260,260,260,260,]),'while_control':([40,125,],[118,202,]),'builtin_call':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'string_length':([223,],[267,]),'action_statement':([0,15,40,90,120,133,196,212,216,328,335,],[3,3,120,3,120,212,120,120,212,3,3,]),'arithmetic_additive_operator':([35,60,220,],[108,132,132,]),'operand4':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[47,47,47,47,47,137,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'declaration_list':([12,170,],[88,228,]),'newmode_statement':([0,15,90,328,335,],[37,37,37,37,37,]),'else_clause':([134,294,],[217,316,]),'synonym_statement':([0,15,90,328,335,],[5,5,5,5,5,]),'control_part':([40,],[121,]),'relational_operator':([79,],[148,]),'result_action':([0,15,40,90,93,120,133,196,212,216,328,335,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'primitive_value':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'action_statement_nullable':([40,120,196,212,],[124,195,243,256,]),'statement_list':([0,],[11,]),'upper_bound':([240,295,],[276,317,]),'procedure_call':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'parenthesized_expression':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'identifier_list':([12,28,33,170,172,179,185,247,309,],[86,97,100,86,229,97,100,286,286,]),'discrete_mode_name':([86,97,151,183,222,245,284,286,296,297,334,],[165,165,165,165,165,165,165,165,165,165,165,]),'assigning_operator':([35,],[113,]),'mode_name':([86,97,151,183,286,296,334,],[167,167,167,167,167,167,167,]),'boolean_literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'operand2':([2,9,23,46,66,94,103,110,113,119,127,129,131,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[70,70,70,70,70,70,70,70,70,70,70,70,211,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'array_slice':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'action_statement_list':([133,216,],[213,258,]),'character_mode':([86,97,151,183,222,245,284,286,296,297,334,],[154,154,154,154,154,154,154,154,154,154,154,]),'expression':([2,9,23,46,66,94,103,110,113,119,127,129,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[61,81,95,128,135,177,186,190,192,194,186,209,234,253,257,265,265,270,265,273,274,186,277,278,281,288,289,293,313,277,265,321,324,]),'empty':([9,15,40,90,120,196,212,328,335,],[82,92,123,92,123,123,123,92,92,]),'iteration':([122,],[199,]),'end_value':([281,305,307,323,],[303,322,325,332,]),'membership_operator':([79,],[147,]),'synonym_list':([28,179,],[98,233,]),'boolean_mode':([86,97,151,183,222,245,284,286,296,297,334,],[158,158,158,158,158,158,158,158,158,158,158,]),'integer_mode':([86,97,151,183,222,245,284,286,296,297,334,],[159,159,159,159,159,159,159,159,159,159,159,]),'operator1':([79,],[149,]),'empty_literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_location':([0,2,9,15,23,40,46,66,71,76,90,93,94,103,110,113,119,120,127,129,131,133,136,149,180,196,208,212,214,216,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,328,335,],[35,69,69,35,69,35,69,69,69,138,35,35,69,69,69,69,69,35,69,69,69,35,69,69,69,35,69,35,69,35,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,35,35,]),'initialization':([164,],[226,]),'step_value':([281,],[305,]),'formal_parameter':([247,309,],[285,285,]),'mode':([86,97,151,183,286,296,334,],[164,181,221,236,310,319,337,]),'literal_range':([222,224,227,297,],[266,269,271,266,]),'character_string_literal':([2,9,23,46,66,71,94,103,110,113,119,127,129,131,136,149,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'range_enumeration':([122,],[198,]),'operand0':([2,9,23,46,66,94,103,110,113,119,127,129,180,208,214,222,224,225,227,231,235,238,240,241,244,249,250,254,290,295,297,304,306,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'procedure_statement':([0,15,90,328,335,],[45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',176),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',180),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',181),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',190),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',201),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',205),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',206),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',220),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',227),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',228),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',233),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',236),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',240),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',255),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',259),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',263),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',267),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',281),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',285),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',289),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',296),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',308),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',312),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',316),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',320),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',321),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',330),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',331),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',335),
  ('location -> identifier','location',1,'p_location','Parser.py',346),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',347),
  ('location -> string_element','location',1,'p_location','Parser.py',348),
  ('location -> string_slice','location',1,'p_location','Parser.py',349),
  ('location -> array_element','location',1,'p_location','Parser.py',350),
  ('location -> array_slice','location',1,'p_location','Parser.py',351),
  ('location -> call_action','location',1,'p_location','Parser.py',352),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',356),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',360),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',364),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',368),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',372),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',376),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',380),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',384),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',385),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',392),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',396),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',407),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',419),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',420),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',424),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',428),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',432),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',433),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',448),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',449),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',456),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',457),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',464),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',465),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',473),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',474),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',505),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',514),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',515),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',524),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',539),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',562),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',566),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',570),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',578),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',587),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',591),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',595),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',606),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',607),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',612),
  ('action -> assignment_action','action',1,'p_action','Parser.py',613),
  ('action -> call_action','action',1,'p_action','Parser.py',614),
  ('action -> exit_action','action',1,'p_action','Parser.py',615),
  ('action -> result_action','action',1,'p_action','Parser.py',616),
  ('action -> return_action','action',1,'p_action','Parser.py',617),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',626),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',630),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',631),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',641),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',646),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',652),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',663),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',675),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',676),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',693),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',694),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',698),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',699),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',715),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',716),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',720),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',721),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',730),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',734),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',738),
  ('result -> expression','result',1,'p_result','Parser.py',742),
  ('result -> empty','result',1,'p_result','Parser.py',743),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',746),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',754),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',755),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',762),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',763),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',764),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',768),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',780),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',792),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',796),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',800),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',801),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',808),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',814),
]

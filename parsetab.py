
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B5C79805207E99A5B249627F392B9E2A'
    
_lr_action_items = {'NULL':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[74,74,74,74,74,-108,74,-107,74,-115,74,-105,-155,74,-104,-116,-114,-106,74,74,74,74,-125,-120,74,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,74,-112,74,-154,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'END':([1,13,20,33,42,110,112,124,170,195,197,202,206,221,330,333,335,336,342,343,],[-9,-8,-7,-6,-5,-4,-207,-144,-15,-3,-28,-10,-24,-143,-207,-207,338,339,-30,-29,]),'DIVIDE':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,151,194,199,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-72,-66,-67,85,-23,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,85,-102,-73,-99,-109,-23,-171,-181,85,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'IF':([0,1,3,11,13,17,20,31,33,41,42,47,64,80,81,84,87,88,97,100,109,112,114,124,130,132,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[3,-9,47,3,-8,3,-7,47,-6,47,-5,47,47,3,47,47,-155,47,47,3,47,3,47,-144,3,47,-154,3,-15,-28,47,-10,-24,47,3,47,3,-143,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,3,3,-30,-29,]),'ABS':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[25,-9,25,25,-8,25,-7,25,-6,25,-5,25,25,-108,25,25,-107,25,25,-115,25,-105,-155,25,-104,-116,-114,-106,25,25,25,25,25,-144,25,25,-125,-120,25,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,25,-112,25,-154,25,-15,-28,25,-10,-24,25,25,25,25,-143,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-30,-29,]),'EQUAL':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,136,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'LENGTH':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[10,-9,10,10,-8,10,-7,10,-6,10,-5,10,10,-108,10,10,-107,10,10,-115,10,-105,-155,10,-104,-116,-114,-106,10,10,10,10,10,-144,10,10,-125,-120,10,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,10,-112,10,-154,10,-15,-28,10,-10,-24,10,10,10,10,-143,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-30,-29,]),'WHILE':([4,8,11,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,103,131,149,163,165,166,176,178,179,185,187,188,189,194,199,217,218,219,220,223,224,241,243,258,267,291,295,296,297,298,305,308,312,316,317,318,321,332,],[-69,-67,97,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,97,-99,-109,-197,-195,-196,-43,-42,-47,-44,-45,-48,-49,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-205,-87,-76,-82,-204,-201,-50,-51,-88,-136,-203,-199,-200,-198,]),'AND':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,142,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'DO':([0,1,11,13,17,20,33,42,80,100,112,124,130,168,170,197,202,206,211,213,221,330,333,342,343,],[11,-9,11,-8,11,-7,-6,-5,11,11,11,-144,11,11,-15,-28,-10,-24,11,11,-143,11,11,-30,-29,]),'OD':([11,96,98,100,124,167,168,221,230,],[-207,-167,162,-207,-144,-166,-207,-143,270,]),'MODULO':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,151,194,199,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-72,-66,-67,94,-23,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,94,-102,-73,-99,-109,-23,-171,-181,94,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'FOR':([11,],[99,]),'ELSIF':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,96,100,124,129,131,149,167,194,199,207,213,214,217,218,219,220,221,223,224,241,243,249,253,257,258,291,293,295,296,312,314,316,331,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-167,-207,-144,212,-99,-109,-166,-171,-181,252,-207,-161,-94,-96,-86,-98,-143,-74,-79,-170,-180,289,-89,-165,-135,-87,212,-76,-82,-88,-91,-136,-92,]),'NUM':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[16,-9,16,16,-8,16,-7,16,-6,16,-5,16,16,-108,16,16,-107,16,16,-115,16,-105,-155,16,-104,-116,-114,-106,16,16,16,16,16,-144,16,16,-125,-120,16,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,16,-112,16,-154,16,-15,-28,16,-10,-24,16,16,16,16,-143,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-30,-29,]),'NOTEQ':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,134,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'DCL':([0,1,13,17,20,33,42,112,124,170,197,202,206,221,330,333,342,343,],[14,-9,-8,14,-7,-6,-5,14,-144,-15,-28,-10,-24,-143,14,14,-30,-29,]),'CHARS':([105,106,108,115,186,204,239,285,306,334,],[-23,171,-21,171,171,171,-22,171,171,171,]),'RETURNS':([311,],[329,]),'INT':([105,106,108,115,186,204,227,235,239,268,285,306,307,334,],[-23,179,-21,179,179,179,179,179,-22,179,179,179,179,179,]),'READ':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[21,-9,21,21,-8,21,-7,21,-6,21,-5,21,21,-108,21,21,-107,21,21,-115,21,-105,-155,21,-104,-116,-114,-106,21,21,21,21,21,-144,21,21,-125,-120,21,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,21,-112,21,-154,21,-15,-28,21,-10,-24,21,21,21,21,-143,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-30,-29,]),'FI':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,96,100,124,129,131,149,167,194,199,209,213,214,217,218,219,220,221,223,224,241,243,251,255,257,258,288,290,291,293,295,296,312,315,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-167,-207,-144,210,-99,-109,-166,-171,-181,254,-207,-161,-94,-96,-86,-98,-143,-74,-79,-170,-180,291,-162,-165,-135,312,-90,-87,-164,-76,-82,-88,-163,-136,]),'ID':([0,1,3,11,13,14,17,20,29,31,33,34,36,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,99,100,105,106,108,109,112,114,115,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,186,190,191,197,200,202,203,204,205,206,208,211,212,213,221,222,225,226,227,229,232,233,235,236,239,240,242,245,250,252,259,268,285,289,299,301,304,306,307,309,330,333,334,342,343,],[22,-9,66,66,-8,105,22,-7,105,66,-6,105,122,66,-5,66,66,-108,66,66,-107,151,66,-115,66,-105,-155,66,-104,-116,-114,-106,66,105,66,-23,105,-21,66,22,66,105,-144,66,66,-125,-120,66,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,66,-112,66,-154,66,-15,105,105,105,-28,66,-10,105,105,105,-24,66,66,66,66,-143,66,66,66,105,66,66,66,66,66,-22,66,105,66,66,66,66,105,105,66,66,66,66,105,66,105,22,22,105,-30,-29,]),'MINUS':([3,4,5,6,8,9,22,23,26,31,32,35,37,41,43,46,47,48,49,50,52,53,54,57,58,60,61,63,64,65,66,67,68,70,71,72,73,74,75,77,78,79,81,82,84,85,87,88,89,90,93,94,95,97,109,114,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,157,194,199,200,208,212,217,218,219,220,222,223,224,225,226,229,232,233,235,236,240,241,243,245,250,252,258,259,277,289,295,296,299,301,304,307,316,],[76,-69,-72,-66,-67,82,-23,-168,-70,76,-68,-169,-83,76,-71,-126,76,-72,-66,-131,-129,-101,-130,-127,-103,82,-137,-134,76,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,76,-115,76,-105,-155,76,-104,-116,-114,-106,-73,76,76,76,-99,76,-125,-120,76,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,76,-112,-109,76,-23,-154,-171,-181,76,76,76,82,-96,-86,-98,76,-74,-79,76,76,76,76,76,76,76,76,-170,-180,76,76,76,-135,76,-66,76,-76,-82,76,76,76,76,-136,]),'UPPER':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[12,-9,12,12,-8,12,-7,12,-6,12,-5,12,12,-108,12,12,-107,12,12,-115,12,-105,-155,12,-104,-116,-114,-106,12,12,12,12,12,-144,12,12,-125,-120,12,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,12,-112,12,-154,12,-15,-28,12,-10,-24,12,12,12,12,-143,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-30,-29,]),'LPAREN':([3,10,12,15,16,18,21,22,25,27,28,31,41,47,55,62,64,66,76,81,82,84,85,87,88,89,90,93,94,97,105,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,157,174,175,176,178,179,184,185,187,188,189,196,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,266,267,277,278,289,297,299,301,304,305,307,308,329,],[64,-177,-175,109,-174,-179,-178,114,-172,-173,-176,64,64,64,64,-108,64,114,-107,64,-115,64,-105,-155,64,-104,-116,-114,-106,64,-23,64,64,64,-125,-120,64,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,64,-112,64,114,-154,-46,232,-43,-42,-47,236,-44,-45,-48,-49,242,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-46,236,-46,236,64,236,64,64,64,-50,64,-51,334,]),'LOC':([105,172,173,174,176,177,178,179,180,181,184,185,187,188,189,237,303,305,308,310,323,324,337,],[-23,-40,-56,-41,-43,-39,-42,-47,-57,-37,-38,-44,-45,-48,-49,-55,-58,-50,-51,327,-65,-60,341,]),'OR':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,137,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'NOT':([3,31,41,47,64,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[62,62,62,62,62,62,-115,62,-105,-155,62,-104,-116,-114,-106,62,62,62,62,-125,-120,62,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,62,-112,62,-154,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'GTEQUAL':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,143,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'PLUS':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,151,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-72,-66,-67,93,-23,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-23,-171,-181,93,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'ASC':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[27,-9,27,27,-8,27,-7,27,-6,27,-5,27,27,-108,27,27,-107,27,27,-115,27,-105,-155,27,-104,-116,-114,-106,27,27,27,27,27,-144,27,27,-125,-120,27,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,27,-112,27,-154,27,-15,-28,27,-10,-24,27,27,27,27,-143,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-30,-29,]),'LOWER':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[28,-9,28,28,-8,28,-7,28,-6,28,-5,28,28,-108,28,28,-107,28,28,-115,28,-105,-155,28,-104,-116,-114,-106,28,28,28,28,28,-144,28,28,-125,-120,28,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,28,-112,28,-154,28,-15,-28,28,-10,-24,28,28,28,28,-143,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,-29,]),'SYN':([0,1,13,17,20,33,42,112,124,170,197,202,206,221,330,333,342,343,],[29,-9,-8,29,-7,-6,-5,29,-144,-15,-28,-10,-24,-143,29,29,-30,-29,]),'ELSE':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,96,100,124,129,131,149,167,194,199,207,213,214,217,218,219,220,221,223,224,241,243,249,253,257,258,291,293,295,296,312,314,316,331,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-167,-207,-144,211,-99,-109,-166,-171,-181,250,-207,-161,-94,-96,-86,-98,-143,-74,-79,-170,-180,250,-89,-165,-135,-87,211,-76,-82,-88,-91,-136,-92,]),'DOWN':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,105,131,149,164,194,199,217,218,219,220,223,224,241,243,258,269,291,295,296,300,312,316,320,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-23,-99,-109,228,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,302,-87,-76,-82,319,-88,-136,-202,]),'ICONST':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,231,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[61,61,61,61,61,-108,61,-107,61,-115,61,-105,-155,61,-104,-116,-114,-106,61,61,61,61,-125,-120,61,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,61,-112,61,-154,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'LESS':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,141,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'RESULT':([0,1,11,13,17,20,33,42,80,100,112,124,130,168,170,197,202,206,211,213,221,330,333,342,343,],[31,-9,31,-8,31,-7,-6,-5,31,31,31,-144,31,31,-15,-28,-10,-24,31,31,-143,31,31,-30,-29,]),'PRINT':([0,1,3,11,13,17,20,31,33,41,42,47,55,62,64,69,76,80,81,82,84,85,87,88,89,90,93,94,97,100,109,112,114,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,168,170,197,200,202,206,208,211,212,213,221,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,342,343,],[18,-9,18,18,-8,18,-7,18,-6,18,-5,18,18,-108,18,18,-107,18,18,-115,18,-105,-155,18,-104,-116,-114,-106,18,18,18,18,18,-144,18,18,-125,-120,18,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,18,-112,18,-154,18,-15,-28,18,-10,-24,18,18,18,18,-143,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-30,-29,]),'LTEQUAL':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,140,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'EXIT':([0,1,11,13,17,20,33,42,80,100,112,124,130,168,170,197,202,206,211,213,221,330,333,342,343,],[36,-9,36,-8,36,-7,-6,-5,36,36,36,-144,36,36,-15,-28,-10,-24,36,36,-143,36,36,-30,-29,]),'RPAREN':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,105,109,114,131,148,149,172,173,174,176,177,178,179,180,181,184,185,187,188,189,192,193,194,198,199,217,218,219,220,223,224,237,241,243,258,264,275,282,283,284,286,291,295,296,303,305,308,310,312,316,322,323,324,326,327,337,341,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-23,194,199,-99,219,-109,-40,-56,-41,-43,-39,-42,-47,-57,-37,-38,-44,-45,-48,-49,-182,241,-171,243,-181,-94,-96,-86,-98,-74,-79,-55,-170,-180,-135,-54,305,308,-183,-31,311,-87,-76,-82,-58,-50,-51,-34,-88,-136,-52,-65,-60,-32,-33,340,344,]),'CHAR':([105,106,108,115,186,204,227,235,239,268,285,306,307,334,],[-23,189,-21,189,189,189,189,189,-22,189,189,189,189,189,]),'IN':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,105,131,149,164,194,199,217,218,219,220,223,224,228,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,133,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-23,-99,-109,227,-171,-181,-94,-96,-86,-98,-74,-79,268,-170,-180,-135,-66,-76,-82,-136,]),'TYPE':([0,1,13,17,20,33,42,112,124,170,197,202,206,221,330,333,342,343,],[34,-9,-8,34,-7,-6,-5,34,-144,-15,-28,-10,-24,-143,34,34,-30,-29,]),'ARROW':([3,4,5,6,8,9,22,23,26,31,32,35,37,41,43,47,48,49,53,55,62,64,66,76,81,82,84,85,87,88,89,90,93,94,95,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,157,194,199,200,208,212,222,223,224,225,226,229,232,233,235,236,240,241,243,245,250,252,259,277,289,295,296,299,301,304,307,],[69,-69,-72,-66,-67,95,-23,-168,-70,69,-68,-169,-83,69,-71,69,-72,-66,95,69,-108,69,-23,-107,69,-115,69,-105,-155,69,-104,-116,-114,-106,-73,69,69,69,69,-125,-120,69,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,69,-112,95,69,-23,-154,-171,-181,69,69,69,69,-74,-79,69,69,69,69,69,69,69,69,-170,-180,69,69,69,69,-66,69,-76,-82,69,69,69,69,]),'RBRACKET':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,154,155,158,159,176,178,179,185,187,188,189,194,199,215,216,217,218,219,220,223,224,241,243,258,260,261,262,263,264,265,271,272,278,279,280,281,291,294,295,296,305,308,312,316,322,325,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-75,223,224,-80,-43,-42,-47,-44,-45,-48,-49,-171,-181,258,-80,-94,-96,-86,-98,-74,-79,-170,-180,-135,-78,295,-81,-80,-54,296,-59,303,-63,306,-61,-64,-87,316,-76,-82,-50,-51,-88,-136,-52,-62,]),'FALSE':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[70,70,70,70,70,-108,70,-107,70,-115,70,-105,-155,70,-104,-116,-114,-106,70,70,70,70,-125,-120,70,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,70,-112,70,-154,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'SCONST':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[68,68,68,68,68,-108,68,-107,68,-115,68,-105,-155,68,-104,-116,-114,-106,68,68,68,68,-125,-120,68,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,68,-112,68,-154,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'COLON':([4,6,8,22,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,153,154,159,160,194,199,216,217,218,219,220,223,224,241,243,258,273,274,277,291,295,296,312,316,],[-69,80,-67,113,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,222,-77,-53,226,-171,-181,259,-94,-96,-86,-98,-74,-79,-170,-180,-135,-53,304,-66,-87,-76,-82,-88,-136,]),'ARRAY':([105,106,108,115,186,204,239,285,306,334,],[-23,183,-21,183,183,183,-22,183,183,183,]),'TRUE':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[71,71,71,71,71,-108,71,-107,71,-115,71,-105,-155,71,-104,-116,-114,-106,71,71,71,71,-125,-120,71,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,71,-112,71,-154,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TO':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,269,291,295,296,300,302,312,316,319,320,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,299,-87,-76,-82,299,299,-88,-136,299,-202,]),'PROC':([113,],[196,]),'LBRACKET':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,61,63,65,66,68,70,71,72,74,75,77,95,149,151,171,183,194,199,219,223,224,241,243,258,277,295,296,316,],[-69,-72,81,-67,88,-23,-168,-70,-68,-169,-83,-71,-126,-72,81,-131,-129,88,-130,-127,132,-137,-134,-133,-23,-142,-139,-138,-128,-141,-132,-140,-73,88,-23,231,235,-171,-181,-86,-74,-79,-170,-180,-135,81,-76,-82,-136,]),'TIMES':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,151,194,199,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-72,-66,-67,89,-23,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,89,-102,-73,-99,-109,-23,-171,-181,89,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'SEMI':([2,4,5,7,8,19,23,24,26,30,32,35,37,38,39,40,41,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,101,102,103,104,105,107,116,117,118,120,121,122,123,125,126,127,131,149,152,156,161,162,163,165,166,169,172,173,174,176,177,178,179,180,181,182,184,185,187,188,189,194,199,210,217,218,219,220,223,224,234,237,238,241,243,244,246,247,248,254,258,267,270,276,287,291,295,296,297,298,303,305,308,311,312,316,317,318,321,323,324,328,332,338,339,340,344,],[-148,-69,-147,-152,-67,-149,-168,-150,-70,-146,-68,-169,-83,-145,124,-151,-207,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-194,168,-193,170,-23,-16,202,-11,-189,-25,206,-185,-184,-188,-187,-186,-99,-109,221,-153,-206,-191,-197,-195,-196,-192,-40,-56,-41,-43,-39,-42,-47,-57,-37,-19,-38,-44,-45,-48,-49,-171,-181,-160,-94,-96,-86,-98,-74,-79,-18,-55,-17,-170,-180,-14,-12,-27,-26,-159,-135,-205,-190,-20,-13,-87,-76,-82,-204,-201,-58,-50,-51,330,-88,-136,-203,-199,-200,-65,-60,333,-198,342,343,-36,-35,]),'RETURN':([0,1,11,13,17,20,33,42,80,100,112,124,130,168,170,197,202,206,211,213,221,330,333,342,343,],[41,-9,41,-8,41,-7,-6,-5,41,41,41,-144,41,41,-15,-28,-10,-24,41,41,-143,41,41,-30,-29,]),'CONCAT':([4,5,6,8,9,22,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,151,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-72,-66,-67,90,-23,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,90,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-23,-171,-181,90,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),'COMMA':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,105,107,108,117,120,131,149,159,172,173,174,176,177,178,179,180,181,182,184,185,187,188,189,192,194,199,216,217,218,219,220,223,224,234,237,241,243,244,247,258,263,264,276,278,280,281,284,287,291,295,296,303,305,308,310,312,316,322,323,324,327,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-23,190,191,203,205,-99,-109,225,-40,-56,-41,-43,-39,-42,-47,-57,-37,-19,-38,-44,-45,-48,-49,240,-171,-181,225,-94,-96,-86,-98,-74,-79,-18,-55,-170,-180,-14,-27,-135,225,-54,-20,-63,307,-64,309,-13,-87,-76,-82,-58,-50,-51,-34,-88,-136,-52,-65,-60,-33,]),'BY':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,269,291,295,296,312,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,301,-87,-76,-82,-88,-136,]),'ASSIGN':([4,5,6,8,9,22,23,26,32,35,37,43,49,66,82,83,85,86,89,90,91,92,93,94,95,105,108,115,119,151,164,172,173,174,176,177,178,179,180,181,182,184,185,187,188,189,194,199,201,223,224,237,239,241,243,295,296,303,305,308,323,324,],[-69,-72,-66,-67,87,-23,-168,-70,-68,-169,-83,-71,-66,-23,-115,-157,-105,157,-104,-116,-158,-156,-114,-106,-73,-23,-21,200,204,-23,229,-40,-56,-41,-43,-39,-42,-47,-57,-37,233,-38,-44,-45,-48,-49,-171,-181,245,-74,-79,-55,-22,-170,-180,-76,-82,-58,-50,-51,-65,-60,]),'REF':([105,106,108,115,186,204,239,285,306,334,],[-23,186,-21,186,186,186,-22,186,186,186,]),'BOOL':([105,106,108,115,186,204,227,235,239,268,285,306,307,334,],[-23,188,-21,188,188,188,188,188,-22,188,188,188,188,188,]),'CCONST':([3,31,41,47,55,62,64,76,81,82,84,85,87,88,89,90,93,94,97,109,114,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[77,77,77,77,77,-108,77,-107,77,-115,77,-105,-155,77,-104,-116,-114,-106,77,77,77,77,-125,-120,77,-119,-118,-111,-110,-124,-123,-117,-122,-121,-113,77,-112,77,-154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'THEN':([4,8,23,26,32,35,37,43,46,48,49,50,51,52,53,54,56,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,128,131,149,194,199,217,218,219,220,223,224,241,243,256,258,291,292,295,296,312,313,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,130,-129,-101,-130,-85,-127,-103,-84,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,208,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,130,-135,-87,208,-76,-82,-88,208,-136,]),'$end':([1,13,17,20,33,42,44,45,110,111,112,124,170,195,197,202,206,221,342,343,],[-9,-8,-207,-7,-6,-5,0,-1,-4,-2,-207,-144,-15,-3,-28,-10,-24,-143,-30,-29,]),'GREATER':([4,8,23,26,32,35,37,43,46,48,49,50,52,53,54,57,58,59,60,61,63,65,66,67,68,70,71,72,73,74,75,77,78,79,95,131,149,194,199,217,218,219,220,223,224,241,243,258,277,295,296,316,],[-69,-67,-168,-70,-68,-169,-83,-71,-126,-72,-66,-131,-129,-101,-130,-127,-103,144,-93,-137,-134,-133,-23,-100,-142,-139,-138,-128,-97,-141,-132,-140,-95,-102,-73,-99,-109,-171,-181,-94,-96,-86,-98,-74,-79,-170,-180,-135,-66,-76,-82,-136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'index_mode':([235,307,],[280,280,]),'arithmetic_multiplicative_operator':([9,78,218,],[83,150,150,]),'assigning_operator':([9,],[84,]),'string_slice':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'return_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'identifier':([0,3,11,14,17,29,31,34,41,47,55,64,69,80,81,84,88,97,99,100,106,109,112,114,115,130,132,135,146,150,168,186,190,191,200,203,204,205,208,211,212,213,222,225,226,227,229,232,233,235,236,240,242,245,250,252,259,268,285,289,299,301,304,306,307,309,330,333,334,],[6,49,6,108,6,108,49,108,49,49,49,49,49,49,49,49,49,49,164,6,174,49,6,49,174,6,49,49,49,49,6,174,108,108,49,108,174,108,49,6,49,6,49,49,49,266,49,49,49,277,49,49,108,49,49,49,49,266,174,49,49,49,49,174,277,108,6,6,174,]),'builtin_call':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'expression':([3,31,41,47,64,81,84,88,97,109,114,132,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[51,118,126,128,148,154,156,159,161,192,192,216,244,253,256,260,263,264,269,273,276,273,273,192,287,290,292,294,313,317,320,264,273,]),'dereferenced_reference':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'parenthesized_expression':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'array_location':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[9,53,9,9,53,53,53,53,53,149,9,53,53,53,53,9,53,9,53,9,53,53,53,53,9,53,53,9,53,9,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,9,9,]),'iteration':([99,],[165,]),'integer_literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,231,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,271,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'monadic_operator':([3,31,41,47,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'synonym_definition':([29,203,],[117,117,]),'procedure_definition':([113,],[197,]),'arithmetic_additive_operator':([9,60,217,],[92,147,147,]),'string_length':([231,],[272,]),'action_statement':([0,11,17,100,112,130,168,211,213,330,333,],[13,100,13,100,13,213,100,213,100,13,13,]),'synonym_list':([29,203,],[116,246,]),'value_array_element':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'declaration':([14,190,],[107,107,]),'closed_dyadic_operator':([9,],[86,]),'statement':([0,17,112,330,333,],[17,112,112,112,112,]),'result_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'newmode_statement':([0,17,112,330,333,],[20,20,20,20,20,]),'operand0':([3,31,41,47,64,81,84,88,97,109,114,132,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'elsif_expression':([207,],[249,]),'string_element':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'formal_parameter_list':([242,309,],[286,326,]),'procedure_call':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'call_action':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[5,48,5,5,48,48,48,48,48,48,5,48,48,48,48,5,48,5,48,5,48,48,48,48,5,48,48,5,48,5,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,5,5,]),'literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'then_expression':([128,292,313,],[207,314,331,]),'array_element':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'formal_parameter':([242,309,],[284,284,]),'step_value':([269,],[300,]),'start_element':([81,],[155,]),'discrete_mode_name':([106,115,186,204,227,235,268,285,306,307,334,],[175,175,175,175,175,175,175,175,175,175,175,]),'operand3':([3,31,41,47,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,220,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'builtin_name':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaration_statement':([0,17,112,330,333,],[42,42,42,42,42,]),'synonym_statement':([0,17,112,330,333,],[33,33,33,33,33,]),'do_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'element_mode':([306,],[324,]),'declaration_list':([14,190,],[104,238,]),'else_clause':([129,293,],[209,315,]),'mode':([106,115,186,204,285,306,334,],[182,201,237,247,310,323,337,]),'else_expression':([207,249,],[251,288,]),'bracketed_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'value_array_slice':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'initialization':([182,],[234,]),'operand1':([3,31,41,47,64,81,84,88,97,109,114,132,135,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[60,60,60,60,60,60,60,60,60,60,60,60,217,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'character_literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'array_slice':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'program':([0,],[44,]),'statement_list':([0,],[45,]),'for_control':([11,],[103,]),'referenced_location':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'character_mode':([106,115,186,204,227,235,268,285,306,307,334,],[185,185,185,185,185,185,185,185,185,185,185,]),'procedure_statement':([0,17,112,330,333,],[1,1,1,1,1,]),'exit_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'mode_definition':([34,205,],[120,120,]),'left_element':([81,],[153,]),'expression_list':([88,132,225,],[158,215,262,]),'reference_mode':([106,115,186,204,285,306,334,],[177,177,177,177,177,177,177,]),'parameter_list':([109,114,240,],[193,198,283,]),'integer_mode':([106,115,186,204,227,235,268,285,306,307,334,],[178,178,178,178,178,178,178,178,178,178,178,]),'array_mode':([106,115,186,204,285,306,334,],[180,180,180,180,180,180,180,]),'empty':([11,17,41,100,112,168,213,330,333,],[96,110,125,96,110,96,96,110,110,]),'action_statement_nullable':([11,100,168,213,],[98,167,230,257,]),'conditional_expression':([3,31,41,47,64,81,84,88,97,109,114,132,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'range_enumeration':([99,],[163,]),'operator1':([59,],[135,]),'discrete_mode':([106,115,186,204,227,235,268,285,306,307,334,],[184,184,184,184,267,278,297,184,184,278,184,]),'membership_operator':([59,],[138,]),'action':([0,11,17,80,100,112,130,168,211,213,330,333,],[39,39,39,152,39,39,39,39,39,39,39,39,]),'primitive_value':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'action_statement_list':([130,211,],[214,255,]),'label_id':([36,],[123,]),'right_element':([222,],[261,]),'result':([41,],[127,]),'index_mode_list':([235,307,],[279,325,]),'step_enumeration':([99,],[166,]),'boolean_literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'upper_bound':([226,304,],[265,322,]),'end_value':([269,300,302,319,],[298,318,321,332,]),'character_string_literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'composite_mode':([106,115,186,204,285,306,334,],[172,172,172,172,172,172,172,]),'string_mode':([106,115,186,204,285,306,334,],[173,173,173,173,173,173,173,]),'operator2':([60,217,],[146,146,]),'assignment_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'boolean_mode':([106,115,186,204,227,235,268,285,306,307,334,],[176,176,176,176,176,176,176,176,176,176,176,]),'relational_operator':([59,],[139,]),'operand4':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[67,67,67,67,131,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'result_spec':([311,],[328,]),'lower_bound':([88,232,235,236,307,],[160,274,274,274,274,]),'newmode_list':([34,205,],[121,248,]),'string_concatenation_operator':([9,60,217,],[91,145,145,]),'empty_literal':([3,31,41,47,55,64,81,84,88,97,109,114,132,135,146,150,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'literal_range':([232,235,236,307,],[275,281,282,281,]),'then_clause':([51,256,],[129,293,]),'location':([0,3,11,17,31,41,47,55,64,69,80,81,84,88,97,100,109,112,114,130,132,135,146,150,168,200,208,211,212,213,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,330,333,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'while_control':([11,103,],[101,169,]),'if_action':([0,11,17,80,100,112,130,168,211,213,330,333,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'control_part':([11,],[102,]),'mode_name':([106,115,186,204,285,306,334,],[181,181,181,181,181,181,181,]),'identifier_list':([14,29,34,190,191,203,205,242,309,],[106,115,119,106,239,115,119,285,285,]),'discrete_range_mode':([106,115,186,204,227,235,268,285,306,307,334,],[187,187,187,187,187,187,187,187,187,187,187,]),'statement_nullable':([17,112,330,333,],[111,195,335,336,]),'operand2':([3,31,41,47,64,81,84,88,97,109,114,132,135,146,200,208,212,222,225,226,229,232,233,235,236,240,245,250,252,259,289,299,301,304,307,],[78,78,78,78,78,78,78,78,78,78,78,78,78,218,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',176),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',180),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',181),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',190),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',201),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',205),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',206),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',220),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',227),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',228),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',233),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',236),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',240),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',255),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',259),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',263),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',267),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',281),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',285),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',289),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',296),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',308),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',312),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',316),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',320),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',321),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',330),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',331),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',335),
  ('location -> identifier','location',1,'p_location','Parser.py',346),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',347),
  ('location -> string_element','location',1,'p_location','Parser.py',348),
  ('location -> string_slice','location',1,'p_location','Parser.py',349),
  ('location -> array_element','location',1,'p_location','Parser.py',350),
  ('location -> array_slice','location',1,'p_location','Parser.py',351),
  ('location -> call_action','location',1,'p_location','Parser.py',352),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',356),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',360),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',364),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',368),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',372),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',376),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',380),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',384),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',385),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',392),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',396),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',407),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',411),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',419),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',420),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',424),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',428),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',432),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',433),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',448),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',449),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',456),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',457),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',464),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',465),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',473),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',474),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',483),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',505),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',514),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',515),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',524),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',539),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',562),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',566),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',570),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',578),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',587),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',591),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',595),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',606),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',607),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',612),
  ('action -> assignment_action','action',1,'p_action','Parser.py',613),
  ('action -> call_action','action',1,'p_action','Parser.py',614),
  ('action -> exit_action','action',1,'p_action','Parser.py',615),
  ('action -> result_action','action',1,'p_action','Parser.py',616),
  ('action -> return_action','action',1,'p_action','Parser.py',617),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',626),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',630),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',631),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',641),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',646),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',652),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',663),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',675),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',676),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',693),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',694),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',698),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',699),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',715),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',716),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',720),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',721),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',730),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',734),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',738),
  ('result -> expression','result',1,'p_result','Parser.py',742),
  ('result -> empty','result',1,'p_result','Parser.py',743),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',746),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',754),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',755),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',762),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',763),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',764),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',768),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',780),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',792),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',796),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',800),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',801),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',808),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',814),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT TYPE IF THEN INT NUM PROC TRUE ELSE BY END FI NULL CHAR DCL UPPER OD FOR EXIT TO LOC FALSE BOOL LOWER ARRAY SYN ELSIF WHILE ABS RESULT DO RETURN DOWN READ IN CHARS RETURNS ASC REF PRINT LENGTHprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'LOC':([50,129,130,131,134,135,136,137,138,139,140,141,142,143,145,209,292,294,297,311,320,321,342,],[-23,-49,-44,-58,-41,-39,-42,-45,-47,-51,-50,-43,-46,-40,-59,-57,-53,-52,-60,332,-67,-62,347,]),'DOWN':([5,10,11,13,14,23,29,36,50,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,181,190,192,219,221,224,225,226,235,236,241,265,267,273,298,300,309,317,323,324,328,],[-69,-73,-71,-172,-171,-72,-85,-70,-23,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,230,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-143,-137,305,-78,-89,330,-84,-138,-90,-204,]),'EXIT':([0,15,16,17,28,32,39,41,51,93,120,123,128,186,187,196,204,205,217,243,247,314,336,337,346,349,354,355,357,],[20,20,-9,-7,-5,-8,-6,20,20,20,-147,20,-10,20,-28,-24,20,-15,-146,20,20,20,20,20,20,-32,-31,-30,-29,]),'ELSIF':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,93,94,115,120,157,159,180,190,192,203,217,219,221,224,225,226,227,235,236,241,246,247,265,267,269,272,290,298,300,317,318,323,324,326,340,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-209,-170,-75,-147,-101,-111,-169,-184,-174,242,-146,-76,-88,-96,-98,-100,270,-183,-173,-81,-164,-209,-143,-137,302,-91,-168,-78,-89,-84,242,-138,-90,-93,-94,]),'READ':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[2,2,2,-9,-7,-5,-8,2,-6,2,2,2,2,-110,2,2,2,-109,2,2,2,2,2,-126,-106,-108,2,-124,-158,-125,-107,2,-147,2,-10,2,2,-113,-117,-115,-127,-116,-120,-121,-118,2,-114,-119,-112,-122,-123,2,2,2,-28,-24,-157,2,-15,2,2,2,2,-146,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-32,-31,-30,-29,]),'OD':([15,92,93,94,120,180,186,217,232,],[-209,179,-209,-170,-147,-169,-209,-146,277,]),'TIMES':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,78,79,81,83,85,86,87,88,115,151,157,159,190,192,219,221,225,226,235,236,241,260,265,267,298,317,323,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,107,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,107,-145,-68,-103,-130,-75,-23,-101,-111,-184,-174,-76,-88,107,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'LPAREN':([2,8,9,12,21,25,26,27,30,34,37,42,43,50,52,55,56,57,64,74,80,89,96,100,101,106,107,109,112,113,116,117,118,119,129,130,137,138,139,140,141,142,143,144,147,151,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,188,200,208,210,211,212,218,228,229,234,239,240,242,250,257,260,266,270,271,275,276,292,293,294,296,302,307,308,310,313,],[-181,64,-182,-175,100,-176,101,-179,-180,64,-178,-177,64,-23,64,156,-110,64,64,100,-109,64,64,64,64,-126,-106,-108,64,-124,-158,-125,-107,64,-49,-44,-45,-47,-51,-50,-48,-46,210,211,64,100,64,-113,-117,-115,-127,-116,-120,-121,-118,64,-114,-119,-112,-122,-123,64,64,233,-157,64,64,64,64,64,64,64,64,64,64,64,64,210,-48,64,64,64,210,-48,-53,64,-52,64,64,64,64,210,334,]),'NULL':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[58,58,58,58,-110,58,58,-109,58,58,58,58,-126,-106,-108,58,-124,-158,-125,-107,58,58,58,-113,-117,-115,-127,-116,-120,-121,-118,58,-114,-119,-112,-122,-123,58,58,-157,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FOR':([15,],[95,]),'SYN':([0,16,17,28,32,39,41,120,123,128,187,196,205,217,314,336,337,346,349,354,355,357,],[4,-9,-7,-5,-8,-6,4,-147,4,-10,-28,-24,-15,-146,4,4,4,4,-32,-31,-30,-29,]),'NUM':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[42,42,42,-9,-7,-5,-8,42,-6,42,42,42,42,-110,42,42,42,-109,42,42,42,42,42,-126,-106,-108,42,-124,-158,-125,-107,42,-147,42,-10,42,42,-113,-117,-115,-127,-116,-120,-121,-118,42,-114,-119,-112,-122,-123,42,42,42,-28,-24,-157,42,-15,42,42,42,42,-146,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-32,-31,-30,-29,]),'$end':([3,16,17,22,28,32,39,41,120,121,122,123,128,187,196,202,205,217,349,354,355,357,],[0,-9,-7,-1,-5,-8,-6,-209,-147,-2,-4,-209,-10,-28,-24,-3,-15,-146,-32,-31,-30,-29,]),'END':([16,17,28,32,39,120,122,123,128,187,196,202,205,217,314,335,336,337,344,345,346,349,352,354,355,357,],[-9,-7,-5,-8,-6,-147,-4,-209,-10,-28,-24,-3,-15,-146,-209,343,-209,-209,350,351,-209,-32,356,-31,-30,-29,]),'BOOL':([47,49,50,127,133,194,212,216,231,274,278,295,296,334,],[140,-21,-23,140,140,140,140,-22,140,140,140,140,140,140,]),'DO':([0,15,16,17,28,32,39,41,51,93,120,123,128,186,187,196,204,205,217,243,247,314,336,337,346,349,354,355,357,],[15,15,-9,-7,-5,-8,-6,15,15,15,-147,15,-10,15,-28,-24,15,-15,-146,15,15,15,15,15,15,-32,-31,-30,-29,]),'RETURN':([0,15,16,17,28,32,39,41,51,93,120,123,128,186,187,196,204,205,217,243,247,314,336,337,346,349,354,355,357,],[8,8,-9,-7,-5,-8,-6,8,8,8,-147,8,-10,8,-28,-24,8,-15,-146,8,8,8,8,8,8,-32,-31,-30,-29,]),'PRINT':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[9,9,9,-9,-7,-5,-8,9,-6,9,9,9,9,-110,9,9,9,-109,9,9,9,9,9,-126,-106,-108,9,-124,-158,-125,-107,9,-147,9,-10,9,9,-113,-117,-115,-127,-116,-120,-121,-118,9,-114,-119,-112,-122,-123,9,9,9,-28,-24,-157,9,-15,9,9,9,9,-146,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-32,-31,-30,-29,]),'REF':([47,49,50,127,133,194,216,278,295,334,],[133,-21,-23,133,133,133,-22,133,133,133,]),'TO':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,265,267,273,298,300,305,309,317,323,324,328,330,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-143,-137,308,-78,-89,308,308,-84,-138,-90,-204,308,]),'NOT':([8,34,43,52,64,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[56,56,56,56,56,56,56,56,56,-126,-106,-108,56,-124,-158,-125,-107,56,56,56,-113,-117,-115,-127,-116,-120,-121,-118,56,-114,-119,-112,-122,-123,56,56,-157,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ABS':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[12,12,12,-9,-7,-5,-8,12,-6,12,12,12,12,-110,12,12,12,-109,12,12,12,12,12,-126,-106,-108,12,-124,-158,-125,-107,12,-147,12,-10,12,12,-113,-117,-115,-127,-116,-120,-121,-118,12,-114,-119,-112,-122,-123,12,12,12,-28,-24,-157,12,-15,12,12,12,12,-146,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-32,-31,-30,-29,]),'LBRACKET':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,61,62,65,69,70,71,72,73,74,75,76,78,79,81,85,86,87,88,115,146,148,151,159,190,192,219,221,235,236,241,260,265,267,298,317,323,],[-69,52,-73,-71,-172,-171,-74,-23,-72,-85,112,-70,-132,-144,-135,-134,-128,160,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,-145,52,112,-130,-75,212,214,-23,112,-184,-174,-76,-88,-183,-173,-81,52,-143,-137,-78,-84,-138,]),'CONCAT':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,78,79,81,82,83,85,86,87,88,115,151,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,106,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,106,-97,-145,-68,-103,-130,-75,-23,-101,-111,-184,-174,-76,-88,106,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'ARROW':([5,7,8,10,11,13,14,19,21,23,29,34,35,36,43,52,56,57,64,72,74,80,86,87,89,96,100,101,106,107,109,112,113,115,116,117,118,119,147,151,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,190,192,200,208,210,211,212,218,219,228,229,234,235,236,239,240,241,242,250,260,266,270,271,293,296,298,302,307,308,317,],[-69,-68,68,-73,-71,-172,-171,-74,-23,-72,-85,68,115,-70,68,68,-110,68,68,-74,-23,-109,-68,115,68,68,68,68,-126,-106,-108,68,-124,-75,-158,-125,-107,68,68,-23,115,68,-113,-117,-115,-127,-116,-120,-121,-118,68,-114,-119,-112,-122,-123,68,68,-184,-174,-157,68,68,68,68,68,-76,68,68,68,-183,-173,68,68,-81,68,68,-68,68,68,68,68,68,-78,68,68,68,-84,]),'LTEQUAL':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,167,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'ID':([0,4,8,15,16,17,20,28,32,33,34,39,41,43,44,47,49,50,51,52,56,57,64,68,80,89,93,95,96,100,101,106,107,109,112,113,116,117,118,119,120,123,127,128,133,147,149,150,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,194,195,196,200,204,205,206,208,210,211,212,216,217,218,228,229,231,233,234,239,240,242,243,247,250,266,270,271,274,278,293,295,296,302,307,308,312,314,334,336,337,346,349,354,355,357,],[21,50,74,74,-9,-7,50,-5,-8,50,74,-6,21,74,50,50,-21,-23,151,74,-110,74,74,74,-109,74,74,50,74,74,74,-126,-106,-108,74,-124,-158,-125,-107,74,-147,21,50,-10,50,74,50,50,74,-113,-117,-115,-127,-116,-120,-121,-118,74,-114,-119,-112,-122,-123,74,74,74,-28,50,50,-24,-157,74,-15,50,74,74,74,74,-22,-146,74,74,74,50,50,74,74,74,74,74,74,74,74,74,74,50,50,74,50,74,74,74,74,50,21,50,21,21,21,-32,-31,-30,-29,]),'ELSE':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,93,94,115,120,157,159,180,190,192,203,217,219,221,224,225,226,227,235,236,241,246,247,265,267,269,272,290,298,300,317,318,323,324,326,340,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-209,-170,-75,-147,-101,-111,-169,-184,-174,243,-146,-76,-88,-96,-98,-100,271,-183,-173,-81,-164,-209,-143,-137,271,-91,-168,-78,-89,-84,243,-138,-90,-93,-94,]),'UPPER':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[37,37,37,-9,-7,-5,-8,37,-6,37,37,37,37,-110,37,37,37,-109,37,37,37,37,37,-126,-106,-108,37,-124,-158,-125,-107,37,-147,37,-10,37,37,-113,-117,-115,-127,-116,-120,-121,-118,37,-114,-119,-112,-122,-123,37,37,37,-28,-24,-157,37,-15,37,37,37,37,-146,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-32,-31,-30,-29,]),'ASSIGN':([5,7,10,11,13,14,19,21,23,29,35,36,47,49,50,74,86,102,106,107,108,109,110,111,113,114,115,117,118,129,130,131,132,134,135,136,137,138,139,140,141,142,143,145,151,181,190,192,207,209,216,219,235,236,241,292,294,297,298,317,320,321,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,116,-70,147,-21,-23,-23,-68,194,-126,-106,-159,-108,-161,-160,-124,200,-75,-125,-107,-49,-44,-58,208,-41,-39,-42,-45,-47,-51,-50,-43,-46,-40,-59,-23,229,-184,-174,250,-57,-22,-76,-183,-173,-81,-53,-52,-60,-78,-84,-67,-62,]),'INT':([47,49,50,127,133,194,212,216,231,274,278,295,296,334,],[129,-21,-23,129,129,129,129,-22,129,129,129,129,129,129,]),'OR':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,163,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'PROC':([99,],[188,]),'DIVIDE':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,78,79,81,83,85,86,87,88,115,151,157,159,190,192,219,221,225,226,235,236,241,260,265,267,298,317,323,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,118,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,118,-145,-68,-103,-130,-75,-23,-101,-111,-184,-174,-76,-88,118,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'CCONST':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[78,78,78,78,-110,78,78,-109,78,78,78,78,-126,-106,-108,78,-124,-158,-125,-107,78,78,78,-113,-117,-115,-127,-116,-120,-121,-118,78,-114,-119,-112,-122,-123,78,78,-157,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RETURNS':([280,316,],[313,313,]),'EQUAL':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,165,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'ICONST':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,214,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[76,76,76,76,-110,76,76,-109,76,76,76,76,-126,-106,-108,76,-124,-158,-125,-107,76,76,220,76,-113,-117,-115,-127,-116,-120,-121,-118,76,-114,-119,-112,-122,-123,76,76,-157,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'AND':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,170,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'ASC':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[25,25,25,-9,-7,-5,-8,25,-6,25,25,25,25,-110,25,25,25,-109,25,25,25,25,25,-126,-106,-108,25,-124,-158,-125,-107,25,-147,25,-10,25,25,-113,-117,-115,-127,-116,-120,-121,-118,25,-114,-119,-112,-122,-123,25,25,25,-28,-24,-157,25,-15,25,25,25,25,-146,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-32,-31,-30,-29,]),'CHAR':([47,49,50,127,133,194,212,216,231,274,278,295,296,334,],[139,-21,-23,139,139,139,139,-22,139,139,139,139,139,139,]),'LOWER':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[27,27,27,-9,-7,-5,-8,27,-6,27,27,27,27,-110,27,27,27,-109,27,27,27,27,27,-126,-106,-108,27,-124,-158,-125,-107,27,-147,27,-10,27,27,-113,-117,-115,-127,-116,-120,-121,-118,27,-114,-119,-112,-122,-123,27,27,27,-28,-24,-157,27,-15,27,27,27,27,-146,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-32,-31,-30,-29,]),'RBRACKET':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,129,130,137,138,139,140,142,153,155,157,159,190,192,197,199,219,221,222,223,224,225,226,235,236,241,256,257,258,259,261,262,263,264,265,267,283,284,285,286,292,294,298,299,300,317,319,322,323,324,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-49,-44,-45,-47,-51,-50,-46,-77,219,-101,-111,-184,-174,-82,241,-76,-88,-82,267,-96,-98,-100,-183,-173,-81,-66,-65,295,-63,-61,297,-80,298,-143,-137,-82,-83,-56,317,-53,-52,-78,323,-89,-84,-54,-64,-138,-90,]),'MINUS':([5,7,8,10,11,13,14,19,21,23,29,34,35,36,43,52,53,58,59,60,61,62,63,64,65,69,70,71,72,73,74,75,76,78,79,81,82,83,85,86,87,88,89,96,100,101,106,107,109,112,113,115,116,117,118,119,147,151,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,190,192,200,208,210,211,212,218,219,221,224,225,226,228,229,234,235,236,239,240,241,242,250,260,265,266,267,270,271,293,296,298,302,307,308,317,323,],[-69,-68,80,-73,-71,-172,-171,-74,-23,-72,-85,80,117,-70,80,80,-132,-144,-102,-99,-135,-134,-104,80,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,117,-97,-145,-68,-103,-130,80,80,80,80,-126,-106,-108,80,-124,-75,-158,-125,-107,80,80,-23,-101,-111,80,-113,-117,-115,-127,-116,-120,-121,-118,80,-114,-119,-112,-122,-123,80,80,-184,-174,-157,80,80,80,80,80,-76,-88,117,-98,-100,80,80,80,-183,-173,80,80,-81,80,80,-68,-143,80,-137,80,80,80,80,-78,80,80,80,-84,-138,]),'COLON':([5,7,10,11,13,14,21,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,153,154,157,159,190,192,197,198,219,221,222,224,225,226,235,236,241,252,254,260,265,267,298,300,317,323,324,],[-69,51,-73,-71,-172,-171,99,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-79,218,-101,-111,-184,-174,-55,240,-76,-88,266,-96,-98,-100,-183,-173,-81,-55,293,-68,-143,-137,-78,-89,-84,-138,-90,]),'TRUE':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[81,81,81,81,-110,81,81,-109,81,81,81,81,-126,-106,-108,81,-124,-158,-125,-107,81,81,81,-113,-117,-115,-127,-116,-120,-121,-118,81,-114,-119,-112,-122,-123,81,81,-157,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ARRAY':([47,49,50,127,133,194,216,278,295,334,],[146,-21,-23,146,146,146,-22,146,146,146,]),'LENGTH':([0,8,15,16,17,28,32,34,39,41,43,51,52,56,57,64,68,80,89,93,96,100,101,106,107,109,112,113,116,117,118,119,120,123,128,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[30,30,30,-9,-7,-5,-8,30,-6,30,30,30,30,-110,30,30,30,-109,30,30,30,30,30,-126,-106,-108,30,-124,-158,-125,-107,30,-147,30,-10,30,30,-113,-117,-115,-127,-116,-120,-121,-118,30,-114,-119,-112,-122,-123,30,30,30,-28,-24,-157,30,-15,30,30,30,30,-146,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,-31,-30,-29,]),'THEN':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,124,157,159,177,190,192,219,221,224,225,226,235,236,241,265,267,287,298,300,303,317,323,324,325,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,204,-101,-111,228,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-143,-137,204,-78,-89,228,-84,-138,-90,228,]),'TYPE':([0,16,17,28,32,39,41,120,123,128,187,196,205,217,314,336,337,346,349,354,355,357,],[33,-9,-7,-5,-8,-6,33,-147,33,-10,-28,-24,-15,-146,33,33,33,33,-32,-31,-30,-29,]),'HAT':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[55,55,55,55,-110,55,55,-109,55,55,55,55,-126,-106,-108,55,-124,-158,-125,-107,55,55,55,-113,-117,-115,-127,-116,-120,-121,-118,55,-114,-119,-112,-122,-123,55,55,-157,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'MODULO':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,78,79,81,83,85,86,87,88,115,151,157,159,190,192,219,221,225,226,235,236,241,260,265,267,298,317,323,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,109,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,109,-145,-68,-103,-130,-75,-23,-101,-111,-184,-174,-76,-88,109,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'NOTEQ':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,162,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'SEMI':([1,5,6,8,10,11,13,14,18,19,23,24,29,31,36,38,40,45,46,48,50,53,54,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,90,91,97,98,103,104,105,115,125,126,129,130,131,134,135,136,137,138,139,140,141,142,143,145,152,157,159,178,179,182,183,184,185,190,192,201,207,209,213,215,219,221,224,225,226,235,236,237,238,241,245,248,249,251,265,267,275,277,280,289,291,292,294,297,298,300,306,310,315,316,317,320,321,323,324,327,329,331,338,341,343,348,350,351,353,356,],[-154,-69,-155,-209,-73,-71,-172,-171,-152,-150,-72,-153,-85,-149,-70,120,-151,-148,128,-11,-23,-132,-189,-144,-102,-99,-135,-134,-104,-128,-188,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-190,-145,-68,-103,-130,-196,-195,186,-187,-25,196,-191,-75,205,-16,-49,-44,-58,-41,-39,-42,-45,-47,-51,-50,-43,-46,-40,-59,217,-101,-111,-194,-193,-197,-198,-199,-208,-184,-174,-156,-19,-57,-14,-12,-76,-88,-96,-98,-100,-183,-173,-27,-26,-81,-163,-17,-18,-13,-143,-137,-207,-192,314,-162,-20,-53,-52,-60,-78,-89,-203,-206,336,337,-84,-67,-62,-138,-90,-202,-205,-201,346,-200,349,-38,354,355,-37,357,]),'BY':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,265,267,273,298,300,317,323,324,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-143,-137,307,-78,-89,-84,-138,-90,]),'DCL':([0,16,17,28,32,39,41,120,123,128,187,196,205,217,314,336,337,346,349,354,355,357,],[44,-9,-7,-5,-8,-6,44,-147,44,-10,-28,-24,-15,-146,44,44,44,44,-32,-31,-30,-29,]),'LESS':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,166,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'PLUS':([5,7,10,11,13,14,19,21,23,29,35,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,78,79,81,82,83,85,86,87,88,115,151,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-68,-73,-71,-172,-171,-74,-23,-72,-85,113,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,-142,-141,-140,113,-97,-145,-68,-103,-130,-75,-23,-101,-111,-184,-174,-76,-88,113,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'IN':([5,10,11,13,14,23,29,36,50,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,181,190,192,219,221,224,225,226,230,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-23,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,164,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,231,-184,-174,-76,-88,-96,-98,-100,274,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'RPAREN':([5,10,11,13,14,23,29,36,50,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,100,101,115,129,130,131,134,135,136,137,138,139,140,141,142,143,145,157,158,159,189,190,191,192,193,209,219,220,221,224,225,226,233,235,236,241,253,255,265,267,279,281,282,285,292,294,297,298,300,311,317,319,320,321,323,324,332,333,342,347,],[-69,-73,-71,-172,-171,-72,-85,-70,-23,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,190,192,-75,-49,-44,-58,-41,-39,-42,-45,-47,-51,-50,-43,-46,-40,-59,-101,221,-111,-185,-184,235,-174,236,-57,-76,265,-88,-96,-98,-100,280,-183,-173,-81,292,294,-143,-137,-33,316,-186,-56,-53,-52,-60,-78,-89,-36,-84,-54,-67,-62,-138,-90,-35,-34,348,353,]),'GREATER':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,168,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'SCONST':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[85,85,85,85,-110,85,85,-109,85,85,85,85,-126,-106,-108,85,-124,-158,-125,-107,85,85,85,-113,-117,-115,-127,-116,-120,-121,-118,85,-114,-119,-112,-122,-123,85,85,-157,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'WHILE':([5,10,11,13,14,15,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,91,115,129,130,137,138,139,140,142,157,159,182,183,184,190,192,219,221,224,225,226,235,236,241,265,267,275,292,294,298,300,306,310,317,323,324,327,329,331,341,],[-69,-73,-71,-172,-171,96,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,96,-75,-49,-44,-45,-47,-51,-50,-46,-101,-111,-197,-198,-199,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-143,-137,-207,-53,-52,-78,-89,-203,-206,-84,-138,-90,-202,-205,-201,-200,]),'GTEQUAL':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,115,157,159,190,192,219,221,224,225,226,235,236,241,260,265,267,298,317,323,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-105,-129,-136,-74,-133,-23,-131,-139,171,-142,-141,-140,-95,-97,-145,-68,-103,-130,-75,-101,-111,-184,-174,-76,-88,-96,-98,-100,-183,-173,-81,-68,-143,-137,-78,-84,-138,]),'FALSE':([8,34,43,52,56,57,64,80,89,96,100,101,106,107,109,112,113,116,117,118,119,147,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,200,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[79,79,79,79,-110,79,79,-109,79,79,79,79,-126,-106,-108,79,-124,-158,-125,-107,79,79,79,-113,-117,-115,-127,-116,-120,-121,-118,79,-114,-119,-112,-122,-123,79,79,-157,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'COMMA':([5,10,11,13,14,23,29,36,48,49,50,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,103,115,126,129,130,131,134,135,136,137,138,139,140,141,142,143,145,157,159,189,190,192,197,207,209,213,219,221,222,224,225,226,235,236,237,241,249,251,256,257,259,265,267,279,283,285,291,292,294,297,298,300,311,317,319,320,321,323,324,332,],[-69,-73,-71,-172,-171,-72,-85,-70,149,150,-23,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,195,-75,206,-49,-44,-58,-41,-39,-42,-45,-47,-51,-50,-43,-46,-40,-59,-101,-111,234,-184,-174,239,-19,-57,-14,-76,-88,239,-96,-98,-100,-183,-173,-27,-81,-18,-13,-66,-65,296,-143,-137,312,239,-56,-20,-53,-52,-60,-78,-89,-36,-84,-54,-67,-62,-138,-90,-35,]),'IF':([0,8,15,16,17,28,32,34,39,41,43,51,52,64,89,93,96,100,101,112,116,119,120,123,128,147,160,186,187,196,200,204,205,208,210,211,212,217,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,349,354,355,357,],[43,89,43,-9,-7,-5,-8,89,-6,43,89,43,89,89,89,43,89,89,89,89,-158,89,-147,43,-10,89,89,43,-28,-24,-157,43,-15,89,89,89,89,-146,89,89,89,89,89,89,89,43,43,89,89,89,89,89,89,89,89,89,43,43,43,43,-32,-31,-30,-29,]),'FI':([5,10,11,13,14,23,29,36,53,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,93,94,115,120,157,159,180,190,192,203,217,219,221,224,225,226,235,236,241,244,246,247,265,267,268,288,290,298,300,301,304,317,318,323,324,339,],[-69,-73,-71,-172,-171,-72,-85,-70,-132,-144,-102,-99,-135,-134,-104,-128,-87,-105,-129,-136,-74,-133,-23,-131,-139,-86,-142,-141,-140,-95,-97,-145,-68,-103,-130,-209,-170,-75,-147,-101,-111,-169,-184,-174,245,-146,-76,-88,-96,-98,-100,-183,-173,-81,289,-164,-209,-143,-137,300,-165,-168,-78,-89,324,-92,-84,-167,-138,-90,-166,]),'RESULT':([0,15,16,17,28,32,39,41,51,93,120,123,128,186,187,196,204,205,217,243,247,314,336,337,346,349,354,355,357,],[34,34,-9,-7,-5,-8,-6,34,34,34,-147,34,-10,34,-28,-24,34,-15,-146,34,34,34,34,34,34,-32,-31,-30,-29,]),'CHARS':([47,49,50,127,133,194,216,278,295,334,],[148,-21,-23,148,148,148,-22,148,148,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([8,34,43,52,64,89,96,100,101,112,119,147,160,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[54,105,124,153,158,177,185,189,189,197,201,213,222,251,252,252,252,263,272,273,189,283,285,287,291,299,303,304,285,252,325,328,329,]),'synonym_definition':([4,149,],[48,48,]),'program':([0,],[3,]),'string_mode':([47,127,133,194,278,295,334,],[131,131,131,131,131,131,131,]),'else_expression':([227,269,],[268,301,]),'string_element':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'statement':([0,41,123,314,336,337,346,],[41,123,123,123,123,123,123,]),'range_enumeration':([95,],[184,]),'identifier':([0,4,8,15,20,33,34,41,43,44,47,51,52,57,64,68,89,93,95,96,100,101,112,119,123,127,133,147,149,150,160,169,175,176,186,194,195,204,206,208,210,211,212,218,228,229,231,233,234,239,240,242,243,247,250,266,270,271,274,278,293,295,296,302,307,308,312,314,334,336,337,346,],[7,49,86,7,98,49,86,7,86,49,141,86,86,86,86,86,86,7,181,86,86,86,86,86,7,141,141,86,49,49,86,86,86,86,7,141,49,7,49,86,86,86,260,86,86,86,276,49,86,86,86,86,7,7,86,86,86,86,276,141,86,141,260,86,86,86,49,7,141,7,7,7,]),'procedure_call':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'empty_literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'formal_parameter':([233,312,],[279,279,]),'builtin_name':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'mode_name':([47,127,133,194,278,295,334,],[135,135,135,135,135,135,135,]),'index_mode_list':([212,296,],[258,322,]),'array_slice':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'discrete_mode_name':([47,127,133,194,212,231,274,278,295,296,334,],[144,144,144,144,144,144,144,144,144,144,144,]),'iteration':([95,],[182,]),'return_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'string_slice':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'action_statement_nullable':([15,93,186,247,],[92,180,232,290,]),'arithmetic_multiplicative_operator':([35,83,225,],[111,176,176,]),'procedure_definition':([99,],[187,]),'newmode_statement':([0,41,123,314,336,337,346,],[17,17,17,17,17,17,17,]),'procedure_statement':([0,41,123,314,336,337,346,],[16,16,16,16,16,16,16,]),'primitive_value':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'elsif_expression':([227,],[269,]),'conditional_expression':([8,34,43,52,64,89,96,100,101,112,119,147,160,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'result_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while_control':([15,91,],[90,178,]),'left_element':([52,],[154,]),'operator1':([77,],[169,]),'operand1':([8,34,43,52,64,89,96,100,101,112,119,147,160,169,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[82,82,82,82,82,82,82,82,82,82,82,82,82,224,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'array_element':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'operand0':([8,34,43,52,64,89,96,100,101,112,119,147,160,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'index_mode':([212,296,],[259,259,]),'declaration_statement':([0,41,123,314,336,337,346,],[28,28,28,28,28,28,28,]),'string_length':([214,],[262,]),'then_expression':([177,303,325,],[227,326,340,]),'action_statement_list':([204,243,],[246,288,]),'initialization':([207,],[249,]),'newmode_list':([33,195,],[104,238,]),'operator2':([82,224,],[175,175,]),'character_mode':([47,127,133,194,212,231,274,278,295,296,334,],[142,142,142,142,142,142,142,142,142,142,142,]),'empty':([8,15,41,93,123,186,247,314,336,337,346,],[84,94,122,94,122,94,94,122,122,122,122,]),'control_part':([15,],[97,]),'integer_mode':([47,127,133,194,212,231,274,278,295,296,334,],[130,130,130,130,130,130,130,130,130,130,130,]),'for_control':([15,],[91,]),'value_array_slice':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'right_element':([218,],[264,]),'synonym_statement':([0,41,123,314,336,337,346,],[39,39,39,39,39,39,39,]),'character_string_literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'declaration_list':([44,206,],[125,248,]),'integer_literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,214,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,261,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'array_location':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[35,87,35,87,35,87,35,87,87,87,159,87,35,87,87,87,87,87,35,87,87,87,87,87,35,35,87,87,87,87,87,87,87,87,87,87,87,35,35,87,87,87,87,87,87,87,87,87,35,35,35,35,]),'if_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'step_enumeration':([95,],[183,]),'else_clause':([203,318,],[244,339,]),'dereferenced_reference':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'monadic_operator':([8,34,43,52,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'reference_mode':([47,127,133,194,278,295,334,],[134,134,134,134,134,134,134,]),'then_clause':([124,287,],[203,318,]),'mode_definition':([33,195,],[103,103,]),'boolean_literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'operand4':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[59,59,59,59,157,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'step_value':([273,],[309,]),'literal_range':([210,211,212,296,],[253,255,256,256,]),'operand3':([8,34,43,52,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,226,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'value_array_element':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'synonym_list':([4,149,],[46,215,]),'character_literal':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'referenced_location':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'statement_list':([0,],[22,]),'element_mode':([295,],[321,]),'result':([8,],[66,]),'builtin_call':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'string_concatenation_operator':([35,82,224,],[110,174,174,]),'statement_nullable':([41,123,314,336,337,346,],[121,202,335,344,345,352,]),'membership_operator':([77,],[172,]),'exit_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'call_action':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[19,72,19,72,19,72,19,72,72,72,72,72,19,72,72,72,72,72,19,72,72,72,72,72,19,19,72,72,72,72,72,72,72,72,72,72,72,19,19,72,72,72,72,72,72,72,72,72,19,19,19,19,]),'start_element':([52,],[155,]),'parenthesized_expression':([8,34,43,52,57,64,89,96,100,101,112,119,147,160,169,175,176,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expression_list':([112,160,239,],[199,223,284,]),'do_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'mode':([47,127,133,194,278,295,334,],[132,207,209,237,311,320,342,]),'parameter_list':([100,101,234,],[191,193,282,]),'closed_dyadic_operator':([35,],[114,]),'location':([0,8,15,34,41,43,51,52,57,64,68,89,93,96,100,101,112,119,123,147,160,169,175,176,186,204,208,210,211,212,218,228,229,234,239,240,242,243,247,250,266,270,271,293,296,302,307,308,314,336,337,346,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'composite_mode':([47,127,133,194,278,295,334,],[136,136,136,136,136,136,136,]),'boolean_mode':([47,127,133,194,212,231,274,278,295,296,334,],[137,137,137,137,137,137,137,137,137,137,137,]),'discrete_range_mode':([47,127,133,194,212,231,274,278,295,296,334,],[138,138,138,138,138,138,138,138,138,138,138,]),'assignment_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'identifier_list':([4,33,44,149,150,195,206,233,312,],[47,102,127,47,216,102,127,278,278,]),'arithmetic_additive_operator':([35,82,224,],[108,173,173,]),'action_statement':([0,15,41,93,123,186,204,243,247,314,336,337,346,],[32,93,32,93,32,93,247,247,93,32,32,32,32,]),'relational_operator':([77,],[161,]),'operand2':([8,34,43,52,64,89,96,100,101,112,119,147,160,169,175,208,210,211,212,218,228,229,234,239,240,242,250,266,270,271,293,296,302,307,308,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,225,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'end_value':([273,305,309,330,],[306,327,331,341,]),'discrete_mode':([47,127,133,194,212,231,274,278,295,296,334,],[143,143,143,143,257,275,310,143,143,257,143,]),'array_mode':([47,127,133,194,278,295,334,],[145,145,145,145,145,145,145,]),'declaration':([44,206,],[126,126,]),'lower_bound':([112,210,211,212,296,],[198,254,254,254,254,]),'action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[38,38,38,152,38,38,38,38,38,38,38,38,38,38,]),'assigning_operator':([35,],[119,]),'formal_parameter_list':([233,312,],[281,333,]),'result_spec':([280,316,],[315,338,]),'upper_bound':([240,293,],[286,319,]),'bracketed_action':([0,15,41,51,93,123,186,204,243,247,314,336,337,346,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C8967B25CC454E50F8C1B52A6EC4CD6A'
    
_lr_action_items = {'BOOL':([14,17,20,26,41,53,59,126,127,],[-23,28,28,28,28,-24,28,28,28,]),'LPAREN':([28,29,30,33,37,42,43,44,45,46,92,94,125,129,],[-35,56,-31,-32,-30,-34,-36,-42,-33,62,56,-42,-38,-37,]),'RPAREN':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,90,99,111,130,131,132,133,134,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-54,-89,125,129,-61,-58,-60,-56,-39,-41,]),'NOT':([50,56,58,59,62,64,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[66,66,66,66,66,66,-75,66,-74,-72,-73,-71,-64,-65,-66,66,-81,-82,-78,-70,-79,-83,-69,-76,-77,66,-80,-84,66,66,]),'LESS':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,113,-89,-61,-58,-60,-56,]),'TRUE':([50,56,58,59,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[67,67,67,67,67,67,-68,67,-67,-75,67,-74,-72,-73,-71,-64,-65,-66,67,-81,-82,-78,-70,-79,-83,-69,-76,-77,67,-80,-84,67,67,]),'TYPE':([0,2,3,5,7,10,24,48,51,],[4,-5,4,-6,-7,4,-13,-17,-8,]),'PLUS':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,86,111,130,131,132,],[-87,-92,105,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-61,-58,-60,105,]),'EQUAL':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,114,-89,-61,-58,-60,-56,]),'AND':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,119,-89,-61,-58,-60,-56,]),'OR':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,120,-89,-61,-58,-60,-56,]),'COMMA':([14,16,18,22,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,54,57,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,91,92,95,96,100,111,125,128,129,130,131,132,133,134,135,136,],[25,27,47,52,-35,-26,-31,-27,-28,-32,-45,-44,-25,-30,-21,-34,-36,-29,-33,-16,-20,-43,-87,-92,-55,-12,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-54,-89,-22,-51,-52,127,-11,-61,-38,-46,-37,-58,-60,-56,-39,-41,-53,-48,]),'NULL':([50,56,58,59,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[74,74,74,74,74,74,-68,74,-67,-75,74,-74,-72,-73,-71,-64,-65,-66,74,-81,-82,-78,-70,-79,-83,-69,-76,-77,74,-80,-84,74,74,]),'SYN':([0,2,3,5,7,10,24,48,51,],[9,-5,9,-6,-7,9,-13,-17,-8,]),'ARRAY':([14,17,20,26,41,53,126,],[-23,39,39,39,39,-24,39,]),'MINUS':([50,56,58,59,62,64,65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,86,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,130,131,132,],[81,81,81,81,81,81,-87,-92,103,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-75,81,-74,-72,-73,-71,-64,-65,-66,81,-61,-81,-82,-78,-70,-79,-83,-69,-76,-77,81,-80,-84,81,81,-58,-60,103,]),'$end':([1,2,3,5,6,7,10,11,12,23,24,48,51,],[0,-5,-97,-6,-1,-7,-97,-2,-4,-3,-13,-17,-8,]),'LBRACKET':([39,40,],[59,60,]),'SEMI':([13,16,18,19,21,22,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,54,55,57,61,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,91,100,111,125,128,129,130,131,132,135,136,],[24,-14,-18,48,51,-9,-35,-26,-31,-27,-28,-32,-45,-44,-25,-30,-21,-34,-36,-29,-33,-16,-15,-20,-43,-19,-87,-92,-55,-12,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-54,-89,-10,-22,-11,-61,-38,-46,-37,-58,-60,-56,-53,-48,]),'CHARS':([14,17,20,26,41,53,126,],[-23,40,40,40,40,-24,40,]),'COLON':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,88,89,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-54,-89,-40,124,-61,-58,-60,-56,]),'IN':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,123,-89,-61,-58,-60,-56,]),'REF':([14,17,20,26,41,53,126,],[-23,41,41,41,41,-24,41,]),'GREATER':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,122,-89,-61,-58,-60,-56,]),'INT':([14,17,20,26,41,53,59,126,127,],[-23,42,42,42,42,-24,42,42,42,]),'GTEQUAL':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,112,-89,-61,-58,-60,-56,]),'MODULO':([65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,86,111,130,131,],[-87,-92,109,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-61,109,-60,]),'DCL':([0,2,3,5,7,10,24,48,51,],[8,-5,8,-6,-7,8,-13,-17,-8,]),'CHAR':([14,17,20,26,41,53,59,126,127,],[-23,43,43,43,43,-24,43,43,43,]),'NOTEQ':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,116,-89,-61,-58,-60,-56,]),'ICONST':([50,56,58,59,60,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[82,82,82,82,82,82,82,-68,82,-67,-75,82,-74,-72,-73,-71,-64,-65,-66,82,-81,-82,-78,-70,-79,-83,-69,-76,-77,82,-80,-84,82,82,]),'CONCAT':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,86,111,130,131,132,],[-87,-92,101,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-61,-58,-60,101,]),'ID':([4,8,9,14,17,20,25,26,27,41,47,52,53,59,126,127,],[14,14,14,-23,44,44,14,44,14,44,14,14,-24,94,44,94,]),'ASSIGN':([14,15,20,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,49,53,61,125,128,129,135,136,],[-23,26,50,-35,-26,-31,-27,-28,-32,-45,-44,-25,-30,58,-34,-36,-29,-33,64,-24,-43,-38,-46,-37,-53,-48,]),'CCONST':([50,56,58,59,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[83,83,83,83,83,83,-68,83,-67,-75,83,-74,-72,-73,-71,-64,-65,-66,83,-81,-82,-78,-70,-79,-83,-69,-76,-77,83,-80,-84,83,83,]),'SCONST':([50,56,58,59,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[84,84,84,84,84,84,-68,84,-67,-75,84,-74,-72,-73,-71,-64,-65,-66,84,-81,-82,-78,-70,-79,-83,-69,-76,-77,84,-80,-84,84,84,]),'DIVIDE':([65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,86,111,130,131,],[-87,-92,108,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-61,108,-60,]),'FALSE':([50,56,58,59,62,64,66,80,81,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,127,],[73,73,73,73,73,73,-68,73,-67,-75,73,-74,-72,-73,-71,-64,-65,-66,73,-81,-82,-78,-70,-79,-83,-69,-76,-77,73,-80,-84,73,73,]),'RBRACKET':([28,30,33,37,42,43,45,65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,92,93,95,96,97,98,111,125,129,130,131,132,133,134,137,],[-35,-31,-32,-30,-34,-36,-33,-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-54,-89,-51,126,-52,-49,128,-47,-61,-38,-37,-58,-60,-56,-39,-41,-50,]),'LTEQUAL':([65,67,68,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,111,130,131,132,],[-87,-92,-55,-57,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,117,-89,-61,-58,-60,-56,]),'TIMES':([65,67,70,71,72,73,74,75,76,77,78,79,82,83,84,86,111,130,131,],[-87,-92,107,-90,-85,-93,-95,-88,-86,-59,-63,-62,-91,-94,-96,-89,-61,107,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'newmode_list':([4,27,],[13,55,]),'operator2':([68,132,],[102,102,]),'discrete_mode':([17,20,26,41,59,126,127,],[29,29,29,29,92,29,92,]),'boolean_mode':([17,20,26,41,59,126,127,],[30,30,30,30,30,30,30,]),'reference_mode':([17,20,26,41,126,],[31,31,31,31,31,]),'composite_mode':([17,20,26,41,126,],[32,32,32,32,32,]),'expression':([50,56,58,59,62,64,124,127,],[69,88,91,88,88,100,134,88,]),'character_mode':([17,20,26,41,59,126,127,],[33,33,33,33,33,33,33,]),'synonym_statement':([0,3,10,],[5,5,5,]),'statement_list':([0,],[6,]),'integer_mode':([17,20,26,41,59,126,127,],[37,37,37,37,37,37,37,]),'statement_nullable':([3,10,],[11,23,]),'operator1':([85,],[121,]),'index_mode_list':([59,127,],[93,137,]),'program':([0,],[1,]),'literal':([50,56,58,59,62,64,80,102,110,121,124,127,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'primitive_value':([50,56,58,59,62,64,80,102,110,121,124,127,],[78,78,78,78,78,78,78,78,78,78,78,78,]),'operand4':([50,56,58,59,62,64,80,102,110,121,124,127,],[79,79,79,79,79,79,111,79,79,79,79,79,]),'identifier_list':([4,8,9,25,27,47,52,],[15,17,20,53,15,17,20,]),'arithmetic_additive_operator':([68,132,],[106,106,]),'relational_operator':([85,],[118,]),'operand2':([50,56,58,59,62,64,102,121,124,127,],[70,70,70,70,70,70,130,70,70,70,]),'empty_literal':([50,56,58,59,62,64,80,102,110,121,124,127,],[86,86,86,86,86,86,86,86,86,86,86,86,]),'character_literal':([50,56,58,59,62,64,80,102,110,121,124,127,],[75,75,75,75,75,75,75,75,75,75,75,75,]),'element_mode':([126,],[136,]),'statement':([0,3,10,],[3,10,10,]),'mode':([17,20,26,41,126,],[38,49,54,61,135,]),'string_length':([60,],[97,]),'string_concatenation_operator':([68,132,],[104,104,]),'arithmetic_multiplicative_operator':([70,130,],[110,110,]),'declaration_list':([8,47,],[19,63,]),'initialization':([38,],[57,]),'mode_definition':([4,27,],[16,16,]),'operand1':([50,56,58,59,62,64,121,124,127,],[68,68,68,68,68,68,132,68,68,]),'string_mode':([17,20,26,41,126,],[35,35,35,35,35,]),'mode_name':([17,20,26,41,126,],[36,36,36,36,36,]),'newmode_statement':([0,3,10,],[7,7,7,]),'array_mode':([17,20,26,41,126,],[34,34,34,34,34,]),'upper_bound':([124,],[133,]),'synonym_list':([9,52,],[21,87,]),'empty':([3,10,],[12,12,]),'lower_bound':([56,59,62,127,],[89,89,89,89,]),'literal_range':([56,59,62,127,],[90,95,99,95,]),'integer_literal':([50,56,58,59,60,62,64,80,102,110,121,124,127,],[76,76,76,76,98,76,76,76,76,76,76,76,76,]),'operand3':([50,56,58,59,62,64,102,110,121,124,127,],[77,77,77,77,77,77,77,131,77,77,77,]),'boolean_literal':([50,56,58,59,62,64,80,102,110,121,124,127,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'declaration_statement':([0,3,10,],[2,2,2,]),'membership_operator':([85,],[115,]),'monadic_operator':([50,56,58,59,62,64,102,110,121,124,127,],[80,80,80,80,80,80,80,80,80,80,80,]),'index_mode':([59,127,],[96,96,]),'declaration':([8,47,],[18,18,]),'operand0':([50,56,58,59,62,64,124,127,],[85,85,85,85,85,85,85,85,]),'discrete_range_mode':([17,20,26,41,59,126,127,],[45,45,45,45,45,45,45,]),'discrete_mode_name':([17,20,26,41,59,126,127,],[46,46,46,46,46,46,46,]),'synonym_definition':([9,52,],[22,22,]),'character_string_literal':([50,56,58,59,62,64,80,102,110,121,124,127,],[71,71,71,71,71,71,71,71,71,71,71,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',34),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',38),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',49),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',50),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',61),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',62),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',63),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',72),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',76),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',77),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',88),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',89),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',100),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',104),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',105),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',113),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',122),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',126),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',127),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',137),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',138),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',142),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','Parser.py',146),
  ('identifier_list -> ID COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',147),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',160),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',161),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',162),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',163),
  ('mode_name -> ID','mode_name',1,'p_mode_name','Parser.py',171),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',180),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',181),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',182),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',183),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',187),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',190),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',193),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',201),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',202),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',206),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',210),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',213),
  ('discrete_mode_name -> ID','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',217),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',225),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',234),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',235),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',238),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',241),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',244),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',248),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',249),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',257),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',258),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',262),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',272),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',277),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',278),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',284),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',285),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',292),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',293),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',302),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',303),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',312),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',319),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',320),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',321),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',325),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',326),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',331),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',332),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',336),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',337),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',341),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',342),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',346),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',350),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',351),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',352),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',353),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',354),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',355),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',356),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',357),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',361),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',372),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',376),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',377),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',378),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',379),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',380),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',383),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',387),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',388),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',392),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',397),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',401),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',406),
]

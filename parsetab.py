
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8864A8A730BD24A039E5C80A7ACE84C0'
    
_lr_action_items = {'READ':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[1,-8,1,1,-5,-7,1,-6,-9,1,1,1,1,1,1,-108,1,1,-107,1,1,1,1,1,1,-106,-155,-116,-114,-105,-115,-104,-144,1,1,-113,-112,1,1,1,1,-119,-118,1,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,1,-15,-24,-28,1,1,1,1,1,1,-143,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-30,-29,]),'LPAREN':([1,2,3,6,7,12,19,21,32,33,38,44,45,53,54,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,110,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,165,173,177,178,181,184,185,188,189,190,192,193,195,205,207,215,224,225,228,230,231,235,236,237,240,244,250,251,258,261,263,279,282,288,290,293,296,303,304,305,308,328,],[-178,-179,-172,-175,-173,58,-174,93,58,-176,-177,58,126,58,126,58,-108,58,-107,58,58,58,58,58,-106,-155,-116,-114,-105,-115,-104,-23,58,-113,-112,58,58,58,-119,-118,58,-125,-123,-111,-124,-120,-122,-117,-110,-121,126,-154,-43,235,-49,-45,-47,-48,-44,237,58,-46,-42,248,58,58,58,58,58,58,58,58,58,58,58,58,235,-46,58,58,58,235,-46,58,58,235,58,-51,58,-50,58,334,]),'PRINT':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[2,-8,2,2,-5,-7,2,-6,-9,2,2,2,2,2,2,-108,2,2,-107,2,2,2,2,2,2,-106,-155,-116,-114,-105,-115,-104,-144,2,2,-113,-112,2,2,2,2,-119,-118,2,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,2,-15,-24,-28,2,2,2,2,2,2,-143,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-30,-29,]),'NOT':([12,32,44,53,58,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[59,59,59,59,59,59,59,59,59,59,-106,-155,-116,-114,-105,-115,-104,59,-113,-112,59,59,59,-119,-118,59,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'TRUE':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[60,60,60,60,60,-108,60,-107,60,60,60,60,60,-106,-155,-116,-114,-105,-115,-104,60,-113,-112,60,60,60,-119,-118,60,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ABS':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[3,-8,3,3,-5,-7,3,-6,-9,3,3,3,3,3,3,-108,3,3,-107,3,3,3,3,3,3,-106,-155,-116,-114,-105,-115,-104,-144,3,3,-113,-112,3,3,3,3,-119,-118,3,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,3,-15,-24,-28,3,3,3,3,3,3,-143,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-30,-29,]),'PROC':([127,],[205,]),'SEMI':([9,13,17,18,20,22,23,24,26,27,30,31,35,36,37,39,41,44,48,51,52,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,110,111,112,114,115,116,118,119,120,122,123,124,125,128,131,132,133,135,136,139,159,164,168,172,177,178,179,180,181,182,183,184,185,186,188,189,193,195,199,204,211,212,213,216,222,226,229,232,234,239,241,242,243,245,246,247,250,253,254,259,275,284,292,293,299,301,302,303,305,306,310,312,314,316,318,320,323,324,327,331,338,339,341,344,],[-152,-145,-150,-68,-67,-149,-71,-168,108,-83,-70,-147,-169,-148,-151,-69,-146,-207,-194,134,-193,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-23,-11,176,-189,-16,198,-184,-185,200,-25,-187,-186,-188,-191,-195,-197,-196,-192,-206,-109,-99,227,-171,-153,-43,-38,-57,-37,-49,-39,-40,-45,-47,-56,-48,-44,-41,-42,-19,-181,-86,-96,-98,-160,-94,-74,-170,-79,-12,-14,-55,-17,-18,-27,-26,-180,-205,-190,-159,-135,-13,-20,-201,-204,-87,-76,-82,-51,-50,-58,329,-203,-199,-200,-136,-88,-65,-60,333,-198,342,343,-36,-35,]),'ARROW':([12,16,18,20,23,24,25,27,30,31,32,35,39,44,45,53,54,58,59,70,78,82,83,86,88,91,93,95,96,99,100,101,102,104,105,106,107,126,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,165,168,173,192,204,207,215,224,225,226,228,229,230,231,232,235,236,237,240,244,247,258,261,263,282,288,290,296,301,302,304,308,],[62,-66,-68,-67,-71,-168,100,-83,-70,-72,62,-169,-69,62,-23,62,-23,62,-108,-66,100,-72,62,-107,62,62,62,62,62,-106,-73,-155,-116,-114,-105,-115,-104,62,100,-113,-112,62,62,62,-119,-118,62,-125,-123,-111,-124,-120,-122,-117,-110,-121,-23,-171,-154,62,-181,62,62,62,62,-74,62,-170,62,62,-79,62,62,62,62,62,-180,62,62,62,-66,62,62,62,-76,-82,62,62,]),'CHAR':([109,110,113,117,196,201,208,233,240,252,285,307,308,334,],[-21,-23,181,181,181,181,181,-22,181,181,181,181,181,181,]),'PLUS':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,89,90,100,139,159,165,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-66,-68,-67,-71,-168,104,-83,-70,-72,-169,-69,-23,-23,-138,-128,104,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-23,-171,-181,-86,-96,-98,104,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'UPPER':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[6,-8,6,6,-5,-7,6,-6,-9,6,6,6,6,6,6,-108,6,6,-107,6,6,6,6,6,6,-106,-155,-116,-114,-105,-115,-104,-144,6,6,-113,-112,6,6,6,6,-119,-118,6,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,6,-15,-24,-28,6,6,6,6,6,6,-143,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-30,-29,]),'ASC':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[7,-8,7,7,-5,-7,7,-6,-9,7,7,7,7,7,7,-108,7,7,-107,7,7,7,7,7,7,-106,-155,-116,-114,-105,-115,-104,-144,7,7,-113,-112,7,7,7,7,-119,-118,7,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,7,-15,-24,-28,7,7,7,7,7,7,-143,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-30,-29,]),'GREATER':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,158,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'CONCAT':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,89,90,100,139,159,165,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-66,-68,-67,-71,-168,102,-83,-70,-72,-169,-69,-23,-23,-138,-128,102,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-23,-171,-181,-86,-96,-98,102,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'ICONST':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,238,240,244,258,261,263,288,290,296,304,308,],[68,68,68,68,68,-108,68,-107,68,68,68,68,68,-106,-155,-116,-114,-105,-115,-104,68,-113,-112,68,68,68,-119,-118,68,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'COLON':([16,18,20,23,24,27,30,35,39,45,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,139,159,161,162,168,169,170,204,211,212,213,220,222,226,229,232,247,259,273,274,282,299,301,302,318,320,],[92,-68,-67,-71,-168,-83,-70,-169,-69,127,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,225,-77,-171,-53,231,-181,-86,-96,-98,258,-94,-74,-170,-79,-180,-135,-53,304,-66,-87,-76,-82,-136,-88,]),'CCONST':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[64,64,64,64,64,-108,64,-107,64,64,64,64,64,-106,-155,-116,-114,-105,-115,-104,64,-113,-112,64,64,64,-119,-118,64,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LOC':([110,177,178,179,180,181,182,183,184,185,186,188,189,193,195,241,303,305,306,309,323,324,337,],[-23,-43,-38,-57,-37,-49,-39,-40,-45,-47,-56,-48,-44,-41,-42,-55,-51,-50,-58,326,-65,-60,340,]),'REF':([109,110,113,117,196,201,233,285,307,334,],[-21,-23,196,196,196,196,-22,196,196,196,]),'IF':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,88,91,92,93,95,96,101,108,126,134,145,146,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[12,-8,12,12,-5,-7,88,-6,-9,88,88,12,88,12,88,88,88,12,88,88,88,-155,-144,88,12,12,88,-154,-10,88,-15,-24,-28,88,88,12,12,88,88,-143,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,12,12,-30,-29,]),'BOOL':([109,110,113,117,196,201,208,233,240,252,285,307,308,334,],[-21,-23,188,188,188,188,188,-22,188,188,188,188,188,188,]),'TYPE':([0,4,8,10,11,14,29,55,108,176,198,200,206,227,329,333,342,343,],[42,-8,42,-5,-7,-6,-9,42,-144,-10,-15,-24,-28,-143,42,42,-30,-29,]),'FI':([18,20,23,24,27,30,35,39,47,50,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,108,129,139,144,159,168,204,211,212,213,214,218,219,222,226,227,229,232,247,256,257,259,262,294,297,299,300,301,302,317,318,320,],[-68,-67,-71,-168,-83,-70,-169,-69,-207,-167,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-144,-166,-109,216,-99,-171,-181,-86,-96,-98,254,-207,-161,-94,-74,-143,-170,-79,-180,-162,-165,-135,299,-164,320,-87,-90,-76,-82,-163,-136,-88,]),'FOR':([5,],[49,]),'ARRAY':([109,110,113,117,196,201,233,285,307,334,],[-21,-23,194,194,194,194,-22,194,194,194,]),'ASSIGN':([16,18,20,23,24,25,27,30,31,35,39,45,54,70,94,97,98,99,100,102,103,104,105,106,107,109,110,113,121,130,165,168,177,178,179,180,181,182,183,184,185,186,187,188,189,193,195,199,204,226,229,232,233,241,247,301,302,303,305,306,323,324,],[-66,-68,-67,-71,-168,101,-83,-70,-72,-169,-69,-23,-23,-66,-157,173,-158,-106,-73,-116,-156,-114,-105,-115,-104,-21,-23,192,201,207,-23,-171,-43,-38,-57,-37,-49,-39,-40,-45,-47,-56,236,-48,-44,-41,-42,244,-181,-74,-170,-79,-22,-55,-180,-76,-82,-51,-50,-58,-65,-60,]),'CHARS':([109,110,113,117,196,201,233,285,307,334,],[-21,-23,191,191,191,191,-22,191,191,191,]),'END':([4,10,11,14,29,55,57,108,137,176,198,200,206,227,329,333,335,336,342,343,],[-8,-5,-7,-6,-9,-207,-4,-144,-3,-10,-15,-24,-28,-143,-207,-207,338,339,-30,-29,]),'LESS':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,151,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'BY':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,249,259,299,301,302,318,320,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,290,-135,-87,-76,-82,-136,-88,]),'RBRACKET':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,139,159,162,163,168,169,171,177,181,184,185,188,189,195,204,211,212,213,220,221,222,226,229,232,247,259,265,266,268,269,270,271,277,278,279,280,281,283,295,299,301,302,303,305,318,320,322,325,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-75,226,-171,-80,232,-43,-49,-45,-47,-48,-44,-42,-181,-86,-96,-98,-80,259,-94,-74,-170,-79,-180,-135,301,-78,-80,-81,-54,302,-59,306,-63,-64,307,-61,318,-87,-76,-82,-51,-50,-136,-88,-52,-62,]),'NOTEQ':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,154,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'ELSIF':([18,20,23,24,27,30,35,39,47,50,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,108,129,139,144,159,168,204,211,212,213,218,219,222,223,226,227,229,232,247,257,259,260,264,294,299,301,302,318,320,321,332,],[-68,-67,-71,-168,-83,-70,-169,-69,-207,-167,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-144,-166,-109,215,-99,-171,-181,-86,-96,-98,-207,-161,-94,261,-74,-143,-170,-79,-180,-165,-135,296,-89,215,-87,-76,-82,-136,-88,-91,-92,]),'AND':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,156,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'DOWN':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,110,130,139,159,168,204,211,212,213,222,226,229,232,247,249,259,289,299,301,302,315,318,320,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-23,209,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,291,-135,313,-87,-76,-82,-202,-136,-88,]),'EQUAL':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,147,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'MODULO':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,89,90,100,139,159,165,168,204,211,212,213,226,229,232,247,259,282,301,302,318,],[-66,-68,-67,-71,-168,99,-83,-70,-72,-169,-69,-23,-23,-138,-128,-140,-97,-141,-100,-137,99,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-23,-171,-181,-86,99,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RPAREN':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,93,100,110,126,138,139,159,166,167,168,177,178,179,180,181,182,183,184,185,186,188,189,193,195,203,204,211,212,213,222,226,229,232,241,247,259,267,270,272,276,286,287,299,301,302,303,305,306,309,318,320,322,323,324,326,330,337,340,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,168,-73,-23,204,211,-109,-99,-182,229,-171,-43,-38,-57,-37,-49,-39,-40,-45,-47,-56,-48,-44,-41,-42,247,-181,-86,-96,-98,-94,-74,-170,-79,-55,-180,-135,-183,-54,303,305,310,-31,-87,-76,-82,-51,-50,-58,-34,-136,-88,-52,-65,-60,-33,-32,341,344,]),'COMMA':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,109,110,111,115,122,139,159,166,168,169,177,178,179,180,181,182,183,184,185,186,188,189,193,195,199,204,211,212,213,220,222,226,229,232,239,241,243,245,247,259,268,270,275,279,280,283,284,287,299,301,302,303,305,306,309,318,320,322,323,324,326,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,174,-23,175,197,202,-109,-99,228,-171,230,-43,-38,-57,-37,-49,-39,-40,-45,-47,-56,-48,-44,-41,-42,-19,-181,-86,-96,-98,230,-94,-74,-170,-79,-14,-55,-18,-27,-180,-135,230,-54,-13,-63,-64,308,-20,311,-87,-76,-82,-51,-50,-58,-34,-136,-88,-52,-65,-60,-33,]),'NUM':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[19,-8,19,19,-5,-7,19,-6,-9,19,19,19,19,19,19,-108,19,19,-107,19,19,19,19,19,19,-106,-155,-116,-114,-105,-115,-104,-144,19,19,-113,-112,19,19,19,19,-119,-118,19,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,19,-15,-24,-28,19,19,19,19,19,19,-143,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,-29,]),'SYN':([0,4,8,10,11,14,29,55,108,176,198,200,206,227,329,333,342,343,],[28,-8,28,-5,-7,-6,-9,28,-144,-10,-15,-24,-28,-143,28,28,-30,-29,]),'IN':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,110,130,139,159,168,204,209,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,150,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-23,208,-109,-99,-171,-181,252,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'FALSE':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[81,81,81,81,81,-108,81,-107,81,81,81,81,81,-106,-155,-116,-114,-105,-115,-104,81,-113,-112,81,81,81,-119,-118,81,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'THEN':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,87,89,90,100,139,159,160,168,204,211,212,213,222,226,229,232,247,255,259,298,299,301,302,318,319,320,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,145,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,224,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,145,-135,224,-87,-76,-82,-136,224,-88,]),'RETURNS':([310,],[328,]),'RESULT':([0,4,5,8,10,11,14,29,47,55,92,108,134,145,176,198,200,206,217,218,227,329,333,342,343,],[32,-8,32,32,-5,-7,-6,-9,32,32,32,-144,32,32,-10,-15,-24,-28,32,32,-143,32,32,-30,-29,]),'MINUS':([12,16,18,20,23,24,25,27,30,31,32,35,39,44,45,53,54,58,60,61,63,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,88,89,90,91,93,95,96,99,100,101,102,104,105,106,107,126,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,165,168,173,192,204,207,211,212,213,215,222,224,225,226,228,229,230,231,232,235,236,237,240,244,247,258,259,261,263,282,288,290,296,301,302,304,308,318,],[86,-66,-68,-67,-71,-168,106,-83,-70,-72,86,-169,-69,86,-23,86,-23,86,-138,-128,106,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,86,-102,-142,86,86,86,86,-106,-73,-155,-116,-114,-105,-115,-104,86,-109,-113,-112,86,86,86,-119,-118,86,-125,-123,-111,-124,-120,-122,-117,-110,-121,-99,-23,-171,-154,86,-181,86,-86,-96,-98,86,106,86,86,-74,86,-170,86,86,-79,86,86,86,86,86,-180,86,-135,86,86,-66,86,86,86,-76,-82,86,86,-136,]),'DCL':([0,4,8,10,11,14,29,55,108,176,198,200,206,227,329,333,342,343,],[34,-8,34,-5,-7,-6,-9,34,-144,-10,-15,-24,-28,-143,34,34,-30,-29,]),'OR':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,148,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'INT':([109,110,113,117,196,201,208,233,240,252,285,307,308,334,],[-21,-23,185,185,185,185,185,-22,185,185,185,185,185,185,]),'NULL':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[66,66,66,66,66,-108,66,-107,66,66,66,66,66,-106,-155,-116,-114,-105,-115,-104,66,-113,-112,66,66,66,-119,-118,66,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'GTEQUAL':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,155,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'RETURN':([0,4,5,8,10,11,14,29,47,55,92,108,134,145,176,198,200,206,217,218,227,329,333,342,343,],[44,-8,44,44,-5,-7,-6,-9,44,44,44,-144,44,44,-10,-15,-24,-28,44,44,-143,44,44,-30,-29,]),'LOWER':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[33,-8,33,33,-5,-7,33,-6,-9,33,33,33,33,33,33,-108,33,33,-107,33,33,33,33,33,33,-106,-155,-116,-114,-105,-115,-104,-144,33,33,-113,-112,33,33,33,33,-119,-118,33,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,33,-15,-24,-28,33,33,33,33,33,33,-143,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,-29,]),'ELSE':([18,20,23,24,27,30,35,39,47,50,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,108,129,139,144,159,168,204,211,212,213,218,219,222,223,226,227,229,232,247,257,259,260,264,294,299,301,302,318,320,321,332,],[-68,-67,-71,-168,-83,-70,-169,-69,-207,-167,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-144,-166,-109,217,-99,-171,-181,-86,-96,-98,-207,-161,-94,263,-74,-143,-170,-79,-180,-165,-135,263,-89,217,-87,-76,-82,-136,-88,-91,-92,]),'EXIT':([0,4,5,8,10,11,14,29,47,55,92,108,134,145,176,198,200,206,217,218,227,329,333,342,343,],[40,-8,40,40,-5,-7,-6,-9,40,40,40,-144,40,40,-10,-15,-24,-28,40,40,-143,40,40,-30,-29,]),'$end':([4,8,10,11,14,15,29,43,55,56,57,108,137,176,198,200,206,227,342,343,],[-8,-207,-5,-7,-6,0,-9,-1,-207,-2,-4,-144,-3,-10,-15,-24,-28,-143,-30,-29,]),'LBRACKET':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,64,66,68,70,71,72,73,75,77,78,80,81,82,84,85,87,90,100,139,165,168,191,194,204,211,226,229,232,247,259,282,301,302,318,],[91,-68,-67,-71,-168,95,-83,-70,-72,-169,-69,-23,-23,-138,-128,-140,-141,-137,91,-131,-129,-133,146,-127,95,-126,-139,-72,-134,-130,-132,-142,-73,95,-23,-171,238,240,-181,-86,-74,-170,-79,-180,-135,91,-76,-82,-136,]),'TO':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,249,259,289,291,299,301,302,313,315,318,320,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,288,-135,288,288,-87,-76,-82,288,-202,-136,-88,]),'SCONST':([12,32,44,53,58,59,83,86,88,91,93,95,96,99,101,102,104,105,106,107,126,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,173,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[90,90,90,90,90,-108,90,-107,90,90,90,90,90,-106,-155,-116,-114,-105,-115,-104,90,-113,-112,90,90,90,-119,-118,90,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'TIMES':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,89,90,100,139,159,165,168,204,211,212,213,226,229,232,247,259,282,301,302,318,],[-66,-68,-67,-71,-168,107,-83,-70,-72,-169,-69,-23,-23,-138,-128,-140,-97,-141,-100,-137,107,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-23,-171,-181,-86,107,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'WHILE':([5,18,20,23,24,27,30,35,39,52,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,84,85,87,89,90,100,131,132,133,139,159,168,177,181,184,185,188,189,195,204,211,212,213,222,226,229,232,247,250,259,292,293,299,301,302,303,305,312,314,316,318,320,331,],[53,-68,-67,-71,-168,-83,-70,-169,-69,53,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,-84,-127,-101,-85,-126,-139,-72,-134,-130,-132,-102,-142,-73,-195,-197,-196,-109,-99,-171,-43,-49,-45,-47,-48,-44,-42,-181,-86,-96,-98,-94,-74,-170,-79,-180,-205,-135,-201,-204,-87,-76,-82,-51,-50,-203,-199,-200,-136,-88,-198,]),'LENGTH':([0,4,5,8,10,11,12,14,29,32,44,47,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,176,192,198,200,206,207,215,217,218,224,225,227,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,342,343,],[38,-8,38,38,-5,-7,38,-6,-9,38,38,38,38,38,38,-108,38,38,-107,38,38,38,38,38,38,-106,-155,-116,-114,-105,-115,-104,-144,38,38,-113,-112,38,38,38,38,-119,-118,38,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,-10,38,-15,-24,-28,38,38,38,38,38,38,-143,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-30,-29,]),'DIVIDE':([16,18,20,23,24,25,27,30,31,35,39,45,54,60,61,64,65,66,67,68,69,70,71,72,73,75,77,78,80,81,82,84,85,87,89,90,100,139,159,165,168,204,211,212,213,226,229,232,247,259,282,301,302,318,],[-66,-68,-67,-71,-168,105,-83,-70,-72,-169,-69,-23,-23,-138,-128,-140,-97,-141,-100,-137,105,-66,-131,-129,-133,-103,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-23,-171,-181,-86,105,-98,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'DO':([0,4,5,8,10,11,14,29,47,55,92,108,134,145,176,198,200,206,217,218,227,329,333,342,343,],[5,-8,5,5,-5,-7,-6,-9,5,5,5,-144,5,5,-10,-15,-24,-28,5,5,-143,5,5,-30,-29,]),'OD':([5,46,47,50,108,129,134,210,227,],[-207,128,-207,-167,-144,-166,-207,253,-143,]),'LTEQUAL':([18,20,23,24,27,30,35,39,54,60,61,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,84,85,87,89,90,100,139,159,168,204,211,212,213,222,226,229,232,247,259,282,301,302,318,],[-68,-67,-71,-168,-83,-70,-169,-69,-23,-138,-128,-93,-140,-97,-141,-100,-137,-95,-66,-131,-129,-133,-103,153,-127,-101,-126,-139,-72,-134,-130,-132,-102,-142,-73,-109,-99,-171,-181,-86,-96,-98,-94,-74,-170,-79,-180,-135,-66,-76,-82,-136,]),'ID':([0,4,5,8,10,11,12,14,28,29,32,34,40,42,44,47,49,53,55,58,59,62,83,86,88,91,92,93,95,96,99,101,102,104,105,106,107,108,109,110,113,117,126,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,173,174,175,176,192,196,197,198,200,201,202,206,207,208,215,217,218,224,225,227,228,230,231,233,235,236,237,240,244,248,252,258,261,263,285,288,290,296,304,307,308,311,329,333,334,342,343,],[45,-8,54,45,-5,-7,54,-6,110,-9,54,110,119,110,54,54,110,54,45,54,-108,54,54,-107,54,54,165,54,54,54,-106,-155,-116,-114,-105,-115,-104,-144,-21,-23,110,110,54,54,-113,-112,54,54,54,54,-119,-118,54,-125,-123,-111,-124,-120,-122,-117,-110,-121,-154,110,110,-10,54,110,110,-15,-24,110,110,-28,54,110,54,54,54,54,54,-143,54,54,54,-22,54,54,54,54,54,110,110,54,54,54,110,54,54,54,54,110,54,110,45,45,110,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_mode':([113,117,196,201,208,240,252,285,307,308,334,],[177,177,177,177,177,177,177,177,177,177,177,]),'result':([44,],[124,]),'action_statement_nullable':([5,47,134,218,],[46,129,210,257,]),'declaration':([34,197,],[115,115,]),'action_statement':([0,5,8,47,55,134,145,217,218,329,333,],[4,47,4,47,4,47,218,218,47,4,4,]),'operand1':([12,32,44,53,58,88,91,93,95,96,126,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[63,63,63,63,63,63,63,63,63,63,63,63,222,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'statement':([0,8,55,329,333,],[8,55,55,55,55,]),'declaration_statement':([0,8,55,329,333,],[10,10,10,10,10,]),'then_expression':([160,298,319,],[223,321,332,]),'while_control':([5,52,],[48,135,]),'left_element':([91,],[161,]),'string_mode':([113,117,196,201,285,307,334,],[186,186,186,186,186,186,186,]),'discrete_mode':([113,117,196,201,208,240,252,285,307,308,334,],[178,178,178,178,250,279,293,178,178,279,178,]),'empty_literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'statement_nullable':([8,55,329,333,],[56,137,335,336,]),'identifier_list':([28,34,42,174,175,197,202,248,311,],[113,117,121,233,113,117,121,285,285,]),'program':([0,],[15,]),'assigning_operator':([25,],[96,]),'array_mode':([113,117,196,201,285,307,334,],[179,179,179,179,179,179,179,]),'synonym_statement':([0,8,55,329,333,],[14,14,14,14,14,]),'mode':([113,117,196,201,285,307,334,],[187,199,241,245,309,323,337,]),'expression':([12,32,44,53,58,88,91,93,95,96,126,146,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[74,114,123,136,138,160,162,166,169,172,166,220,239,249,255,264,266,166,268,270,273,275,273,273,284,295,298,300,312,315,319,270,273,]),'element_mode':([307,],[324,]),'builtin_name':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'empty':([5,8,44,47,55,134,218,329,333,],[50,57,125,50,57,50,50,57,57,]),'result_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'exit_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'action_statement_list':([145,217,],[219,256,]),'array_slice':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'index_mode':([240,308,],[283,283,]),'array_location':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[25,25,25,78,78,78,25,78,25,78,139,78,78,78,25,78,78,78,78,25,78,78,25,78,78,78,78,78,25,25,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,25,25,]),'action':([0,5,8,47,55,92,134,145,217,218,329,333,],[26,26,26,26,26,164,26,26,26,26,26,26,]),'literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'mode_name':([113,117,196,201,285,307,334,],[180,180,180,180,180,180,180,]),'procedure_statement':([0,8,55,329,333,],[29,29,29,29,29,]),'call_action':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[31,31,31,82,82,82,31,82,31,82,82,82,82,82,31,82,82,82,82,31,82,82,31,82,82,82,82,82,31,31,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,31,31,]),'else_expression':([223,260,],[262,297,]),'character_string_literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'mode_definition':([42,202,],[122,122,]),'result_spec':([310,],[327,]),'referenced_location':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'label_id':([40,],[118,]),'closed_dyadic_operator':([25,],[97,]),'if_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'control_part':([5,],[51,]),'string_length':([238,],[278,]),'operator1':([76,],[149,]),'procedure_definition':([127,],[206,]),'statement_list':([0,],[43,]),'membership_operator':([76,],[152,]),'synonym_definition':([28,175,],[111,111,]),'start_element':([91,],[163,]),'operator2':([63,222,],[142,142,]),'formal_parameter':([248,311,],[287,287,]),'string_concatenation_operator':([25,63,222,],[98,140,140,]),'integer_mode':([113,117,196,201,208,240,252,285,307,308,334,],[195,195,195,195,195,195,195,195,195,195,195,]),'parameter_list':([93,126,228,],[167,203,267,]),'do_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'value_array_slice':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'iteration':([49,],[131,]),'discrete_range_mode':([113,117,196,201,208,240,252,285,307,308,334,],[184,184,184,184,184,184,184,184,184,184,184,]),'initialization':([199,],[243,]),'reference_mode':([113,117,196,201,285,307,334,],[182,182,182,182,182,182,182,]),'operand3':([12,32,44,53,58,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[65,65,65,65,65,65,65,65,65,65,65,65,213,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'for_control':([5,],[52,]),'literal_range':([235,237,240,308,],[272,276,280,280,]),'operand4':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[67,67,67,67,67,159,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'composite_mode':([113,117,196,201,285,307,334,],[183,183,183,183,183,183,183,]),'right_element':([225,],[265,]),'elsif_expression':([223,],[260,]),'operand2':([12,32,44,53,58,88,91,93,95,96,126,142,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[69,69,69,69,69,69,69,69,69,69,69,212,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'character_mode':([113,117,196,201,208,240,252,285,307,308,334,],[189,189,189,189,189,189,189,189,189,189,189,]),'bracketed_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean_literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'parenthesized_expression':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'range_enumeration':([49,],[132,]),'return_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'then_clause':([74,255,],[144,294,]),'string_element':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'step_value':([249,],[289,]),'dereferenced_reference':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'step_enumeration':([49,],[133,]),'primitive_value':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operand0':([12,32,44,53,58,88,91,93,95,96,126,146,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'expression_list':([95,146,230,],[171,221,269,]),'procedure_call':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'lower_bound':([95,235,237,240,308,],[170,274,274,274,274,]),'conditional_expression':([12,32,44,53,58,88,91,93,95,96,126,146,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'value_array_element':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'location':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'newmode_statement':([0,8,55,329,333,],[11,11,11,11,11,]),'arithmetic_additive_operator':([25,63,222,],[103,141,141,]),'array_element':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'index_mode_list':([240,308,],[281,325,]),'monadic_operator':([12,32,44,53,58,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'else_clause':([144,294,],[214,317,]),'integer_literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,238,240,244,258,261,263,288,290,296,304,308,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,277,85,85,85,85,85,85,85,85,85,85,]),'character_literal':([12,32,44,53,58,83,88,91,93,95,96,126,142,143,146,149,192,207,215,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'builtin_call':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arithmetic_multiplicative_operator':([25,69,212,],[94,143,143,]),'upper_bound':([231,304,],[271,322,]),'declaration_list':([34,197,],[116,242,]),'string_slice':([0,5,8,12,32,44,47,53,55,58,62,83,88,91,92,93,95,96,126,134,142,143,145,146,149,192,207,215,217,218,224,225,228,230,231,235,236,237,240,244,258,261,263,288,290,296,304,308,329,333,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'discrete_mode_name':([113,117,196,201,208,240,252,285,307,308,334,],[190,190,190,190,190,190,190,190,190,190,190,]),'synonym_list':([28,175,],[112,234,]),'assignment_action':([0,5,8,47,55,92,134,145,217,218,329,333,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'formal_parameter_list':([248,311,],[286,330,]),'identifier':([0,5,8,12,28,32,34,42,44,47,49,53,55,58,62,83,88,91,92,93,95,96,113,117,126,134,142,143,145,146,149,174,175,192,196,197,201,202,207,208,215,217,218,224,225,228,230,231,235,236,237,240,244,248,252,258,261,263,285,288,290,296,304,307,308,311,329,333,334,],[16,16,16,70,109,70,109,109,70,16,130,70,16,70,70,70,70,70,70,70,70,70,193,193,70,16,70,70,16,70,70,109,109,70,193,109,193,109,70,251,70,16,16,70,70,70,70,70,70,70,70,282,70,109,251,70,70,70,193,70,70,70,70,193,282,109,16,16,193,]),'newmode_list':([42,202,],[120,246,]),'end_value':([249,289,291,313,],[292,314,316,331,]),'relational_operator':([76,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',61),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',65),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',76),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',77),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',88),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',89),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',90),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',91),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',92),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',101),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',105),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',115),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',116),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',130),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',134),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',135),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',143),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',144),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',148),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',152),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',153),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',161),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',172),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',176),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',177),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',185),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',196),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',200),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',201),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',205),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',206),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',214),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',215),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',221),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',222),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',227),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',228),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',229),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',230),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',234),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',242),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',243),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',244),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',245),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',249),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',253),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',257),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',261),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',270),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',271),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',275),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',279),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',283),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',290),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',297),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',298),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',302),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',306),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',310),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',314),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',315),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',323),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',324),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',328),
  ('location -> identifier','location',1,'p_location','Parser.py',339),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',340),
  ('location -> string_element','location',1,'p_location','Parser.py',341),
  ('location -> string_slice','location',1,'p_location','Parser.py',342),
  ('location -> array_element','location',1,'p_location','Parser.py',343),
  ('location -> array_slice','location',1,'p_location','Parser.py',344),
  ('location -> call_action','location',1,'p_location','Parser.py',345),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',349),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',353),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',357),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',361),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',365),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',369),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',373),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',377),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',378),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',385),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',389),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',399),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',400),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',404),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',412),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',413),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',417),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',421),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',425),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',426),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',441),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',442),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',449),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',450),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',457),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',458),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',466),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',467),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',474),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',475),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',476),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',487),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',488),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',489),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',493),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',494),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',498),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',502),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',503),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',507),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',508),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',512),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',513),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',517),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',521),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',522),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',523),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',524),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',525),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',526),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',532),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',544),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',545),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',546),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',547),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',551),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',552),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',553),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',554),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',555),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',559),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',563),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',571),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',575),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',576),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',580),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',584),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',588),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',599),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',600),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',605),
  ('action -> assignment_action','action',1,'p_action','Parser.py',606),
  ('action -> call_action','action',1,'p_action','Parser.py',607),
  ('action -> exit_action','action',1,'p_action','Parser.py',608),
  ('action -> result_action','action',1,'p_action','Parser.py',609),
  ('action -> return_action','action',1,'p_action','Parser.py',610),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',614),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',615),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',619),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',623),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',624),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',628),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',629),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',630),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',634),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',635),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',639),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',643),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',644),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',645),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',656),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',667),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',668),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',684),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',685),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',689),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',690),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',695),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',696),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',697),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',698),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',699),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',700),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',701),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',702),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',706),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',707),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',711),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',712),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',720),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',724),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',728),
  ('result -> expression','result',1,'p_result','Parser.py',732),
  ('result -> empty','result',1,'p_result','Parser.py',733),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',736),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',744),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',745),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',752),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',753),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',754),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',758),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',762),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',763),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',767),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',768),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',769),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',770),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',782),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',786),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',790),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',791),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',798),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',804),
]

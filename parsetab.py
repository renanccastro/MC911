
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT REF EXIT LOC THEN CHAR INT PROC ASC DOWN SYN BOOL LENGTH TRUE RETURN IF DCL NULL CHARS PRINT OD NUM FI ELSE TO RETURNS RESULT ABS READ BY DO TYPE ARRAY UPPER LOWER WHILE END FOR ELSIF FALSE INprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'MODULO':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,72,73,78,80,81,82,83,85,86,88,90,91,92,93,94,96,97,98,100,101,107,160,175,192,200,207,222,230,239,240,242,245,250,262,271,272,304,312,328,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,117,-74,-23,-23,-105,-131,-68,117,-102,-129,-99,-135,-133,-104,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-23,-101,-111,-174,-184,-76,-100,-88,117,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'HAT':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[68,68,68,68,68,-110,68,68,68,-109,-124,-158,-107,68,-125,-106,68,-126,-108,68,68,68,68,68,-122,68,-123,-121,-117,68,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'DO':([0,5,6,12,14,21,24,33,52,55,63,102,128,158,168,174,203,205,221,233,238,315,336,338,346,347,353,355,357,],[6,6,6,-6,-8,-5,-7,-9,6,6,6,-147,-15,6,-10,6,-24,-28,-146,6,6,6,6,6,6,-32,-31,-30,-29,]),'COLON':([1,7,9,16,19,20,25,26,31,45,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,162,164,175,192,194,195,200,207,222,229,230,239,240,241,242,245,250,252,253,262,271,272,304,310,312,328,331,],[-85,63,-70,-72,-172,-71,-73,-171,-69,126,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-79,223,-101,-111,-55,244,-174,-184,-76,273,-100,-88,-98,-96,-81,-173,-183,-55,293,-68,-143,-137,-78,-89,-84,-138,-90,]),'ELSIF':([1,9,16,19,20,25,26,31,54,55,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,102,107,151,173,175,192,200,207,221,222,230,232,237,238,239,240,241,242,245,250,271,272,274,277,282,304,310,311,312,328,329,331,341,],[-85,-70,-72,-172,-71,-73,-171,-69,-170,-209,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-147,-75,-169,234,-101,-111,-174,-184,-146,-76,-100,276,-164,-209,-88,-98,-96,-81,-173,-183,-143,-137,-91,308,-168,-78,-89,234,-84,-138,-93,-90,-94,]),'DCL':([0,5,12,14,21,24,33,52,102,128,168,203,205,221,315,336,338,346,347,353,355,357,],[3,3,-6,-8,-5,-7,-9,3,-147,-15,-10,-24,-28,-146,3,3,3,3,-32,-31,-30,-29,]),'CCONST':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[96,96,96,96,96,-110,96,96,96,-109,-124,-158,-107,96,-125,-106,96,-126,-108,96,96,96,96,96,-122,96,-123,-121,-117,96,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'FI':([1,9,16,19,20,25,26,31,54,55,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,102,107,151,173,175,192,200,207,221,222,230,236,237,238,239,240,241,242,245,250,271,272,278,279,282,304,306,309,310,311,312,328,331,332,],[-85,-70,-72,-172,-71,-73,-171,-69,-170,-209,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-147,-75,-169,235,-101,-111,-174,-184,-146,-76,-100,281,-164,-209,-88,-98,-96,-81,-173,-183,-143,-137,310,-165,-168,-78,-92,331,-89,-167,-84,-138,-90,-166,]),'ELSE':([1,9,16,19,20,25,26,31,54,55,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,102,107,151,173,175,192,200,207,221,222,230,232,237,238,239,240,241,242,245,250,271,272,274,277,282,304,310,311,312,328,329,331,341,],[-85,-70,-72,-172,-71,-73,-171,-69,-170,-209,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-147,-75,-169,233,-101,-111,-174,-184,-146,-76,-100,275,-164,-209,-88,-98,-96,-81,-173,-183,-143,-137,-91,275,-168,-78,-89,233,-84,-138,-93,-90,-94,]),'TRUE':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[94,94,94,94,94,-110,94,94,94,-109,-124,-158,-107,94,-125,-106,94,-126,-108,94,94,94,94,94,-122,94,-123,-121,-117,94,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'$end':([5,12,14,17,21,24,32,33,51,52,53,102,128,150,168,203,205,221,347,353,355,357,],[-209,-6,-8,-1,-5,-7,0,-9,-4,-209,-2,-147,-15,-3,-10,-24,-28,-146,-32,-31,-30,-29,]),'PROC':([126,],[204,]),'CHARS':([48,49,50,65,141,201,216,288,297,337,],[137,-23,-21,137,137,137,-22,137,137,137,]),'COMMA':([1,9,16,19,20,25,26,31,47,49,50,59,66,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,121,130,131,132,133,134,135,136,138,139,140,142,144,145,146,147,175,192,194,199,200,207,211,214,222,224,229,230,239,240,241,242,245,247,250,257,258,259,260,270,271,272,284,285,289,292,294,295,304,310,312,313,319,321,322,328,331,333,],[-85,-70,-72,-172,-71,-73,-171,-69,129,-23,149,-23,167,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,202,-41,-40,-51,-46,-44,-58,-39,-47,-45,-49,-59,-42,-43,-50,-19,-101,-111,243,246,-174,-184,-57,-18,-76,-14,243,-100,-88,-98,-96,-81,-173,-27,-183,-20,-65,-66,296,-13,-143,-137,243,-56,314,-53,-60,-52,-78,-89,-84,-36,-54,-67,-62,-138,-90,-35,]),'NUM':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[11,11,11,-6,11,-8,-5,-7,-9,11,11,11,11,11,11,11,-110,11,11,11,11,-109,-147,-124,-158,-107,11,-125,-106,11,-126,-108,11,11,-15,11,11,-10,11,11,11,-122,11,-123,-121,-117,11,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,11,11,11,11,11,-146,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-32,-31,-30,-29,]),'DIVIDE':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,72,73,78,80,81,82,83,85,86,88,90,91,92,93,94,96,97,98,100,101,107,160,175,192,200,207,222,230,239,240,242,245,250,262,271,272,304,312,328,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,108,-74,-23,-23,-105,-131,-68,108,-102,-129,-99,-135,-133,-104,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-23,-101,-111,-174,-184,-76,-100,-88,108,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'GREATER':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,190,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'IF':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,75,79,102,106,109,114,118,127,128,158,165,168,170,174,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[13,13,13,-6,75,-8,-5,-7,-9,75,75,13,13,75,13,75,75,75,-147,-158,75,75,75,75,-15,13,75,-10,75,13,-157,-24,-28,75,75,75,75,75,-146,75,75,75,13,75,13,75,75,75,75,75,75,75,75,75,75,75,13,13,13,13,-32,-31,-30,-29,]),'INT':([48,49,50,65,141,201,215,216,217,266,288,296,297,337,],[140,-23,-21,140,140,140,140,-22,140,140,140,140,140,140,]),'FALSE':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[85,85,85,85,85,-110,85,85,85,-109,-124,-158,-107,85,-125,-106,85,-126,-108,85,85,85,85,85,-122,85,-123,-121,-117,85,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'BY':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,265,271,272,304,310,312,328,331,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,299,-143,-137,-78,-89,-84,-138,-90,]),'REF':([48,49,50,65,141,201,216,288,297,337,],[141,-23,-21,141,141,141,-22,141,141,141,]),'NOTEQ':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,181,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'RETURNS':([290,318,],[317,317,]),'SCONST':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[90,90,90,90,90,-110,90,90,90,-109,-124,-158,-107,90,-125,-106,90,-126,-108,90,90,90,90,90,-122,90,-123,-121,-117,90,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'ABS':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[18,18,18,-6,18,-8,-5,-7,-9,18,18,18,18,18,18,18,-110,18,18,18,18,-109,-147,-124,-158,-107,18,-125,-106,18,-126,-108,18,18,-15,18,18,-10,18,18,18,-122,18,-123,-121,-117,18,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,18,18,18,18,18,-146,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-32,-31,-30,-29,]),'WHILE':([1,6,9,16,19,20,25,26,31,59,60,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,132,133,134,138,139,140,146,153,154,155,175,192,200,207,222,230,239,240,241,242,245,250,263,271,272,292,295,298,303,304,310,312,324,325,327,328,331,340,],[-85,56,-70,-72,-172,-71,-73,-171,-69,-23,56,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-51,-46,-44,-47,-45,-49,-50,-199,-198,-197,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-207,-143,-137,-53,-52,-203,-206,-78,-89,-84,-205,-201,-202,-138,-90,-200,]),'NOT':([13,37,44,56,64,75,79,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[74,74,74,74,74,74,74,-124,-158,-107,74,-125,-106,74,-126,-108,74,74,74,74,74,-122,74,-123,-121,-117,74,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'BOOL':([48,49,50,65,141,201,215,216,217,266,288,296,297,337,],[146,-23,-21,146,146,146,146,-22,146,146,146,146,146,146,]),'FOR':([6,],[58,]),'LPAREN':([4,8,11,13,18,23,27,29,36,37,38,44,45,49,56,59,64,68,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,131,132,133,134,138,139,140,143,145,146,160,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,204,209,212,213,215,218,223,225,231,234,243,244,246,258,262,263,264,273,275,276,292,293,295,296,299,300,303,308,317,],[-176,-178,-177,79,-175,-180,-179,-182,118,79,-181,79,127,-23,79,127,79,169,-110,79,79,79,-109,-124,-158,-107,79,-125,-106,79,-126,-108,79,79,209,-51,-46,-44,-47,-45,-49,212,-48,-50,127,79,79,79,-122,79,-123,-121,-117,79,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,249,79,79,79,79,79,79,79,79,79,79,79,79,209,-48,209,-48,79,79,79,-53,79,-52,79,79,79,209,79,337,]),'LENGTH':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[23,23,23,-6,23,-8,-5,-7,-9,23,23,23,23,23,23,23,-110,23,23,23,23,-109,-147,-124,-158,-107,23,-125,-106,23,-126,-108,23,23,-15,23,23,-10,23,23,23,-122,23,-123,-121,-117,23,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,23,23,23,23,23,-146,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-32,-31,-30,-29,]),'PLUS':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,90,91,92,93,94,96,97,98,100,101,107,160,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,104,-74,-23,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,104,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-23,-101,-111,-174,-184,-76,-100,-88,-98,104,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'TO':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,265,271,272,301,302,304,310,312,323,326,328,331,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,300,-143,-137,300,300,-78,-89,-84,-204,300,-138,-90,]),'CHAR':([48,49,50,65,141,201,215,216,217,266,288,296,297,337,],[132,-23,-21,132,132,132,132,-22,132,132,132,132,132,132,]),'TIMES':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,72,73,78,80,81,82,83,85,86,88,90,91,92,93,94,96,97,98,100,101,107,160,175,192,200,207,222,230,239,240,242,245,250,262,271,272,304,312,328,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,113,-74,-23,-23,-105,-131,-68,113,-102,-129,-99,-135,-133,-104,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-23,-101,-111,-174,-184,-76,-100,-88,113,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'ID':([0,3,5,6,10,12,13,14,21,24,33,34,37,39,44,48,49,50,52,55,56,58,63,64,65,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,129,141,149,158,165,167,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,201,202,203,205,209,212,213,215,216,217,218,221,223,225,231,233,234,238,243,244,246,249,266,273,275,276,288,293,296,297,299,300,308,314,315,336,337,338,346,347,353,355,357,],[45,49,45,59,49,-6,59,-8,-5,-7,-9,49,59,49,59,49,-23,-21,45,59,59,49,160,59,49,-110,59,59,59,59,-109,-147,-124,-158,-107,59,-125,-106,59,-126,-108,59,59,-15,49,49,49,59,59,49,-10,59,59,59,-122,59,-123,-121,-117,59,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,49,49,-24,-28,59,59,59,59,-22,49,59,-146,59,59,59,59,59,59,59,59,59,49,49,59,59,59,49,59,59,49,59,59,59,49,45,45,49,45,45,-32,-31,-30,-29,]),'RPAREN':([1,9,16,19,20,25,26,31,49,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,118,127,130,131,132,133,134,135,136,138,139,140,142,144,145,146,175,176,192,198,199,200,206,207,211,222,227,230,239,240,241,242,245,249,250,251,256,271,272,285,287,289,291,292,294,295,304,310,312,313,319,321,322,328,331,333,334,344,350,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,200,207,-41,-40,-51,-46,-44,-58,-39,-47,-45,-49,-59,-42,-43,-50,-101,239,-111,245,-185,-174,250,-184,-57,-76,271,-100,-88,-98,-96,-81,-173,290,-183,292,295,-143,-137,-56,-186,-33,318,-53,-60,-52,-78,-89,-84,-36,-54,-67,-62,-138,-90,-35,-34,349,354,]),'LOWER':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[27,27,27,-6,27,-8,-5,-7,-9,27,27,27,27,27,27,27,-110,27,27,27,27,-109,-147,-124,-158,-107,27,-125,-106,27,-126,-108,27,27,-15,27,27,-10,27,27,27,-122,27,-123,-121,-117,27,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,27,27,27,27,27,-146,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-32,-31,-30,-29,]),'THEN':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,76,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,172,175,192,200,207,222,230,239,240,241,242,245,250,271,272,280,304,307,310,312,328,330,331,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,174,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,231,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-143,-137,174,-78,231,-89,-84,-138,231,-90,]),'ICONST':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,169,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,210,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[86,86,86,86,86,-110,86,86,86,-109,-124,-158,-107,86,-125,-106,86,-126,-108,86,86,86,227,86,86,-122,86,-123,-121,-117,86,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'LBRACKET':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,78,81,82,85,86,88,90,91,92,93,94,96,97,98,100,101,107,137,148,160,192,200,207,222,239,242,245,250,262,271,272,304,312,328,],[-85,64,-70,-72,-172,-71,-73,-171,-69,109,-74,-23,-23,170,-131,64,-129,-135,-133,-141,-139,-144,-145,-132,-128,109,-140,-142,-74,-130,-134,-136,-75,210,215,-23,109,-174,-184,-76,-88,-81,-173,-183,64,-143,-137,-78,-84,-138,]),'PRINT':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[29,29,29,-6,29,-8,-5,-7,-9,29,29,29,29,29,29,29,-110,29,29,29,29,-109,-147,-124,-158,-107,29,-125,-106,29,-126,-108,29,29,-15,29,29,-10,29,29,29,-122,29,-123,-121,-117,29,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,29,29,29,29,29,-146,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-32,-31,-30,-29,]),'END':([12,14,21,24,33,51,52,102,128,150,168,203,205,221,315,335,336,338,343,345,346,347,352,353,355,357,],[-6,-8,-5,-7,-9,-4,-209,-147,-15,-3,-10,-24,-28,-146,-209,342,-209,-209,348,351,-209,-32,356,-31,-30,-29,]),'IN':([1,9,16,19,20,25,26,31,49,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,156,175,192,200,207,219,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,186,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,217,-101,-111,-174,-184,266,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'NULL':([13,37,44,56,64,74,75,77,79,99,104,106,108,109,112,113,114,116,117,118,127,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[88,88,88,88,88,-110,88,88,88,-109,-124,-158,-107,88,-125,-106,88,-126,-108,88,88,88,88,88,-122,88,-123,-121,-117,88,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'LOC':([49,130,131,132,133,134,135,136,138,139,140,142,144,145,146,211,292,294,295,313,321,322,344,],[-23,-41,-40,-51,-46,-44,-58,-39,-47,-45,-49,-59,-42,-43,-50,-57,-53,-60,-52,333,-67,-62,350,]),'UPPER':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[8,8,8,-6,8,-8,-5,-7,-9,8,8,8,8,8,8,8,-110,8,8,8,8,-109,-147,-124,-158,-107,8,-125,-106,8,-126,-108,8,8,-15,8,8,-10,8,8,8,-122,8,-123,-121,-117,8,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,8,8,8,8,8,-146,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-32,-31,-30,-29,]),'SYN':([0,5,12,14,21,24,33,52,102,128,168,203,205,221,315,336,338,346,347,353,355,357,],[10,10,-6,-8,-5,-7,-9,10,-147,-15,-10,-24,-28,-146,10,10,10,10,-32,-31,-30,-29,]),'OR':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,189,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'DOWN':([1,9,16,19,20,25,26,31,49,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,156,175,192,200,207,222,230,239,240,241,242,245,250,265,271,272,301,304,310,312,323,328,331,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,219,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,302,-143,-137,326,-78,-89,-84,-204,-138,-90,]),'EXIT':([0,5,6,12,14,21,24,33,52,55,63,102,128,158,168,174,203,205,221,233,238,315,336,338,346,347,353,355,357,],[34,34,34,-6,-8,-5,-7,-9,34,34,34,-147,-15,34,-10,34,-24,-28,-146,34,34,34,34,34,34,-32,-31,-30,-29,]),'LTEQUAL':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,180,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'SEMI':([1,2,9,15,16,19,20,22,25,26,28,30,31,40,41,42,43,44,46,47,49,57,59,60,61,66,67,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,103,107,119,121,122,123,124,125,130,131,132,133,134,135,136,138,139,140,142,144,145,146,147,152,153,154,155,157,159,161,175,192,197,200,207,208,211,214,222,224,226,230,235,239,240,241,242,245,247,248,250,257,263,267,270,271,272,281,290,292,294,295,298,303,304,310,312,316,318,321,322,324,325,327,328,331,339,340,342,348,349,351,354,356,],[-85,-154,-70,-149,-72,-172,-71,-152,-73,-171,-155,102,-69,-153,-150,-148,-151,-209,128,-16,-23,-196,-23,-195,158,-11,168,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-187,-75,-191,-25,203,-190,-189,-188,-41,-40,-51,-46,-44,-58,-39,-47,-45,-49,-59,-42,-43,-50,-19,-208,-199,-198,-197,-194,-193,221,-101,-111,-156,-174,-184,-17,-57,-18,-76,-14,-12,-100,-163,-88,-98,-96,-81,-173,-27,-26,-183,-20,-207,-192,-13,-143,-137,-162,315,-53,-60,-52,-203,-206,-78,-89,-84,336,338,-67,-62,-205,-201,-202,-138,-90,346,-200,347,353,-38,355,-37,357,]),'RESULT':([0,5,6,12,14,21,24,33,52,55,63,102,128,158,168,174,203,205,221,233,238,315,336,338,346,347,353,355,357,],[37,37,37,-6,-8,-5,-7,-9,37,37,37,-147,-15,37,-10,37,-24,-28,-146,37,37,37,37,37,37,-32,-31,-30,-29,]),'READ':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[38,38,38,-6,38,-8,-5,-7,-9,38,38,38,38,38,38,38,-110,38,38,38,38,-109,-147,-124,-158,-107,38,-125,-106,38,-126,-108,38,38,-15,38,38,-10,38,38,38,-122,38,-123,-121,-117,38,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,38,38,38,38,38,-146,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,-31,-30,-29,]),'ARROW':([1,7,9,13,16,19,20,25,26,31,35,37,41,44,45,56,59,64,71,74,75,77,79,93,97,99,104,106,107,108,109,112,113,114,116,117,118,127,160,165,170,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,200,207,209,212,213,215,218,222,223,225,231,234,242,243,244,245,246,250,262,273,275,276,293,296,299,300,304,308,312,],[-85,-68,-70,95,-72,-172,-71,-73,-171,-69,107,95,-74,95,-23,95,-23,95,-68,-110,95,95,95,107,-74,-109,-124,-158,-75,-107,95,-125,-106,95,-126,-108,95,95,-23,95,95,95,-122,95,-123,-121,-117,95,-116,-119,-114,-127,-120,-112,-115,-118,-113,107,-157,-174,-184,95,95,95,95,95,-76,95,95,95,95,-81,95,95,-173,95,-183,-68,95,95,95,95,95,95,95,-78,95,-84,]),'OD':([6,54,55,62,102,151,158,220,221,],[-209,-170,-209,159,-147,-169,-209,267,-146,]),'TYPE':([0,5,12,14,21,24,33,52,102,128,168,203,205,221,315,336,338,346,347,353,355,357,],[39,39,-6,-8,-5,-7,-9,39,-147,-15,-10,-24,-28,-146,39,39,39,39,-32,-31,-30,-29,]),'AND':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,185,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'GTEQUAL':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,184,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'RBRACKET':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,107,132,133,134,138,139,140,146,162,163,175,192,193,194,200,207,222,228,229,230,239,240,241,242,245,250,254,255,258,259,260,261,268,269,271,272,283,284,285,286,292,295,304,305,310,312,319,320,328,331,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-87,-144,-86,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-51,-46,-44,-47,-45,-49,-50,-77,222,-101,-111,242,-82,-174,-184,-76,272,-82,-100,-88,-98,-96,-81,-173,-183,294,-61,-65,-66,-63,297,-80,304,-143,-137,-83,-82,-56,312,-53,-52,-78,328,-89,-84,-54,-64,-138,-90,]),'ASC':([0,5,6,12,13,14,21,24,33,37,44,52,55,56,63,64,74,75,77,79,95,99,102,104,106,108,109,112,113,114,116,117,118,127,128,158,165,168,170,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,196,203,205,209,212,213,215,218,221,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,347,353,355,357,],[4,4,4,-6,4,-8,-5,-7,-9,4,4,4,4,4,4,4,-110,4,4,4,4,-109,-147,-124,-158,-107,4,-125,-106,4,-126,-108,4,4,-15,4,4,-10,4,4,4,-122,4,-123,-121,-117,4,-116,-119,-114,-127,-120,-112,-115,-118,-113,-157,-24,-28,4,4,4,4,4,-146,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-32,-31,-30,-29,]),'CONCAT':([1,7,9,16,19,20,25,26,31,35,41,45,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,90,91,92,93,94,96,97,98,100,101,107,160,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,116,-74,-23,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,116,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-23,-101,-111,-174,-184,-76,-100,-88,-98,116,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'RETURN':([0,5,6,12,14,21,24,33,52,55,63,102,128,158,168,174,203,205,221,233,238,315,336,338,346,347,353,355,357,],[44,44,44,-6,-8,-5,-7,-9,44,44,44,-147,-15,44,-10,44,-24,-28,-146,44,44,44,44,44,44,-32,-31,-30,-29,]),'ASSIGN':([1,7,9,16,19,20,25,26,31,35,41,45,49,50,59,65,71,104,105,107,108,110,111,112,113,115,116,117,120,130,131,132,133,134,135,136,138,139,140,142,144,145,146,147,156,160,166,200,207,211,216,222,242,245,250,292,294,295,304,312,321,322,],[-85,-68,-70,-72,-172,-71,-73,-171,-69,106,-74,-23,-23,-21,-23,165,-68,-124,-159,-75,-107,-160,196,-125,-106,-161,-126,-108,201,-41,-40,-51,-46,-44,-58,-39,-47,-45,-49,-59,-42,-43,-50,213,218,-23,225,-174,-184,-57,-22,-76,-81,-173,-183,-53,-60,-52,-78,-84,-67,-62,]),'MINUS':([1,7,9,13,16,19,20,25,26,31,35,37,41,44,45,56,59,64,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,96,97,98,100,101,104,106,107,108,109,112,113,114,116,117,118,127,160,165,170,171,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,200,207,209,212,213,215,218,222,223,225,230,231,234,239,240,241,242,243,244,245,246,250,262,271,272,273,275,276,293,296,299,300,304,308,312,328,],[-85,-68,-70,99,-72,-172,-71,-73,-171,-69,112,99,-74,99,-23,99,-23,99,-105,-131,-68,-97,-102,99,-129,99,-99,-135,-133,-104,112,-141,-139,-144,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-124,-158,-75,-107,99,-125,-106,99,-126,-108,99,99,-23,99,99,99,-101,-122,99,-123,-121,-117,99,-116,-119,-114,-127,-120,-112,-115,-118,-113,-111,-157,-174,-184,99,99,99,99,99,-76,99,99,-100,99,99,-88,-98,112,-81,99,99,-173,99,-183,-68,-143,-137,99,99,99,99,99,99,99,-78,99,-84,-138,]),'EQUAL':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,183,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),'ARRAY':([48,49,50,65,141,201,216,288,297,337,],[148,-23,-21,148,148,148,-22,148,148,148,]),'LESS':([1,9,16,19,20,25,26,31,59,69,70,71,72,73,78,80,81,82,83,84,85,86,88,89,90,91,92,93,94,96,97,98,100,101,107,175,192,200,207,222,230,239,240,241,242,245,250,262,271,272,304,312,328,],[-85,-70,-72,-172,-71,-73,-171,-69,-23,-105,-131,-68,-97,-102,-129,-99,-135,-133,-104,-95,-141,-139,-144,187,-145,-132,-128,-103,-140,-142,-74,-130,-134,-136,-75,-101,-111,-174,-184,-76,-100,-88,-98,-96,-81,-173,-183,-68,-143,-137,-78,-84,-138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'discrete_mode':([48,65,141,201,215,217,266,288,296,297,337,],[131,131,131,131,258,263,303,131,258,131,131,]),'empty':([5,6,44,52,55,158,238,315,336,338,346,],[51,54,123,51,54,54,54,51,51,51,51,]),'primitive_value':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'parenthesized_expression':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'else_clause':([173,311,],[236,332,]),'index_mode':([215,296,],[260,260,]),'boolean_mode':([48,65,141,201,215,217,266,288,296,297,337,],[139,139,139,139,139,139,139,139,139,139,139,]),'parameter_list':([118,127,246,],[198,206,287,]),'arithmetic_multiplicative_operator':([35,72,240,],[110,171,171,]),'discrete_range_mode':([48,65,141,201,215,217,266,288,296,297,337,],[138,138,138,138,138,138,138,138,138,138,138,]),'arithmetic_additive_operator':([35,84,241,],[105,177,177,]),'operand4':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[73,73,73,73,73,73,175,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'statement_list':([0,],[17,]),'character_mode':([48,65,141,201,215,217,266,288,296,297,337,],[133,133,133,133,133,133,133,133,133,133,133,]),'action_statement':([0,5,6,52,55,158,174,233,238,315,336,338,346,],[14,14,55,14,55,55,238,238,55,14,14,14,14,]),'expression':([13,37,44,56,64,75,79,109,114,118,127,165,170,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[76,119,124,152,162,172,176,194,197,199,199,224,229,252,252,257,252,265,268,270,274,280,284,285,199,305,306,307,285,252,323,324,330,]),'integer_literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,210,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,255,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'array_element':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'monadic_operator':([13,37,44,56,64,75,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'discrete_mode_name':([48,65,141,201,215,217,266,288,296,297,337,],[143,143,143,143,143,143,143,143,143,143,143,]),'lower_bound':([109,209,212,215,296,],[195,253,253,253,253,]),'program':([0,],[32,]),'declaration_list':([3,129,],[46,208,]),'declaration_statement':([0,5,52,315,336,338,346,],[21,21,21,21,21,21,21,]),'operand3':([13,37,44,56,64,75,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[80,80,80,80,80,80,80,80,80,80,80,80,80,230,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assigning_operator':([35,],[114,]),'initialization':([147,],[214,]),'operand1':([13,37,44,56,64,75,79,109,114,118,127,165,170,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[84,84,84,84,84,84,84,84,84,84,84,84,84,241,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'newmode_statement':([0,5,52,315,336,338,346,],[24,24,24,24,24,24,24,]),'statement':([0,5,52,315,336,338,346,],[5,52,52,52,52,52,52,]),'synonym_definition':([10,167,],[66,66,]),'procedure_definition':([126,],[205,]),'string_mode':([48,65,141,201,288,297,337,],[135,135,135,135,135,135,135,]),'do_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'elsif_expression':([232,],[277,]),'closed_dyadic_operator':([35,],[111,]),'action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[30,30,30,30,30,161,30,30,30,30,30,30,30,30,]),'then_clause':([76,280,],[173,311,]),'identifier':([0,3,5,6,10,13,34,37,39,44,48,52,55,56,58,63,64,65,75,77,79,95,109,114,118,127,129,141,149,158,165,167,170,171,174,178,182,201,202,209,212,213,215,217,218,223,225,231,233,234,238,243,244,246,249,266,273,275,276,288,293,296,297,299,300,308,314,315,336,337,338,346,],[7,50,7,7,50,71,103,71,50,71,145,7,7,71,156,71,71,145,71,71,71,71,71,71,71,71,50,145,50,7,71,50,71,71,7,71,71,145,50,71,71,71,262,264,71,71,71,71,7,71,7,71,71,71,50,264,71,71,71,145,71,262,145,71,71,71,50,7,7,145,7,7,]),'string_slice':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'procedure_statement':([0,5,52,315,336,338,346,],[33,33,33,33,33,33,33,]),'array_location':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[35,35,35,93,93,93,35,35,93,35,93,93,93,93,192,93,93,93,93,35,93,93,93,35,93,93,93,93,93,93,93,93,93,93,35,93,35,93,93,93,93,93,93,93,93,93,93,93,35,35,35,35,]),'referenced_location':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'builtin_name':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'identifier_list':([3,10,39,129,149,167,202,249,314,],[48,65,120,48,216,65,120,288,288,]),'else_expression':([232,277,],[278,309,]),'return_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'bracketed_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'start_element':([64,],[163,]),'mode':([48,65,141,201,288,297,337,],[147,166,211,247,313,321,344,]),'result_spec':([290,318,],[316,339,]),'membership_operator':([89,],[188,]),'relational_operator':([89,],[191,]),'character_literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'left_element':([64,],[164,]),'string_element':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'index_mode_list':([215,296,],[261,320,]),'literal_range':([209,212,215,296,],[251,256,259,259,]),'location':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'if_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'formal_parameter':([249,314,],[289,289,]),'procedure_call':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'mode_name':([48,65,141,201,288,297,337,],[136,136,136,136,136,136,136,]),'operator1':([89,],[182,]),'expression_list':([109,170,243,],[193,228,283,]),'operand2':([13,37,44,56,64,75,79,109,114,118,127,165,170,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[72,72,72,72,72,72,72,72,72,72,72,72,72,240,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'synonym_statement':([0,5,52,315,336,338,346,],[12,12,12,12,12,12,12,]),'value_array_element':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'assignment_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaration':([3,129,],[47,47,]),'statement_nullable':([5,52,315,336,338,346,],[53,150,335,343,345,352,]),'array_mode':([48,65,141,201,288,297,337,],[142,142,142,142,142,142,142,]),'newmode_list':([39,202,],[122,248,]),'action_statement_list':([174,233,],[237,279,]),'builtin_call':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'then_expression':([172,307,330,],[232,329,341,]),'step_enumeration':([58,],[154,]),'result_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'empty_literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'boolean_literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'while_control':([6,60,],[57,157,]),'synonym_list':([10,167,],[67,226,]),'reference_mode':([48,65,141,201,288,297,337,],[130,130,130,130,130,130,130,]),'end_value':([265,301,302,326,],[298,325,327,340,]),'result':([44,],[125,]),'range_enumeration':([58,],[153,]),'integer_mode':([48,65,141,201,215,217,266,288,296,297,337,],[134,134,134,134,134,134,134,134,134,134,134,]),'step_value':([265,],[301,]),'conditional_expression':([13,37,44,56,64,75,79,109,114,118,127,165,170,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'dereferenced_reference':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'operand0':([13,37,44,56,64,75,79,109,114,118,127,165,170,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'iteration':([58,],[155,]),'upper_bound':([244,293,],[286,319,]),'mode_definition':([39,202,],[121,121,]),'string_concatenation_operator':([35,84,241,],[115,179,179,]),'operator2':([84,241,],[178,178,]),'string_length':([210,],[254,]),'literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'for_control':([6,],[60,]),'array_slice':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'control_part':([6,],[61,]),'composite_mode':([48,65,141,201,288,297,337,],[144,144,144,144,144,144,144,]),'call_action':([0,5,6,13,37,44,52,55,56,63,64,75,77,79,95,109,114,118,127,158,165,170,171,174,178,182,209,212,213,215,218,223,225,231,233,234,238,243,244,246,273,275,276,293,296,299,300,308,315,336,338,346,],[41,41,41,97,97,97,41,41,97,41,97,97,97,97,97,97,97,97,97,41,97,97,97,41,97,97,97,97,97,97,97,97,97,97,41,97,41,97,97,97,97,97,97,97,97,97,97,97,41,41,41,41,]),'action_statement_nullable':([6,55,158,238,],[62,151,220,282,]),'exit_action':([0,5,6,52,55,63,158,174,233,238,315,336,338,346,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'formal_parameter_list':([249,314,],[291,334,]),'value_array_slice':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'right_element':([223,],[269,]),'character_string_literal':([13,37,44,56,64,75,77,79,109,114,118,127,165,170,171,178,182,209,212,213,215,218,223,225,231,234,243,244,246,273,275,276,293,296,299,300,308,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'element_mode':([297,],[322,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT BOOL UPPER LOWER ASC DO RETURN ABS NULL PRINT THEN IF ARRAY TRUE ELSE EXIT BY RESULT REF TYPE DOWN PROC TO CHARS ELSIF IN DCL FALSE INT LENGTH OD SYN LOC FI READ CHAR RETURNS END FOR WHILE NUMprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'FALSE':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[56,56,56,56,56,-110,56,-109,56,56,56,-126,-108,56,-158,-107,-125,-124,-106,56,56,56,56,-123,-122,56,-115,-116,56,-118,-113,-121,-120,-119,-112,-114,-127,-117,56,-157,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'SCONST':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[85,85,85,85,85,-110,85,-109,85,85,85,-126,-108,85,-158,-107,-125,-124,-106,85,85,85,85,-123,-122,85,-115,-116,85,-118,-113,-121,-120,-119,-112,-114,-127,-117,85,-157,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'COLON':([5,11,15,25,32,34,37,39,42,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,122,135,154,189,196,197,201,202,206,211,213,214,215,217,235,243,248,250,251,253,260,261,266,294,311,312,319,321,],[-69,-172,-85,-71,-171,-70,123,-73,125,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,244,-55,247,-79,-184,-88,252,-100,-98,-96,-173,-81,-76,-183,-137,-143,299,-55,-68,-89,-84,-78,-138,-90,]),'GTEQUAL':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,148,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'LENGTH':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[2,2,2,2,-6,-7,2,-8,-9,-5,2,2,-147,2,2,-110,2,-109,2,2,2,2,2,-126,-108,2,-158,-107,-125,-124,-106,2,2,2,-24,2,2,-123,-122,2,-115,-116,2,-118,-113,-121,-120,-119,-112,-114,-127,-117,2,-10,2,-15,2,-157,-28,2,2,2,2,2,2,2,2,2,2,2,2,2,-146,2,2,2,2,2,2,2,2,2,2,2,2,2,-32,-30,-31,-29,]),'LPAREN':([2,6,7,8,14,19,26,30,38,40,42,43,45,50,58,60,61,66,77,80,89,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,156,157,159,165,166,168,169,170,172,173,174,198,200,204,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,262,266,271,272,297,298,299,301,303,304,306,309,317,],[-180,-178,-176,-182,58,-175,107,58,-181,-177,126,-179,58,-23,58,58,-110,140,58,-109,126,58,58,58,-126,-108,58,-158,-107,-125,-124,-106,58,58,58,58,-123,-122,58,-115,-116,58,-118,-113,-121,-120,-119,-112,-114,-127,-117,221,-44,-51,-49,-48,-46,-50,58,-47,-45,227,-157,126,249,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,221,-48,-48,221,58,-53,58,58,-52,58,58,221,338,]),'CONCAT':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,63,64,65,67,68,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,200,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,113,-68,-73,-23,-72,-130,-141,-132,-105,-136,-97,-104,113,-131,-134,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-23,-184,-88,-100,-98,113,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'RETURNS':([290,314,],[317,317,]),'BY':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,273,294,311,312,319,321,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,304,-89,-84,-78,-138,-90,]),'ASSIGN':([5,11,15,18,25,32,34,36,37,39,42,44,50,52,53,82,89,93,110,111,112,113,114,117,118,119,120,121,122,156,157,158,159,160,161,164,165,166,167,168,169,172,173,175,177,186,189,200,206,210,226,235,243,248,250,298,302,303,311,312,324,325,],[-69,-172,-85,-74,-71,-171,-70,116,-68,-73,-23,-72,-23,130,-21,-68,-23,170,-160,-159,-161,-126,-108,-107,-125,-124,198,-106,-75,-40,-44,-58,-51,-42,-41,-39,-49,-43,224,-46,-50,-47,-45,-59,229,233,-174,-23,-184,-22,-57,-173,-81,-76,-183,-53,-60,-52,-84,-78,-67,-62,]),'COMMA':([5,11,15,25,32,34,39,44,50,51,53,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,92,105,122,135,154,156,157,158,159,160,161,164,165,166,168,169,172,173,175,186,189,191,197,206,209,211,213,214,215,217,225,226,232,235,243,248,250,251,253,262,263,265,269,276,283,285,291,294,298,302,303,311,312,313,319,321,323,324,325,333,],[-69,-172,-85,-71,-171,-70,-73,-72,-23,129,131,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,155,187,-75,-101,-111,-40,-44,-58,-51,-42,-41,-39,-49,-43,-46,-50,-47,-45,-59,-19,-174,236,245,-184,-27,-88,245,-100,-98,-96,-14,-57,-18,-173,-81,-76,-183,-137,-143,-65,-66,301,-13,-20,-56,245,318,-89,-53,-60,-52,-84,-78,-36,-138,-90,-54,-67,-62,-35,]),'ARRAY':([50,53,93,104,130,171,210,288,300,338,],[-23,-21,162,162,162,162,-22,162,162,162,]),'PLUS':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,63,64,65,67,68,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,200,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,119,-68,-73,-23,-72,-130,-141,-132,-105,-136,-97,-104,119,-131,-134,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-23,-184,-88,-100,-98,119,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'RESULT':([0,1,20,28,29,31,35,41,46,49,96,123,132,176,184,188,193,205,238,242,246,316,335,336,342,350,354,355,357,],[45,45,45,-6,-7,-8,-9,-5,45,-147,45,45,-24,-10,45,-15,45,-28,45,45,-146,45,45,45,45,-32,-30,-31,-29,]),'OD':([20,49,96,98,99,181,184,231,246,],[-209,-147,-209,-170,183,-169,-209,275,-146,]),'PRINT':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[8,8,8,8,-6,-7,8,-8,-9,-5,8,8,-147,8,8,-110,8,-109,8,8,8,8,8,-126,-108,8,-158,-107,-125,-124,-106,8,8,8,-24,8,8,-123,-122,8,-115,-116,8,-118,-113,-121,-120,-119,-112,-114,-127,-117,8,-10,8,-15,8,-157,-28,8,8,8,8,8,8,8,8,8,8,8,8,8,-146,8,8,8,8,8,8,8,8,8,8,8,8,8,-32,-30,-31,-29,]),'IN':([5,11,15,25,32,34,39,44,50,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,177,189,206,211,214,215,217,230,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-23,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,151,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,228,-174,-184,-88,-100,-98,-96,274,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'NOT':([14,30,45,58,77,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[61,61,61,61,61,61,61,61,-126,-108,61,-158,-107,-125,-124,-106,61,61,61,61,-123,-122,61,-115,-116,61,-118,-113,-121,-120,-119,-112,-114,-127,-117,61,-157,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'OR':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,141,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'AND':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,150,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'LESS':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,147,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'MODULO':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,63,64,67,68,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,200,206,211,214,215,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,114,-68,-73,-23,-72,-130,-141,-132,-105,-136,114,-104,-131,-134,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-23,-184,-88,-100,114,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'LBRACKET':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,67,68,71,73,74,75,78,81,82,83,85,86,88,89,90,122,154,162,163,189,200,206,211,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,115,124,-73,-23,-72,-130,-141,-132,134,-136,-131,-134,-128,-129,-139,-142,-133,115,124,-140,-145,-135,-144,-23,-74,-75,115,222,223,-174,-23,-184,-88,-173,-81,-76,-183,-137,-143,124,-84,-78,-138,]),'RPAREN':([5,11,15,25,32,34,39,44,50,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,107,122,126,133,135,154,156,157,158,159,160,161,164,165,166,168,169,172,173,175,189,190,191,206,207,211,214,215,216,217,226,235,243,248,249,250,251,253,259,270,277,283,289,291,294,298,302,303,311,312,313,319,321,323,324,325,333,339,346,351,],[-69,-172,-85,-71,-171,-70,-73,-72,-23,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,189,-75,206,211,-101,-111,-40,-44,-58,-51,-42,-41,-39,-49,-43,-46,-50,-47,-45,-59,-174,235,-185,-184,250,-88,-100,-98,253,-96,-57,-173,-81,-76,290,-183,-137,-143,298,303,-186,-56,314,-33,-89,-53,-60,-52,-84,-78,-36,-138,-90,-54,-67,-62,-35,-34,352,356,]),'RBRACKET':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,122,135,154,157,159,165,168,169,172,173,189,195,197,202,203,206,211,212,213,214,215,217,235,243,248,250,251,253,262,263,264,265,267,268,282,283,284,285,286,287,292,294,298,303,311,312,319,321,323,326,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-44,-51,-49,-46,-50,-47,-45,-174,243,-82,-77,248,-184,-88,251,-82,-100,-98,-96,-173,-81,-76,-183,-137,-143,-65,-66,300,-63,-61,302,311,-56,-83,-82,-80,312,319,-89,-53,-52,-84,-78,-138,-90,-54,-64,]),'HAT':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[66,66,66,66,66,-110,66,-109,66,66,66,-126,-108,66,-158,-107,-125,-124,-106,66,66,66,66,-123,-122,66,-115,-116,66,-118,-113,-121,-120,-119,-112,-114,-127,-117,66,-157,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FI':([5,11,15,25,32,34,39,44,49,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,96,98,122,135,154,181,189,192,206,211,214,215,217,235,240,241,242,243,246,248,250,251,253,256,278,281,293,294,296,310,311,312,319,321,332,],[-69,-172,-85,-71,-171,-70,-73,-72,-147,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-209,-170,-75,-101,-111,-169,-174,237,-184,-88,-100,-98,-96,-173,280,-164,-209,-81,-146,-76,-183,-137,-143,294,-165,-168,-92,-89,321,-167,-84,-78,-138,-90,-166,]),'WHILE':([5,11,15,20,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,102,122,135,154,157,159,165,168,169,172,173,178,179,180,189,206,211,214,215,217,235,243,248,250,251,253,272,294,298,303,305,309,311,312,319,321,328,329,331,341,],[-69,-172,-85,97,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,97,-75,-101,-111,-44,-51,-49,-46,-50,-47,-45,-198,-197,-199,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-207,-89,-53,-52,-203,-206,-84,-78,-138,-90,-205,-201,-202,-200,]),'TYPE':([0,1,28,29,31,35,41,46,49,132,176,188,205,246,316,335,336,342,350,354,355,357,],[10,10,-6,-7,-8,-9,-5,10,-147,-24,-10,-15,-28,-146,10,10,10,10,-32,-30,-31,-29,]),'UPPER':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[6,6,6,6,-6,-7,6,-8,-9,-5,6,6,-147,6,6,-110,6,-109,6,6,6,6,6,-126,-108,6,-158,-107,-125,-124,-106,6,6,6,-24,6,6,-123,-122,6,-115,-116,6,-118,-113,-121,-120,-119,-112,-114,-127,-117,6,-10,6,-15,6,-157,-28,6,6,6,6,6,6,6,6,6,6,6,6,6,-146,6,6,6,6,6,6,6,6,6,6,6,6,6,-32,-30,-31,-29,]),'LOC':([50,156,157,158,159,160,161,164,165,166,168,169,172,173,175,226,298,302,303,313,324,325,346,],[-23,-40,-44,-58,-51,-42,-41,-39,-49,-43,-46,-50,-47,-45,-59,-57,-53,-60,-52,333,-67,-62,351,]),'NOTEQ':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,152,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'TO':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,273,294,307,308,311,312,319,321,327,330,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,306,-89,306,306,-84,-78,-138,-90,-204,306,]),'ABS':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[19,19,19,19,-6,-7,19,-8,-9,-5,19,19,-147,19,19,-110,19,-109,19,19,19,19,19,-126,-108,19,-158,-107,-125,-124,-106,19,19,19,-24,19,19,-123,-122,19,-115,-116,19,-118,-113,-121,-120,-119,-112,-114,-127,-117,19,-10,19,-15,19,-157,-28,19,19,19,19,19,19,19,19,19,19,19,19,19,-146,19,19,19,19,19,19,19,19,19,19,19,19,19,-32,-30,-31,-29,]),'DO':([0,1,20,28,29,31,35,41,46,49,96,123,132,176,184,188,193,205,238,242,246,316,335,336,342,350,354,355,357,],[20,20,20,-6,-7,-8,-9,-5,20,-147,20,20,-24,-10,20,-15,20,-28,20,20,-146,20,20,20,20,-32,-30,-31,-29,]),'DOWN':([5,11,15,25,32,34,39,44,50,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,122,135,154,177,189,206,211,214,215,217,235,243,248,250,251,253,273,294,307,311,312,319,321,327,],[-69,-172,-85,-71,-171,-70,-73,-72,-23,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,230,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,308,-89,330,-84,-78,-138,-90,-204,]),'EXIT':([0,1,20,28,29,31,35,41,46,49,96,123,132,176,184,188,193,205,238,242,246,316,335,336,342,350,354,355,357,],[22,22,22,-6,-7,-8,-9,-5,22,-147,22,22,-24,-10,22,-15,22,-28,22,22,-146,22,22,22,22,-32,-30,-31,-29,]),'REF':([50,53,93,104,130,171,210,288,300,338,],[-23,-21,171,171,171,171,-22,171,171,171,]),'SYN':([0,1,28,29,31,35,41,46,49,132,176,188,205,246,316,335,336,342,350,354,355,357,],[16,16,-6,-7,-8,-9,-5,16,-147,-24,-10,-15,-28,-146,16,16,16,16,-32,-30,-31,-29,]),'GREATER':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,144,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'DCL':([0,1,28,29,31,35,41,46,49,132,176,188,205,246,316,335,336,342,350,354,355,357,],[24,24,-6,-7,-8,-9,-5,24,-147,-24,-10,-15,-28,-146,24,24,24,24,-32,-30,-31,-29,]),'CHAR':([50,53,93,104,130,171,210,222,228,274,288,300,301,338,],[-23,-21,159,159,159,159,-22,159,159,159,159,159,159,159,]),'END':([28,29,31,35,41,46,48,49,128,132,176,188,205,246,316,335,336,337,342,343,344,347,350,354,355,357,],[-6,-7,-8,-9,-5,-209,-4,-147,-3,-24,-10,-15,-28,-146,-209,-209,-209,345,-209,348,349,353,-32,-30,-31,-29,]),'CHARS':([50,53,93,104,130,171,210,288,300,338,],[-23,-21,163,163,163,163,-22,163,163,163,]),'TRUE':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[83,83,83,83,83,-110,83,-109,83,83,83,-126,-108,83,-158,-107,-125,-124,-106,83,83,83,83,-123,-122,83,-115,-116,83,-118,-113,-121,-120,-119,-112,-114,-127,-117,83,-157,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'READ':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[38,38,38,38,-6,-7,38,-8,-9,-5,38,38,-147,38,38,-110,38,-109,38,38,38,38,38,-126,-108,38,-158,-107,-125,-124,-106,38,38,38,-24,38,38,-123,-122,38,-115,-116,38,-118,-113,-121,-120,-119,-112,-114,-127,-117,38,-10,38,-15,38,-157,-28,38,38,38,38,38,38,38,38,38,38,38,38,38,-146,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,-30,-31,-29,]),'ICONST':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,223,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[74,74,74,74,74,-110,74,-109,74,74,74,-126,-108,74,-158,-107,-125,-124,-106,74,74,74,74,-123,-122,74,216,-115,-116,74,-118,-113,-121,-120,-119,-112,-114,-127,-117,74,-157,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'CCONST':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[75,75,75,75,75,-110,75,-109,75,75,75,-126,-108,75,-158,-107,-125,-124,-106,75,75,75,75,-123,-122,75,-115,-116,75,-118,-113,-121,-120,-119,-112,-114,-127,-117,75,-157,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'IF':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,77,96,97,107,109,115,116,123,124,126,132,134,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[30,30,77,30,-6,-7,77,-8,-9,-5,77,30,-147,77,77,30,77,77,77,77,-158,30,77,77,-24,77,77,-10,30,-15,30,-157,-28,77,77,77,77,77,77,77,77,30,77,30,77,77,-146,77,77,77,77,77,77,77,77,77,30,30,30,30,-32,-30,-31,-29,]),'ASC':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[7,7,7,7,-6,-7,7,-8,-9,-5,7,7,-147,7,7,-110,7,-109,7,7,7,7,7,-126,-108,7,-158,-107,-125,-124,-106,7,7,7,-24,7,7,-123,-122,7,-115,-116,7,-118,-113,-121,-120,-119,-112,-114,-127,-117,7,-10,7,-15,7,-157,-28,7,7,7,7,7,7,7,7,7,7,7,7,7,-146,7,7,7,7,7,7,7,7,7,7,7,7,7,-32,-30,-31,-29,]),'INT':([50,53,93,104,130,171,210,222,228,274,288,300,301,338,],[-23,-21,165,165,165,165,-22,165,165,165,165,165,165,165,]),'ELSIF':([5,11,15,25,32,34,39,44,49,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,96,98,122,135,154,181,189,192,206,211,214,215,217,219,235,241,242,243,246,248,250,251,253,254,258,281,294,310,311,312,319,320,321,340,],[-69,-172,-85,-71,-171,-70,-73,-72,-147,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-209,-170,-75,-101,-111,-169,-174,239,-184,-88,-100,-98,-96,257,-173,-164,-209,-81,-146,-76,-183,-137,-143,-91,297,-168,-89,239,-84,-78,-138,-93,-90,-94,]),'MINUS':([5,11,14,15,18,25,30,32,34,36,37,39,42,44,45,55,56,57,58,59,62,63,64,65,67,68,71,73,74,75,77,78,81,82,83,84,85,86,87,88,89,90,97,107,109,113,114,115,116,117,118,119,121,122,124,126,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,154,170,189,198,200,206,211,214,215,217,218,221,222,224,227,229,233,235,236,239,243,244,245,247,248,250,251,252,253,255,257,266,297,299,301,304,306,311,312,319,],[-69,-172,80,-85,-74,-71,80,-171,-70,118,-68,-73,-23,-72,80,-130,-141,-132,80,-105,-136,-97,-104,118,-131,-134,-128,-129,-139,-142,80,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,80,80,80,-126,-108,80,-158,-107,-125,-124,-106,-75,80,80,80,-101,80,-123,-122,80,-115,-116,80,-118,-113,-121,-120,-119,-112,-114,-127,-117,-111,80,-174,-157,-23,-184,-88,-100,-98,118,80,80,80,80,80,80,80,-173,80,80,-81,80,80,80,-76,-183,-137,80,-143,80,80,-68,80,80,80,80,80,-84,-78,-138,]),'TIMES':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,63,64,67,68,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,200,206,211,214,215,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,121,-68,-73,-23,-72,-130,-141,-132,-105,-136,121,-104,-131,-134,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-23,-184,-88,-100,121,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'PROC':([125,],[204,]),'ELSE':([5,11,15,25,32,34,39,44,49,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,96,98,122,135,154,181,189,192,206,211,214,215,217,219,235,241,242,243,246,248,250,251,253,254,258,281,294,310,311,312,319,320,321,340,],[-69,-172,-85,-71,-171,-70,-73,-72,-147,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-209,-170,-75,-101,-111,-169,-174,238,-184,-88,-100,-98,-96,255,-173,-164,-209,-81,-146,-76,-183,-137,-143,-91,255,-168,-89,238,-84,-78,-138,-93,-90,-94,]),'FOR':([20,],[95,]),'NUM':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[40,40,40,40,-6,-7,40,-8,-9,-5,40,40,-147,40,40,-110,40,-109,40,40,40,40,40,-126,-108,40,-158,-107,-125,-124,-106,40,40,40,-24,40,40,-123,-122,40,-115,-116,40,-118,-113,-121,-120,-119,-112,-114,-127,-117,40,-10,40,-15,40,-157,-28,40,40,40,40,40,40,40,40,40,40,40,40,40,-146,40,40,40,40,40,40,40,40,40,40,40,40,40,-32,-30,-31,-29,]),'BOOL':([50,53,93,104,130,171,210,222,228,274,288,300,301,338,],[-23,-21,169,169,169,169,-22,169,169,169,169,169,169,169,]),'DIVIDE':([5,11,15,18,25,32,34,36,37,39,42,44,55,56,57,59,62,63,64,67,68,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,200,206,211,214,215,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-74,-71,-171,-70,117,-68,-73,-23,-72,-130,-141,-132,-105,-136,117,-104,-131,-134,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-23,-184,-88,-100,117,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'NULL':([14,30,45,58,60,61,77,80,97,107,109,113,114,115,116,117,118,119,121,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,198,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[88,88,88,88,88,-110,88,-109,88,88,88,-126,-108,88,-158,-107,-125,-124,-106,88,88,88,88,-123,-122,88,-115,-116,88,-118,-113,-121,-120,-119,-112,-114,-127,-117,88,-157,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'$end':([1,21,28,29,31,33,35,41,46,47,48,49,128,132,176,188,205,246,350,354,355,357,],[-209,0,-6,-7,-8,-1,-9,-5,-209,-2,-4,-147,-3,-24,-10,-15,-28,-146,-32,-30,-31,-29,]),'EQUAL':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,142,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'ID':([0,1,10,14,16,20,22,24,28,29,30,31,35,41,45,46,49,50,53,58,60,61,77,80,91,93,95,96,97,104,107,109,113,114,115,116,117,118,119,121,123,124,126,129,130,131,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,155,170,171,176,184,187,188,193,198,205,210,218,221,222,224,227,228,229,233,236,238,239,242,244,245,246,247,249,252,255,257,274,288,297,299,300,301,304,306,316,318,335,336,338,342,350,354,355,357,],[42,42,50,89,50,89,50,50,-6,-7,89,-8,-9,-5,89,42,-147,-23,-21,89,89,-110,89,-109,89,50,50,89,89,50,89,89,-126,-108,89,-158,-107,-125,-124,-106,200,89,89,50,50,50,-24,89,89,-123,-122,89,-115,-116,89,-118,-113,-121,-120,-119,-112,-114,-127,-117,50,89,50,-10,89,50,-15,89,-157,-28,-22,89,89,89,89,89,50,89,89,89,89,89,89,89,89,-146,89,50,89,89,89,50,50,89,89,50,89,89,89,42,50,42,42,50,42,-32,-30,-31,-29,]),'RETURN':([0,1,20,28,29,31,35,41,46,49,96,123,132,176,184,188,193,205,238,242,246,316,335,336,342,350,354,355,357,],[14,14,14,-6,-7,-8,-9,-5,14,-147,14,14,-24,-10,14,-15,14,-28,14,14,-146,14,14,14,14,-32,-30,-31,-29,]),'THEN':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,79,81,82,83,84,85,86,87,88,89,90,108,122,135,153,154,189,206,211,214,215,217,235,243,248,250,251,253,279,294,295,311,312,319,321,322,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-86,-128,-129,-139,-142,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,193,-75,-101,218,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,193,-89,218,-84,-78,-138,-90,218,]),'SEMI':([3,4,5,9,11,12,13,14,15,17,18,23,25,27,32,34,39,44,50,51,54,55,56,57,59,62,63,64,65,67,68,69,70,71,72,73,74,75,76,78,79,81,82,83,84,85,86,87,88,89,90,92,94,100,101,102,103,105,106,122,127,135,154,156,157,158,159,160,161,164,165,166,168,169,172,173,175,178,179,180,182,183,185,186,189,194,199,206,208,209,211,214,215,217,220,225,226,232,234,235,237,243,248,250,251,253,269,272,275,276,280,290,294,298,302,303,305,309,311,312,314,315,319,321,324,325,328,329,331,334,341,345,348,349,352,353,356,],[-155,-148,-69,49,-172,-154,-153,-209,-85,-151,-150,-152,-71,-149,-171,-70,-73,-72,-23,-25,132,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,-188,-86,-128,-190,-129,-139,-142,-189,-133,-87,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-11,176,-196,184,-195,-187,-16,188,-75,-191,-101,-111,-40,-44,-58,-51,-42,-41,-39,-49,-43,-46,-50,-47,-45,-59,-198,-197,-199,-208,-193,-194,-19,-174,-156,246,-184,-26,-27,-88,-100,-98,-96,-12,-14,-57,-18,-17,-173,-163,-81,-76,-183,-137,-143,-13,-207,-192,-20,-162,316,-89,-53,-60,-52,-203,-206,-84,-78,335,336,-138,-90,-67,-62,-205,-201,-202,342,-200,350,354,355,-38,357,-37,]),'LOWER':([0,1,14,20,28,29,30,31,35,41,45,46,49,58,60,61,77,80,91,96,97,107,109,113,114,115,116,117,118,119,121,123,124,126,132,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,170,176,184,188,193,198,205,218,221,222,224,227,229,233,236,238,239,242,244,245,246,247,252,255,257,297,299,301,304,306,316,335,336,342,350,354,355,357,],[43,43,43,43,-6,-7,43,-8,-9,-5,43,43,-147,43,43,-110,43,-109,43,43,43,43,43,-126,-108,43,-158,-107,-125,-124,-106,43,43,43,-24,43,43,-123,-122,43,-115,-116,43,-118,-113,-121,-120,-119,-112,-114,-127,-117,43,-10,43,-15,43,-157,-28,43,43,43,43,43,43,43,43,43,43,43,43,43,-146,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-30,-31,-29,]),'LTEQUAL':([5,11,15,25,32,34,39,44,55,56,57,59,62,63,64,65,67,68,70,71,73,74,75,78,81,82,83,84,85,86,87,88,89,90,122,135,154,189,206,211,214,215,217,235,243,248,250,251,253,266,311,312,319,],[-69,-172,-85,-71,-171,-70,-73,-72,-130,-141,-132,-105,-136,-97,-104,-95,-131,-134,146,-128,-129,-139,-142,-133,-103,-68,-140,-99,-145,-135,-102,-144,-23,-74,-75,-101,-111,-174,-184,-88,-100,-98,-96,-173,-81,-76,-183,-137,-143,-68,-84,-78,-138,]),'ARROW':([5,11,14,15,18,25,30,32,34,36,37,39,42,44,45,58,60,61,77,80,81,82,89,90,97,107,109,113,114,115,116,117,118,119,121,122,124,126,134,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,154,170,189,198,200,206,218,221,222,224,227,229,233,235,236,239,243,244,245,247,248,250,252,255,257,266,297,299,301,304,306,311,312,],[-69,-172,91,-85,-74,-71,91,-171,-70,122,-68,-73,-23,-72,91,91,91,-110,91,-109,122,-68,-23,-74,91,91,91,-126,-108,91,-158,-107,-125,-124,-106,-75,91,91,91,91,-123,-122,91,-115,-116,91,-118,-113,-121,-120,-119,-112,-114,-127,-117,122,91,-174,-157,-23,-184,91,91,91,91,91,91,91,-173,91,91,-81,91,91,91,-76,-183,91,91,91,-68,91,91,91,91,91,-84,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_length':([223,],[268,]),'statement':([0,1,46,316,335,336,342,],[1,46,46,46,46,46,46,]),'integer_literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,223,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,267,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'call_action':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[18,18,90,18,90,90,18,90,90,90,90,18,90,90,90,90,18,90,90,90,90,90,90,90,18,18,90,90,90,90,90,90,90,90,18,90,18,90,90,90,90,90,90,90,90,90,90,90,18,18,18,18,]),'declaration_list':([24,187,],[106,234,]),'initialization':([186,],[232,]),'primitive_value':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'bracketed_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'procedure_call':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'index_mode':([222,301,],[265,265,]),'mode_definition':([10,129,],[51,51,]),'procedure_definition':([125,],[205,]),'index_mode_list':([222,301,],[264,326,]),'referenced_location':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'while_control':([20,102,],[100,185,]),'step_value':([273,],[307,]),'arithmetic_multiplicative_operator':([36,63,215,],[110,136,136,]),'discrete_range_mode':([93,104,130,171,222,228,274,288,300,301,338,],[172,172,172,172,172,172,172,172,172,172,172,]),'location':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'operator1':([70,],[143,]),'identifier_list':([10,16,24,129,131,155,187,249,318,],[52,93,104,52,210,93,104,288,288,]),'character_mode':([93,104,130,171,222,228,274,288,300,301,338,],[168,168,168,168,168,168,168,168,168,168,168,]),'declaration':([24,187,],[105,105,]),'iteration':([95,],[179,]),'string_element':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'else_expression':([219,258,],[256,296,]),'character_literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'exit_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'lower_bound':([115,221,222,227,301,],[196,260,260,260,260,]),'operand0':([14,30,45,58,77,97,107,109,115,124,126,134,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'result_spec':([290,314,],[315,334,]),'discrete_mode':([93,104,130,171,222,228,274,288,300,301,338,],[156,156,156,156,262,272,309,156,156,262,156,]),'result_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'integer_mode':([93,104,130,171,222,228,274,288,300,301,338,],[157,157,157,157,157,157,157,157,157,157,157,]),'string_mode':([93,104,130,171,288,300,338,],[158,158,158,158,158,158,158,]),'assignment_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'end_value':([273,307,308,330,],[305,329,331,341,]),'composite_mode':([93,104,130,171,288,300,338,],[160,160,160,160,160,160,160,]),'newmode_list':([10,129,],[54,208,]),'newmode_statement':([0,1,46,316,335,336,342,],[29,29,29,29,29,29,29,]),'expression':([14,30,45,58,77,97,107,109,115,124,126,134,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[76,108,127,133,153,182,191,194,197,202,191,213,225,254,261,261,269,261,273,276,191,279,283,285,286,292,293,295,322,283,261,327,328,]),'right_element':([247,],[287,]),'boolean_literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'membership_operator':([70,],[149,]),'array_location':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[36,36,81,36,81,81,36,81,81,81,154,36,81,81,81,81,36,81,81,81,81,81,81,81,36,36,81,81,81,81,81,81,81,81,36,81,36,81,81,81,81,81,81,81,81,81,81,81,36,36,36,36,]),'declaration_statement':([0,1,46,316,335,336,342,],[41,41,41,41,41,41,41,]),'program':([0,],[21,]),'operand3':([14,30,45,58,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[84,84,84,84,84,84,84,84,84,84,84,84,214,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'string_concatenation_operator':([36,65,217,],[112,137,137,]),'control_part':([20,],[101,]),'array_mode':([93,104,130,171,288,300,338,],[175,175,175,175,175,175,175,]),'synonym_list':([16,155,],[94,220,]),'formal_parameter_list':([249,318,],[289,339,]),'formal_parameter':([249,318,],[291,291,]),'result':([14,],[69,]),'closed_dyadic_operator':([36,],[120,]),'range_enumeration':([95,],[180,]),'then_clause':([108,279,],[192,310,]),'value_array_slice':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'operator2':([65,217,],[139,139,]),'relational_operator':([70,],[145,]),'do_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'literal_range':([221,222,227,301,],[259,263,270,263,]),'statement_nullable':([1,46,316,335,336,342,],[47,128,337,343,344,347,]),'dereferenced_reference':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'builtin_call':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'assigning_operator':([36,],[109,]),'if_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'character_string_literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'operand2':([14,30,45,58,77,97,107,109,115,124,126,134,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[63,63,63,63,63,63,63,63,63,63,63,63,215,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'monadic_operator':([14,30,45,58,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'return_action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'parenthesized_expression':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'upper_bound':([244,299,],[282,323,]),'action':([0,1,20,46,96,123,184,193,238,242,316,335,336,342,],[9,9,9,9,9,199,9,9,9,9,9,9,9,9,]),'discrete_mode_name':([93,104,130,171,222,228,274,288,300,301,338,],[174,174,174,174,174,174,174,174,174,174,174,]),'left_element':([124,],[201,]),'literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'synonym_definition':([16,155,],[92,92,]),'empty':([1,14,20,46,96,184,242,316,335,336,342,],[48,72,98,48,98,98,98,48,48,48,48,]),'arithmetic_additive_operator':([36,65,217,],[111,138,138,]),'action_statement':([0,1,20,46,96,184,193,238,242,316,335,336,342,],[31,31,96,31,96,96,242,242,96,31,31,31,31,]),'string_slice':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'builtin_name':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'action_statement_nullable':([20,96,184,242,],[99,181,231,281,]),'value_array_element':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'synonym_statement':([0,1,46,316,335,336,342,],[28,28,28,28,28,28,28,]),'parameter_list':([107,126,236,],[190,207,277,]),'action_statement_list':([193,238,],[241,278,]),'mode_name':([93,104,130,171,288,300,338,],[164,164,164,164,164,164,164,]),'statement_list':([0,],[33,]),'else_clause':([192,310,],[240,332,]),'conditional_expression':([14,30,45,58,77,97,107,109,115,124,126,134,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'procedure_statement':([0,1,46,316,335,336,342,],[35,35,35,35,35,35,35,]),'expression_list':([115,134,245,],[195,212,284,]),'identifier':([0,1,10,14,16,20,22,24,30,45,46,58,60,77,91,93,95,96,97,104,107,109,115,123,124,126,129,130,131,134,136,139,143,155,170,171,184,187,193,218,221,222,224,227,228,229,233,236,238,239,242,244,245,247,249,252,255,257,274,288,297,299,300,301,304,306,316,318,335,336,338,342,],[37,37,53,82,53,37,103,53,82,82,37,82,82,82,82,166,177,37,82,166,82,82,82,82,82,82,53,166,53,82,82,82,82,53,82,166,37,53,37,82,82,266,82,82,271,82,82,82,37,82,37,82,82,82,53,82,82,82,271,166,82,82,166,266,82,82,37,53,37,37,166,37,]),'start_element':([124,],[203,]),'array_slice':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'empty_literal':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'operand4':([14,30,45,58,60,77,97,107,109,115,124,126,134,136,139,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[87,87,87,87,135,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'element_mode':([300,],[325,]),'step_enumeration':([95,],[178,]),'mode':([93,104,130,171,288,300,338,],[167,186,209,226,313,324,346,]),'reference_mode':([93,104,130,171,288,300,338,],[161,161,161,161,161,161,161,]),'elsif_expression':([219,],[258,]),'boolean_mode':([93,104,130,171,222,228,274,288,300,301,338,],[173,173,173,173,173,173,173,173,173,173,173,]),'then_expression':([153,295,322,],[219,320,340,]),'for_control':([20,],[102,]),'array_element':([0,1,14,20,30,45,46,58,60,77,91,96,97,107,109,115,123,124,126,134,136,139,143,170,184,193,218,221,222,224,227,229,233,236,238,239,242,244,245,247,252,255,257,297,299,301,304,306,316,335,336,342,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'operand1':([14,30,45,58,77,97,107,109,115,124,126,134,143,170,218,221,222,224,227,229,233,236,239,244,245,247,252,255,257,297,299,301,304,306,],[65,65,65,65,65,65,65,65,65,65,65,65,217,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> string_element','location',1,'p_location','Parser.py',369),
  ('location -> string_slice','location',1,'p_location','Parser.py',370),
  ('location -> array_element','location',1,'p_location','Parser.py',371),
  ('location -> array_slice','location',1,'p_location','Parser.py',372),
  ('location -> call_action','location',1,'p_location','Parser.py',373),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',377),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',381),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',385),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',389),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',393),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',397),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',401),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',405),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',406),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',413),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',417),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',427),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',428),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',432),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',440),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',441),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',445),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',449),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',453),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',454),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',469),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',470),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',477),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',478),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',485),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',486),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',494),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',495),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',503),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',504),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',517),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',522),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',526),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',530),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',531),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',541),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',545),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',546),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',551),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',555),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',560),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',575),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',582),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',583),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',587),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',591),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',599),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',604),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',608),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',609),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',618),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',622),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',633),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',634),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',639),
  ('action -> assignment_action','action',1,'p_action','Parser.py',640),
  ('action -> call_action','action',1,'p_action','Parser.py',641),
  ('action -> exit_action','action',1,'p_action','Parser.py',642),
  ('action -> result_action','action',1,'p_action','Parser.py',643),
  ('action -> return_action','action',1,'p_action','Parser.py',644),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',649),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',653),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',657),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',658),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',664),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',668),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',669),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',673),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',678),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',679),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',690),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',702),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',703),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',720),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',721),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',725),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',726),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',738),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',742),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',743),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',747),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',748),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',765),
  ('result -> expression','result',1,'p_result','Parser.py',769),
  ('result -> empty','result',1,'p_result','Parser.py',770),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',773),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',781),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',782),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',789),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',790),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',791),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',795),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',800),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',806),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',807),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',819),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',823),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',827),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',828),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',835),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',841),
]

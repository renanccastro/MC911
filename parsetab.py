
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT FALSE BY SYN EXIT ELSIF LOC IN FOR WHILE INT BOOL NUM NULL FI DCL OD RETURNS ARRAY CHAR TRUE TO ELSE RETURN PRINT ABS DO PROC IF LOWER CHARS RESULT REF UPPER ASC DOWN LENGTH END READ TYPE THENprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n\t\t\t\t    | string_element\n\t\t\t\t    | string_slice\n\t\t\t\t    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : expressionright_element : expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS\n                            | NOTreferenced_location : ARROW array_locationoperator1 : relational_operator\n                     | membership_operatoroperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONSTempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT label_idlabel_id : IDreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'DO':([0,1,10,11,17,21,32,38,54,94,104,124,128,159,161,187,196,206,221,225,238,328,334,342,344,],[1,1,-5,-6,-9,1,-7,-8,1,1,1,-144,1,-10,1,-24,-28,-15,1,1,-143,1,1,-30,-29,]),'DIVIDE':([2,6,7,12,15,23,24,28,30,37,39,41,51,60,62,63,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,90,91,92,123,176,177,186,190,198,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,110,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,110,-128,-130,-139,-73,-99,-109,-171,-23,-181,-98,-86,110,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'LBRACKET':([2,6,7,12,15,23,24,28,30,37,39,41,51,62,65,66,67,71,74,76,77,78,80,81,82,83,84,85,86,90,91,92,123,147,155,177,186,190,198,232,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,105,-23,112,-70,-169,-23,-126,-140,-138,-72,175,-132,-133,105,-129,-127,-142,-141,-131,-134,-137,112,-128,-130,-139,-73,213,217,112,-171,-23,-181,-86,-170,-74,-180,-79,105,-135,-76,-82,-136,]),'MODULO':([2,6,7,12,15,23,24,28,30,37,39,41,51,60,62,63,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,90,91,92,123,176,177,186,190,198,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,121,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,121,-128,-130,-139,-73,-99,-109,-171,-23,-181,-98,-86,121,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'ASSIGN':([2,6,7,12,15,23,24,28,30,37,39,41,51,55,56,58,77,102,110,113,114,115,116,117,118,120,121,122,123,131,137,138,140,141,142,143,144,145,146,149,150,151,152,154,156,186,190,198,204,214,219,235,239,242,245,294,296,297,307,311,319,320,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,119,-70,-169,-23,-23,139,-21,-66,188,-105,-156,203,-115,-114,-104,-158,-157,-106,-116,-73,208,-41,-56,-45,-43,212,-57,-49,-48,-42,-38,-39,-40,-44,-47,-37,-171,-23,-181,247,-55,-22,-170,-74,-180,-79,-58,-51,-50,-76,-82,-60,-65,]),'BY':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,250,276,301,307,311,323,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,290,-135,-87,-76,-82,-88,-136,]),'LOC':([55,137,138,140,141,143,144,145,146,149,150,151,152,154,156,214,294,296,297,309,319,320,336,],[-23,-41,-56,-45,-43,-57,-49,-48,-42,-38,-39,-40,-44,-47,-37,-55,-58,-51,-50,329,-60,-65,339,]),'ELSE':([2,6,7,15,23,24,39,41,49,51,54,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,124,136,160,176,177,186,198,224,225,227,228,231,232,233,235,238,239,242,245,269,270,274,276,300,301,307,311,322,323,325,332,],[-83,-67,-68,-71,-69,-168,-70,-169,-167,-23,-207,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-144,-166,221,-99,-109,-171,-181,-161,-207,273,-94,-98,-86,-96,-170,-143,-74,-180,-79,-165,-89,273,-135,221,-87,-76,-82,-91,-88,-136,-92,]),'WHILE':([1,2,6,7,15,23,24,39,41,51,53,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,132,133,134,140,141,144,145,146,152,154,176,177,186,198,228,231,232,233,235,239,242,245,252,276,289,293,296,297,301,307,311,312,315,316,323,325,331,],[48,-83,-67,-68,-71,-69,-168,-70,-169,-23,48,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-197,-196,-195,-45,-43,-49,-48,-42,-44,-47,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-205,-135,-201,-204,-51,-50,-87,-76,-82,-199,-203,-200,-88,-136,-198,]),'EXIT':([0,1,10,11,17,21,32,38,54,94,104,124,128,159,161,187,196,206,221,225,238,328,334,342,344,],[36,36,-5,-6,-9,36,-7,-8,36,36,36,-144,36,-10,36,-24,-28,-15,36,36,-143,36,36,-30,-29,]),'SYN':([0,10,11,17,21,32,38,94,124,159,187,196,206,238,328,334,342,344,],[8,-5,-6,-9,8,-7,-8,8,-144,-10,-24,-28,-15,-143,8,8,-30,-29,]),'IF':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,88,94,97,104,105,107,111,112,119,124,128,139,159,161,175,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[9,9,64,-5,-6,-9,64,9,64,-7,-8,64,9,64,64,9,64,9,64,64,64,64,-155,-144,9,64,-10,9,64,-24,-28,-154,-15,64,64,64,64,64,64,9,9,64,64,-143,64,64,64,64,64,64,64,64,64,64,64,64,9,9,-30,-29,]),'COLON':([2,6,7,15,23,24,28,30,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,192,194,198,200,201,228,229,231,232,233,235,239,242,245,257,258,262,276,301,307,311,323,325,],[-83,-67,-68,-71,-69,-168,104,106,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-77,240,-181,-53,244,-94,275,-98,-86,-96,-170,-74,-180,-79,-53,295,-66,-135,-87,-76,-82,-88,-136,]),'ASC':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[3,3,3,-5,-6,-9,3,3,3,-7,-8,3,3,3,-107,3,3,-108,3,3,3,3,3,3,-105,3,3,-115,-114,-104,-155,-106,-116,-144,3,3,-10,3,-124,-120,-121,-123,-118,-122,-111,3,-117,-110,-119,-125,3,3,3,-113,-112,-24,-28,-154,-15,3,3,3,3,3,3,3,3,3,3,-143,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-30,-29,]),'TO':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,250,276,288,292,301,307,311,313,314,323,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,291,-135,291,291,-87,-76,-82,291,-202,-88,-136,]),'GREATER':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,165,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'REF':([55,56,58,125,148,188,219,281,299,333,],[-23,148,-21,148,148,148,-22,148,148,148,]),'COMMA':([2,6,7,15,23,24,39,41,51,55,57,58,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,103,123,126,137,138,140,141,143,144,145,146,149,150,151,152,154,156,176,177,184,186,198,200,204,211,214,228,229,231,232,233,235,236,239,242,245,246,254,261,263,265,276,282,283,285,287,294,296,297,301,307,309,311,317,319,320,323,325,329,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-23,157,158,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,189,-73,205,-41,-56,-45,-43,-57,-49,-48,-42,-38,-39,-40,-44,-47,-37,-99,-109,234,-171,-181,243,-19,-14,-55,-94,243,-98,-86,-96,-170,-27,-74,-180,-79,-18,-13,298,-63,-64,-135,310,243,-54,-20,-58,-51,-50,-87,-76,-34,-82,-52,-60,-65,-88,-136,-33,]),'LOWER':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[14,14,14,-5,-6,-9,14,14,14,-7,-8,14,14,14,-107,14,14,-108,14,14,14,14,14,14,-105,14,14,-115,-114,-104,-155,-106,-116,-144,14,14,-10,14,-124,-120,-121,-123,-118,-122,-111,14,-117,-110,-119,-125,14,14,14,-113,-112,-24,-28,-154,-15,14,14,14,14,14,14,14,14,14,14,-143,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-30,-29,]),'OD':([1,49,50,54,124,128,136,207,238,],[-207,-167,130,-207,-144,-207,-166,249,-143,]),'ARRAY':([55,56,58,125,148,188,219,281,299,333,],[-23,155,-21,155,155,155,-22,155,155,155,]),'SCONST':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[81,81,81,81,81,-107,81,-108,81,81,81,81,-105,81,81,-115,-114,-104,-155,-106,-116,81,-124,-120,-121,-123,-118,-122,-111,81,-117,-110,-119,-125,81,81,81,-113,-112,-154,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'IN':([2,6,7,15,23,24,39,41,51,55,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,131,176,177,186,198,210,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-23,-100,-126,-97,-140,-138,-72,-102,174,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,209,-99,-109,-171,-181,253,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'RESULT':([0,1,10,11,17,21,32,38,54,94,104,124,128,159,161,187,196,206,221,225,238,328,334,342,344,],[19,19,-5,-6,-9,19,-7,-8,19,19,19,-144,19,-10,19,-24,-28,-15,19,19,-143,19,19,-30,-29,]),'READ':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[20,20,20,-5,-6,-9,20,20,20,-7,-8,20,20,20,-107,20,20,-108,20,20,20,20,20,20,-105,20,20,-115,-114,-104,-155,-106,-116,-144,20,20,-10,20,-124,-120,-121,-123,-118,-122,-111,20,-117,-110,-119,-125,20,20,20,-113,-112,-24,-28,-154,-15,20,20,20,20,20,20,20,20,20,20,-143,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-30,-29,]),'THEN':([2,6,7,15,23,24,39,41,51,60,61,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,162,176,177,186,198,228,231,232,233,235,239,242,245,266,276,301,302,307,311,323,324,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,161,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,226,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,161,-135,-87,226,-76,-82,-88,226,-136,]),'OR':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,167,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'DOWN':([2,6,7,15,23,24,39,41,51,55,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,131,176,177,186,198,228,231,232,233,235,239,242,245,250,276,288,301,307,311,314,323,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,210,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,292,-135,313,-87,-76,-82,-202,-88,-136,]),'AND':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,171,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'LTEQUAL':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,163,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'ARROW':([2,6,7,9,12,15,19,23,24,26,28,30,37,39,41,48,51,64,67,70,72,75,77,86,88,97,105,107,110,111,112,115,116,117,119,121,122,123,139,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,181,182,186,190,198,203,208,212,215,216,217,220,226,234,235,239,240,242,243,244,245,247,262,272,273,275,290,291,295,298,305,307,311,],[-83,-67,-68,73,-72,-71,73,-69,-168,73,-66,-23,123,-70,-169,73,-23,73,-72,-107,73,-108,-66,123,73,73,73,73,-105,73,73,-115,-114,-104,-155,-106,-116,-73,73,-124,-120,-121,-123,-118,-122,-111,73,-117,-110,-119,-125,73,123,73,73,-113,-112,-171,-23,-181,-154,73,73,73,73,73,73,73,73,-170,-74,73,-180,73,73,-79,73,-66,73,73,73,73,73,73,73,73,-76,-82,]),'PRINT':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[34,34,34,-5,-6,-9,34,34,34,-7,-8,34,34,34,-107,34,34,-108,34,34,34,34,34,34,-105,34,34,-115,-114,-104,-155,-106,-116,-144,34,34,-10,34,-124,-120,-121,-123,-118,-122,-111,34,-117,-110,-119,-125,34,34,34,-113,-112,-24,-28,-154,-15,34,34,34,34,34,34,34,34,34,34,-143,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-30,-29,]),'RETURN':([0,1,10,11,17,21,32,38,54,94,104,124,128,159,161,187,196,206,221,225,238,328,334,342,344,],[26,26,-5,-6,-9,26,-7,-8,26,26,26,-144,26,-10,26,-24,-28,-15,26,26,-143,26,26,-30,-29,]),'NULL':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[82,82,82,82,82,-107,82,-108,82,82,82,82,-105,82,82,-115,-114,-104,-155,-106,-116,82,-124,-120,-121,-123,-118,-122,-111,82,-117,-110,-119,-125,82,82,82,-113,-112,-154,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'NOT':([9,19,26,48,64,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[75,75,75,75,75,75,75,75,75,-105,75,75,-115,-114,-104,-155,-106,-116,75,-124,-120,-121,-123,-118,-122,-111,75,-117,-110,-119,-125,75,75,75,-113,-112,-154,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TYPE':([0,10,11,17,21,32,38,94,124,159,187,196,206,238,328,334,342,344,],[27,-5,-6,-9,27,-7,-8,27,-144,-10,-24,-28,-15,-143,27,27,-30,-29,]),'INT':([55,56,58,125,148,188,209,217,219,253,281,298,299,333,],[-23,154,-21,154,154,154,154,154,-22,154,154,154,154,154,]),'NOTEQ':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,164,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'PROC':([106,],[195,]),'ID':([0,1,8,9,10,11,17,19,21,26,27,32,36,38,44,48,52,54,55,56,58,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,125,128,139,148,157,158,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,188,189,196,203,205,206,208,209,212,215,216,217,219,220,221,225,226,234,238,240,241,243,244,247,253,272,273,275,281,290,291,295,298,299,305,310,328,333,334,342,344,],[30,51,55,51,-5,-6,-9,51,30,51,55,-7,109,-8,55,51,55,51,-23,55,-21,51,-107,51,51,-108,51,30,51,190,51,51,-105,51,51,-115,-114,-104,-155,-106,-116,-144,55,51,51,55,55,55,-10,51,-124,-120,-121,-123,-118,-122,-111,51,-117,-110,-119,-125,51,51,51,-113,-112,-24,55,55,-28,-154,55,-15,51,55,51,51,51,51,-22,51,51,51,51,51,-143,51,55,51,51,51,55,51,51,51,55,51,51,51,51,55,51,55,30,55,30,-30,-29,]),'NUM':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[31,31,31,-5,-6,-9,31,31,31,-7,-8,31,31,31,-107,31,31,-108,31,31,31,31,31,31,-105,31,31,-115,-114,-104,-155,-106,-116,-144,31,31,-10,31,-124,-120,-121,-123,-118,-122,-111,31,-117,-110,-119,-125,31,31,31,-113,-112,-24,-28,-154,-15,31,31,31,31,31,31,31,31,31,31,-143,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-29,]),'PLUS':([2,6,7,12,15,23,24,28,30,37,39,41,51,60,62,63,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,190,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,116,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,116,-128,-130,-139,-73,-99,-109,-171,-23,-181,116,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'TIMES':([2,6,7,12,15,23,24,28,30,37,39,41,51,60,62,63,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,90,91,92,123,176,177,186,190,198,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,117,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,117,-128,-130,-139,-73,-99,-109,-171,-23,-181,-98,-86,117,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'BOOL':([55,56,58,125,148,188,209,217,219,253,281,298,299,333,],[-23,145,-21,145,145,145,145,145,-22,145,145,145,145,145,]),'RETURNS':([308,],[326,]),'ABS':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[35,35,35,-5,-6,-9,35,35,35,-7,-8,35,35,35,-107,35,35,-108,35,35,35,35,35,35,-105,35,35,-115,-114,-104,-155,-106,-116,-144,35,35,-10,35,-124,-120,-121,-123,-118,-122,-111,35,-117,-110,-119,-125,35,35,35,-113,-112,-24,-28,-154,-15,35,35,35,35,35,35,35,35,35,35,-143,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-30,-29,]),'CHAR':([55,56,58,125,148,188,209,217,219,253,281,298,299,333,],[-23,144,-21,144,144,144,144,144,-22,144,144,144,144,144,]),'$end':([10,11,17,18,21,29,32,38,94,95,96,124,159,183,187,196,206,238,342,344,],[-5,-6,-9,0,-207,-1,-7,-8,-207,-4,-2,-144,-10,-3,-24,-28,-15,-143,-30,-29,]),'ICONST':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,213,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[85,85,85,85,85,-107,85,-108,85,85,85,85,-105,85,85,-115,-114,-104,-155,-106,-116,85,-124,-120,-121,-123,-118,-122,-111,85,-117,-110,-119,-125,85,85,85,-113,-112,-154,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'FOR':([1,],[52,]),'TRUE':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[66,66,66,66,66,-107,66,-108,66,66,66,66,-105,66,66,-115,-114,-104,-155,-106,-116,66,-124,-120,-121,-123,-118,-122,-111,66,-117,-110,-119,-125,66,66,66,-113,-112,-154,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'CONCAT':([2,6,7,12,15,23,24,28,30,37,39,41,51,60,62,63,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,190,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-72,-71,-69,-168,-66,-23,122,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,122,-128,-130,-139,-73,-99,-109,-171,-23,-181,122,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'ELSIF':([2,6,7,15,23,24,39,41,49,51,54,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,124,136,160,176,177,186,198,224,225,227,228,231,232,233,235,238,239,242,245,269,270,274,276,300,301,307,311,322,323,325,332,],[-83,-67,-68,-71,-69,-168,-70,-169,-167,-23,-207,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-144,-166,220,-99,-109,-171,-181,-161,-207,272,-94,-98,-86,-96,-170,-143,-74,-180,-79,-165,-89,305,-135,220,-87,-76,-82,-91,-88,-136,-92,]),'SEMI':([2,4,5,6,7,12,13,15,16,22,23,24,26,33,39,41,42,45,46,47,51,53,55,57,59,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,98,99,100,101,103,108,109,123,126,127,129,130,132,133,134,135,137,138,140,141,143,144,145,146,149,150,151,152,154,156,176,177,186,191,198,199,204,211,214,218,223,228,231,232,233,235,236,237,239,242,245,246,248,249,252,254,268,276,287,289,293,294,296,297,301,307,308,311,312,315,316,319,320,323,325,327,331,338,340,341,343,],[-83,-151,-146,-67,-68,-147,-145,-71,-149,-148,-69,-168,-207,-150,-70,-169,124,-152,128,-194,-23,-193,-23,-11,159,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-189,-186,-187,-188,187,-25,-184,-185,-73,-16,206,-206,-191,-197,-196,-195,-192,-41,-56,-45,-43,-57,-49,-48,-42,-38,-39,-40,-44,-47,-37,-99,-109,-171,238,-181,-153,-19,-14,-55,-12,-160,-94,-98,-86,-96,-170,-27,-26,-74,-180,-79,-18,-17,-190,-205,-13,-159,-135,-20,-201,-204,-58,-51,-50,-87,-76,328,-82,-199,-203,-200,-60,-65,-88,-136,334,-198,342,-36,344,-35,]),'CHARS':([55,56,58,125,148,188,219,281,299,333,],[-23,147,-21,147,147,147,-22,147,147,147,]),'RPAREN':([2,6,7,15,23,24,39,41,51,55,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,97,107,123,137,138,140,141,143,144,145,146,149,150,151,152,154,156,176,177,179,184,185,186,197,198,214,228,231,232,233,235,239,242,245,259,260,276,277,280,282,285,294,296,297,301,307,309,311,317,319,320,323,325,329,330,336,339,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,186,198,-73,-41,-56,-45,-43,-57,-49,-48,-42,-38,-39,-40,-44,-47,-37,-99,-109,232,-182,235,-171,242,-181,-55,-94,-98,-86,-96,-170,-74,-180,-79,296,297,-135,-183,308,-31,-54,-58,-51,-50,-87,-76,-34,-82,-52,-60,-65,-88,-136,-33,-32,340,343,]),'LESS':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,166,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'LPAREN':([3,9,14,19,20,25,26,30,31,34,35,40,43,48,51,55,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,137,139,140,141,144,145,146,149,152,153,154,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,190,195,203,208,212,215,216,217,220,226,234,240,243,244,247,251,252,262,263,272,273,275,290,291,293,295,296,297,298,305,326,],[-173,88,-176,88,-178,97,88,107,-174,-179,-172,-177,-175,88,107,-23,88,-107,88,-108,88,88,88,88,-105,88,88,-115,-114,-104,-155,-106,-116,-46,88,-45,-43,-49,-48,-42,215,-44,216,-47,-124,-120,-121,-123,-118,-122,-111,88,-117,-110,-119,-125,88,88,88,-113,-112,107,241,-154,88,88,88,88,88,88,88,88,88,88,88,88,-46,215,-46,215,88,88,88,88,88,215,88,-51,-50,88,88,333,]),'FI':([2,6,7,15,23,24,39,41,49,51,54,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,124,136,160,176,177,186,198,222,224,225,228,231,232,233,235,238,239,242,245,267,269,271,276,300,301,303,304,307,311,321,323,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-167,-23,-207,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-144,-166,223,-99,-109,-171,-181,268,-161,-207,-94,-98,-86,-96,-170,-143,-74,-180,-79,-162,-165,301,-135,-164,-87,-90,323,-76,-82,-163,-88,-136,]),'GTEQUAL':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,168,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'END':([10,11,17,32,38,94,95,124,159,183,187,196,206,238,328,334,335,337,342,344,],[-5,-6,-9,-7,-8,-207,-4,-144,-10,-3,-24,-28,-15,-143,-207,-207,338,341,-30,-29,]),'LENGTH':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[40,40,40,-5,-6,-9,40,40,40,-7,-8,40,40,40,-107,40,40,-108,40,40,40,40,40,40,-105,40,40,-115,-114,-104,-155,-106,-116,-144,40,40,-10,40,-124,-120,-121,-123,-118,-122,-111,40,-117,-110,-119,-125,40,40,40,-113,-112,-24,-28,-154,-15,40,40,40,40,40,40,40,40,40,40,-143,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-30,-29,]),'MINUS':([2,6,7,9,12,15,19,23,24,26,28,30,37,39,41,48,51,60,62,63,64,65,66,67,68,71,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,97,105,107,110,111,112,115,116,117,119,121,122,123,139,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,186,190,198,203,208,212,215,216,217,220,226,228,231,232,233,234,235,239,240,242,243,244,245,247,262,272,273,275,276,290,291,295,298,305,307,311,325,],[-83,-67,-68,70,-72,-71,70,-69,-168,70,-66,-23,115,-70,-169,70,-23,-100,-126,-97,70,-140,-138,-72,-102,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,70,115,-128,-130,-139,70,70,70,-105,70,70,-115,-114,-104,-155,-106,-116,-73,70,-124,-120,-121,-123,-118,-122,-111,70,-117,-110,-119,-125,70,-99,-109,70,70,-113,-112,-171,-23,-181,-154,70,70,70,70,70,70,70,115,-98,-86,-96,70,-170,-74,70,-180,70,70,-79,70,-66,70,70,70,-135,70,70,70,70,70,-76,-82,-136,]),'EQUAL':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,80,81,82,83,84,85,86,87,89,90,91,92,123,176,177,186,198,228,231,232,233,235,239,242,245,262,276,307,311,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,173,-103,-132,-133,-66,-129,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-99,-109,-171,-181,-94,-98,-86,-96,-170,-74,-180,-79,-66,-135,-76,-82,-136,]),'RBRACKET':([2,6,7,15,23,24,39,41,51,60,62,63,65,66,67,68,69,71,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,123,140,141,144,145,146,152,154,176,177,186,192,193,198,200,202,228,229,230,231,232,233,235,239,242,245,255,256,261,263,264,265,276,278,279,283,284,285,286,296,297,301,306,307,311,317,318,323,325,],[-83,-67,-68,-71,-69,-168,-70,-169,-23,-100,-126,-97,-140,-138,-72,-102,-84,-103,-132,-133,-66,-129,-85,-127,-142,-141,-131,-134,-137,-101,-95,-93,-128,-130,-139,-73,-45,-43,-49,-48,-42,-44,-47,-99,-109,-171,-75,239,-181,-80,245,-94,-80,276,-98,-86,-96,-170,-74,-180,-79,294,-59,-61,-63,299,-64,-135,-78,307,-80,-81,-54,311,-51,-50,-87,325,-76,-82,-52,-62,-88,-136,]),'CCONST':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[65,65,65,65,65,-107,65,-108,65,65,65,65,-105,65,65,-115,-114,-104,-155,-106,-116,65,-124,-120,-121,-123,-118,-122,-111,65,-117,-110,-119,-125,65,65,65,-113,-112,-154,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'UPPER':([0,1,9,10,11,17,19,21,26,32,38,48,54,64,70,72,73,75,88,94,97,104,105,107,110,111,112,115,116,117,119,121,122,124,128,139,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,187,196,203,206,208,212,215,216,217,220,221,225,226,234,238,240,243,244,247,272,273,275,290,291,295,298,305,328,334,342,344,],[43,43,43,-5,-6,-9,43,43,43,-7,-8,43,43,43,-107,43,43,-108,43,43,43,43,43,43,-105,43,43,-115,-114,-104,-155,-106,-116,-144,43,43,-10,43,-124,-120,-121,-123,-118,-122,-111,43,-117,-110,-119,-125,43,43,43,-113,-112,-24,-28,-154,-15,43,43,43,43,43,43,43,43,43,43,-143,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-30,-29,]),'DCL':([0,10,11,17,21,32,38,94,124,159,187,196,206,238,328,334,342,344,],[44,-5,-6,-9,44,-7,-8,44,-144,-10,-24,-28,-15,-143,44,44,-30,-29,]),'FALSE':([9,19,26,48,64,70,72,75,88,97,105,107,110,111,112,115,116,117,119,121,122,139,163,164,165,166,167,168,169,170,171,172,173,174,175,178,180,181,182,203,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[92,92,92,92,92,-107,92,-108,92,92,92,92,-105,92,92,-115,-114,-104,-155,-106,-116,92,-124,-120,-121,-123,-118,-122,-111,92,-117,-110,-119,-125,92,92,92,-113,-112,-154,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string_mode':([56,125,148,188,281,299,333,],[138,138,138,138,138,138,138,]),'location':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'index_mode':([217,298,],[261,261,]),'while_control':([1,53,],[47,135,]),'if_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([9,19,26,48,64,88,97,105,107,111,112,139,175,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[61,93,99,129,162,179,184,192,184,199,200,211,229,250,254,257,257,257,266,270,184,278,283,285,287,302,303,306,314,315,285,257,324,]),'identifier_list':([8,27,44,157,158,189,205,241,310,],[56,102,125,56,219,102,125,281,281,]),'synonym_list':([8,157,],[59,218,]),'mode':([56,125,148,188,281,299,333,],[142,204,214,236,309,320,336,]),'range_enumeration':([52,],[132,]),'operand3':([9,19,26,48,64,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,231,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'initialization':([204,],[246,]),'call_action':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[12,12,67,67,12,67,67,12,67,67,67,67,12,67,12,67,67,67,67,12,67,12,67,67,67,67,67,67,67,67,67,67,12,12,67,67,67,67,67,67,67,67,67,67,67,67,67,67,12,12,]),'bracketed_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'referenced_location':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'assigning_operator':([37,],[111,]),'result_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'primitive_value':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'statement':([0,21,94,328,334,],[21,94,94,94,94,]),'closed_dyadic_operator':([37,],[114,]),'monadic_operator':([9,19,26,48,64,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string_length':([213,],[255,]),'character_literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'result_spec':([308,],[327,]),'identifier':([0,1,8,9,19,21,26,27,44,48,52,54,56,64,72,73,88,94,97,104,105,107,111,112,125,128,139,148,157,158,161,170,175,178,180,188,189,205,208,209,212,215,216,217,220,221,225,226,234,240,241,243,244,247,253,272,273,275,281,290,291,295,298,299,305,310,328,333,334,],[28,28,58,77,77,28,77,58,58,77,131,28,137,77,77,77,77,28,77,77,77,77,77,77,137,28,77,137,58,58,28,77,77,77,77,137,58,58,77,251,77,77,77,262,77,28,28,77,77,77,58,77,77,77,251,77,77,77,137,77,77,77,262,137,77,58,28,137,28,]),'parenthesized_expression':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'conditional_expression':([9,19,26,48,64,88,97,105,107,111,112,139,175,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'newmode_statement':([0,21,94,328,334,],[32,32,32,32,32,]),'left_element':([105,],[194,]),'boolean_mode':([56,125,148,188,209,217,253,281,298,299,333,],[141,141,141,141,141,141,141,141,141,141,141,]),'builtin_name':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'operator1':([69,],[170,]),'operator2':([89,228,],[180,180,]),'declaration':([44,205,],[126,126,]),'declaration_list':([44,205,],[127,248,]),'else_clause':([160,300,],[222,321,]),'label_id':([36,],[108,]),'reference_mode':([56,125,148,188,281,299,333,],[150,150,150,150,150,150,150,]),'action_statement_list':([161,221,],[224,267,]),'composite_mode':([56,125,148,188,281,299,333,],[151,151,151,151,151,151,151,]),'string_element':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'action_statement':([0,1,21,54,94,128,161,221,225,328,334,],[38,54,38,54,38,54,225,225,54,38,38,]),'membership_operator':([69,],[169,]),'newmode_list':([27,189,],[101,237,]),'value_array_slice':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'formal_parameter_list':([241,310,],[280,330,]),'integer_literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,213,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,256,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'upper_bound':([244,295,],[286,317,]),'control_part':([1,],[46,]),'operand4':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[60,60,60,60,60,176,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'then_clause':([61,266,],[160,300,]),'mode_definition':([27,189,],[103,103,]),'then_expression':([162,302,324,],[227,322,332,]),'result':([26,],[98,]),'assignment_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'discrete_mode_name':([56,125,148,188,209,217,253,281,298,299,333,],[153,153,153,153,153,153,153,153,153,153,153,]),'parameter_list':([97,107,234,],[185,197,277,]),'step_enumeration':([52,],[133,]),'array_mode':([56,125,148,188,281,299,333,],[143,143,143,143,143,143,143,]),'formal_parameter':([241,310,],[282,282,]),'declaration_statement':([0,21,94,328,334,],[10,10,10,10,10,]),'synonym_statement':([0,21,94,328,334,],[11,11,11,11,11,]),'statement_list':([0,],[29,]),'action_statement_nullable':([1,54,128,225,],[50,136,207,269,]),'operand0':([9,19,26,48,64,88,97,105,107,111,112,139,175,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'procedure_statement':([0,21,94,328,334,],[17,17,17,17,17,]),'program':([0,],[18,]),'do_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'step_value':([250,],[288,]),'character_mode':([56,125,148,188,209,217,253,281,298,299,333,],[152,152,152,152,152,152,152,152,152,152,152,]),'exit_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'element_mode':([299,],[319,]),'string_slice':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'lower_bound':([112,215,216,217,298,],[201,258,258,258,258,]),'relational_operator':([69,],[172,]),'procedure_call':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'arithmetic_multiplicative_operator':([37,87,233,],[120,178,178,]),'empty':([1,21,26,54,94,128,225,328,334,],[49,95,100,49,95,49,49,95,95,]),'mode_name':([56,125,148,188,281,299,333,],[156,156,156,156,156,156,156,]),'empty_literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'string_concatenation_operator':([37,89,228,],[118,181,181,]),'start_element':([105,],[193,]),'value_array_element':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'synonym_definition':([8,157,],[57,57,]),'discrete_range_mode':([56,125,148,188,209,217,253,281,298,299,333,],[140,140,140,140,140,140,140,140,140,140,140,]),'return_action':([0,1,21,54,94,104,128,161,221,225,328,334,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'statement_nullable':([21,94,328,334,],[96,183,335,337,]),'index_mode_list':([217,298,],[264,318,]),'elsif_expression':([227,],[274,]),'expression_list':([112,175,243,],[202,230,284,]),'else_expression':([227,274,],[271,304,]),'boolean_literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'character_string_literal':([9,19,26,48,64,72,88,97,105,107,111,112,139,170,175,178,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'integer_mode':([56,125,148,188,209,217,253,281,298,299,333,],[146,146,146,146,146,146,146,146,146,146,146,]),'right_element':([240,],[279,]),'end_value':([250,288,292,313,],[289,312,316,331,]),'discrete_mode':([56,125,148,188,209,217,253,281,298,299,333,],[149,149,149,149,252,263,293,149,263,149,149,]),'dereferenced_reference':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'array_location':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[37,37,86,86,37,86,86,37,86,86,177,86,37,86,37,86,86,86,86,37,86,37,86,86,86,86,86,86,86,86,86,86,37,37,86,86,86,86,86,86,86,86,86,86,86,86,86,86,37,37,]),'operand2':([9,19,26,48,64,88,97,105,107,111,112,139,170,175,180,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,233,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'for_control':([1,],[53,]),'array_slice':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'builtin_call':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'procedure_definition':([106,],[196,]),'operand1':([9,19,26,48,64,88,97,105,107,111,112,139,170,175,208,212,215,216,217,220,226,234,240,243,244,247,272,273,275,290,291,295,298,305,],[89,89,89,89,89,89,89,89,89,89,89,89,228,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'iteration':([52,],[134,]),'arithmetic_additive_operator':([37,89,228,],[113,182,182,]),'action':([0,1,21,54,94,104,128,161,221,225,328,334,],[42,42,42,42,42,191,42,42,42,42,42,42,]),'literal_range':([215,216,217,298,],[259,260,265,265,]),'array_element':([0,1,9,19,21,26,48,54,64,72,73,88,94,97,104,105,107,111,112,128,139,161,170,175,178,180,208,212,215,216,217,220,221,225,226,234,240,243,244,247,272,273,275,290,291,295,298,305,328,334,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',63),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',67),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',79),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',80),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',94),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',95),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',96),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',105),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',109),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',110),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',119),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',120),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',134),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',138),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',139),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',147),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',148),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',152),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',156),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',157),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',166),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',177),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',181),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',182),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',191),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',202),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',206),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',207),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',211),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',212),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',221),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',222),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',228),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',229),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',234),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',235),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',236),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',237),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',241),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',251),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',252),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',256),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',260),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',264),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',268),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',277),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',278),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',282),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',286),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',290),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',297),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',304),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',305),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',309),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',313),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',317),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',321),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',322),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',331),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',332),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',336),
  ('location -> identifier','location',1,'p_location','Parser.py',347),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',348),
  ('location -> string_element','location',1,'p_location','Parser.py',349),
  ('location -> string_slice','location',1,'p_location','Parser.py',350),
  ('location -> array_element','location',1,'p_location','Parser.py',351),
  ('location -> array_slice','location',1,'p_location','Parser.py',352),
  ('location -> call_action','location',1,'p_location','Parser.py',353),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',357),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',361),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',365),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',369),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',373),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',377),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',381),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',385),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',386),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',393),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',397),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',407),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',408),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',412),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',420),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',421),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',425),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',429),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',433),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',434),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',449),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',450),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',457),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',458),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',465),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',466),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',474),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',475),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',482),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',483),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',496),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',497),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',501),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',502),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',506),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',510),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',511),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',515),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',516),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',520),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',521),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',525),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',540),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',554),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',555),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',561),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',562),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',563),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',567),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',571),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',579),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',583),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',584),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',588),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',592),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',596),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',607),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',608),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',613),
  ('action -> assignment_action','action',1,'p_action','Parser.py',614),
  ('action -> call_action','action',1,'p_action','Parser.py',615),
  ('action -> exit_action','action',1,'p_action','Parser.py',616),
  ('action -> result_action','action',1,'p_action','Parser.py',617),
  ('action -> return_action','action',1,'p_action','Parser.py',618),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',622),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',623),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',627),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',631),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',632),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',637),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',638),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',642),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',643),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',647),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',651),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',652),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',653),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',664),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',676),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',677),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',694),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',695),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',699),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',700),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',711),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',712),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',716),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',717),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',721),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',722),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',731),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',735),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',739),
  ('result -> expression','result',1,'p_result','Parser.py',743),
  ('result -> empty','result',1,'p_result','Parser.py',744),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',747),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',755),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',756),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',763),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',764),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',765),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',769),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',773),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',774),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',779),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',780),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',781),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',793),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',797),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',801),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',802),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',809),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',815),
]

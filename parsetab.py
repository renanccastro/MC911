
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AA8A4782E01D9DFB300D5B9801F9C8DE'
    
_lr_action_items = {'NOT':([1,3,33,47,57,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[46,46,46,46,46,46,-104,46,-114,-105,46,-155,-116,-115,-106,46,46,46,46,-117,46,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,46,46,-113,-112,-154,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'CHAR':([86,87,89,111,171,185,227,231,243,263,281,300,301,333,],[157,-21,-23,157,157,157,157,-22,157,157,157,157,157,157,]),'ELSIF':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,116,118,121,130,145,146,153,198,201,207,209,214,215,216,217,220,221,233,245,247,248,251,253,257,258,292,293,304,311,312,314,316,331,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-167,-207,-144,211,-109,-99,-181,-166,-171,250,-98,-161,-207,-86,-94,-96,-180,-79,-170,-74,-143,290,-89,-165,-135,-87,211,-82,-76,-91,-88,-136,-92,]),'IF':([0,1,3,14,21,25,27,33,35,37,41,47,57,83,90,94,101,102,118,119,121,122,126,127,131,147,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[1,47,47,1,-7,1,-6,47,-8,-9,-5,47,47,47,1,47,47,-155,1,47,-144,47,47,1,1,47,-28,-15,-154,-24,-10,47,1,47,1,47,1,47,47,47,47,47,47,47,47,47,47,-143,47,47,47,47,47,47,47,47,1,1,-30,-29,]),'ICONST':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,229,234,235,238,242,246,249,250,259,290,298,301,307,308,],[49,49,49,-108,49,49,-107,49,49,-104,49,-114,-105,49,-155,-116,-115,-106,49,49,49,49,-117,49,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,49,49,-113,-112,-154,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'EQUAL':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,135,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'OR':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,136,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'RETURN':([0,14,21,25,27,35,37,41,90,118,121,127,131,155,156,186,187,196,210,215,248,319,332,342,343,],[3,3,-7,3,-6,-8,-9,-5,3,3,-144,3,3,-28,-15,-24,-10,3,3,3,-143,3,3,-30,-29,]),'ID':([0,1,3,7,14,18,21,22,25,27,32,33,35,37,41,46,47,57,60,61,62,83,86,87,89,90,93,94,95,99,101,102,103,105,106,111,113,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,171,176,177,180,184,185,186,187,189,190,196,208,210,211,215,222,223,224,225,227,228,231,234,235,238,242,243,246,248,249,250,259,263,281,290,296,298,300,301,307,308,319,332,333,342,343,],[5,69,69,89,5,89,-7,89,69,-6,124,69,-8,-9,-5,-108,69,69,69,-107,69,69,89,-21,-23,5,-104,69,-114,-105,69,-155,-116,-115,-106,89,89,69,69,-144,69,69,205,69,69,-117,69,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,69,69,-113,-112,-28,-15,89,89,89,-154,89,89,-24,-10,69,89,69,69,69,69,69,69,89,69,69,69,69,-22,69,69,69,69,89,69,-143,69,69,69,89,89,69,89,69,89,69,69,69,5,5,89,-30,-29,]),'FOR':([25,],[113,]),'READ':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[6,6,6,6,-7,6,-6,6,-8,-9,-5,-108,6,6,6,-107,6,6,6,-104,6,-114,-105,6,-155,-116,-115,-106,6,6,-144,6,6,6,6,6,-117,6,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,6,6,-113,-112,-28,-15,-154,-24,-10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-143,6,6,6,6,6,6,6,6,6,6,-30,-29,]),'CCONST':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[76,76,76,-108,76,76,-107,76,76,-104,76,-114,-105,76,-155,-116,-115,-106,76,76,76,76,-117,76,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,76,76,-113,-112,-154,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DCL':([0,14,21,27,35,37,41,90,121,155,156,186,187,248,319,332,342,343,],[7,7,-7,-6,-8,-9,-5,7,-144,-28,-15,-24,-10,-143,7,7,-30,-29,]),'ASSIGN':([2,5,9,11,17,24,29,30,36,40,42,44,69,73,87,89,93,95,96,97,98,99,100,103,104,105,106,108,111,153,157,159,160,161,162,163,164,166,167,168,170,172,173,174,175,188,193,201,205,221,230,231,233,245,247,299,302,303,304,311,323,324,],[-68,-23,-83,-169,102,-70,-69,-168,-72,-71,-67,-66,-23,-66,-21,-23,-104,-114,-73,-156,-157,-105,180,-116,-158,-115,-106,185,189,-181,-49,225,-39,-56,-57,-44,-37,-38,-40,-41,-47,-43,-48,-45,-42,238,242,-171,-23,-180,-55,-22,-79,-170,-74,-50,-51,-58,-82,-76,-65,-60,]),'NUM':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[8,8,8,8,-7,8,-6,8,-8,-9,-5,-108,8,8,8,-107,8,8,8,-104,8,-114,-105,8,-155,-116,-115,-106,8,8,-144,8,8,8,8,8,-117,8,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,8,8,-113,-112,-28,-15,-154,-24,-10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-143,8,8,8,8,8,8,8,8,8,8,-30,-29,]),'IN':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,89,96,145,146,153,193,201,209,216,217,220,221,233,241,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,144,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-23,-73,-109,-99,-181,243,-171,-98,-86,-94,-96,-180,-79,281,-170,-74,-135,-66,-82,-76,-136,]),'LOC':([89,157,160,161,162,163,164,166,167,168,170,172,173,174,175,230,297,299,302,303,323,324,337,],[-23,-49,-39,-56,-57,-44,-37,-38,-40,-41,-47,-43,-48,-45,-42,-55,321,-50,-51,-58,-65,-60,341,]),'TRUE':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[48,48,48,-108,48,48,-107,48,48,-104,48,-114,-105,48,-155,-116,-115,-106,48,48,48,48,-117,48,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,48,48,-113,-112,-154,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'AND':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,133,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'PRINT':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[13,13,13,13,-7,13,-6,13,-8,-9,-5,-108,13,13,13,-107,13,13,13,-104,13,-114,-105,13,-155,-116,-115,-106,13,13,-144,13,13,13,13,13,-117,13,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,13,13,-113,-112,-28,-15,-154,-24,-10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-143,13,13,13,13,13,13,13,13,13,13,-30,-29,]),'PLUS':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,50,51,52,53,54,55,58,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,205,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,95,-70,-69,-168,-72,-71,-67,-66,-138,-137,-95,-133,-97,-131,-134,-127,-128,-126,-103,-102,95,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-23,-98,-86,95,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'TYPE':([0,14,21,27,35,37,41,90,121,155,156,186,187,248,319,332,342,343,],[18,18,-7,-6,-8,-9,-5,18,-144,-28,-15,-24,-10,-143,18,18,-30,-29,]),'CONCAT':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,50,51,52,53,54,55,58,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,205,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,103,-70,-69,-168,-72,-71,-67,-66,-138,-137,-95,-133,-97,-131,-134,-127,-128,-126,-103,-102,103,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-23,-98,-86,103,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'ASC':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[19,19,19,19,-7,19,-6,19,-8,-9,-5,-108,19,19,19,-107,19,19,19,-104,19,-114,-105,19,-155,-116,-115,-106,19,19,-144,19,19,19,19,19,-117,19,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,19,19,-113,-112,-28,-15,-154,-24,-10,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-143,19,19,19,19,19,19,19,19,19,19,-30,-29,]),'LPAREN':([1,3,5,6,8,10,13,19,23,31,33,34,43,46,47,57,61,62,69,83,89,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,154,157,158,163,166,168,170,172,173,174,175,180,189,205,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,269,270,283,284,290,298,299,301,302,305,307,308,318,],[57,57,83,-178,-174,-172,-179,-173,-176,122,57,-175,-177,-108,57,57,-107,57,83,57,-23,-104,57,-114,-105,57,-155,-116,-115,-106,57,57,57,57,-117,57,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,57,57,-113,-112,223,-49,224,-44,228,-46,-47,-43,-48,-45,-42,-154,57,83,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,228,-46,228,-46,57,57,-50,57,-51,228,57,57,333,]),'LTEQUAL':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,143,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'SYN':([0,14,21,27,35,37,41,90,121,155,156,186,187,248,319,332,342,343,],[22,22,-7,-6,-8,-9,-5,22,-144,-28,-15,-24,-10,-143,22,22,-30,-29,]),'$end':([14,21,27,28,35,37,38,41,90,91,92,121,155,156,178,186,187,248,342,343,],[-207,-7,-6,-1,-8,-9,0,-5,-207,-4,-2,-144,-28,-15,-3,-24,-10,-143,-30,-29,]),'RESULT':([0,14,21,25,27,35,37,41,90,118,121,127,131,155,156,186,187,196,210,215,248,319,332,342,343,],[33,33,-7,33,-6,-8,-9,-5,33,33,-144,33,33,-28,-15,-24,-10,33,33,33,-143,33,33,-30,-29,]),'BY':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,282,292,304,311,314,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,307,-87,-82,-76,-88,-136,]),'TO':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,282,292,304,306,309,311,314,316,326,328,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,308,-87,-82,308,308,-76,-88,-136,308,-202,]),'INT':([86,87,89,111,171,185,227,231,243,263,281,300,301,333,],[170,-21,-23,170,170,170,170,-22,170,170,170,170,170,170,]),'MODULO':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,50,51,52,53,54,55,58,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,205,209,216,220,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,106,-70,-69,-168,-72,-71,-67,-66,-138,-137,106,-133,-97,-131,-134,-127,-128,-126,-103,-102,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-23,-98,-86,106,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'PROC':([84,],[154,]),'LOWER':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[23,23,23,23,-7,23,-6,23,-8,-9,-5,-108,23,23,23,-107,23,23,23,-104,23,-114,-105,23,-155,-116,-115,-106,23,23,-144,23,23,23,23,23,-117,23,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,23,23,-113,-112,-28,-15,-154,-24,-10,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-143,23,23,23,23,23,23,23,23,23,23,-30,-29,]),'BOOL':([86,87,89,111,171,185,227,231,243,263,281,300,301,333,],[173,-21,-23,173,173,173,173,-22,173,173,173,173,173,173,]),'SEMI':([2,3,4,9,11,12,15,16,20,24,26,29,30,36,39,40,42,45,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,89,96,107,109,110,112,115,117,120,123,124,125,145,146,153,157,159,160,161,162,163,164,166,167,168,170,172,173,174,175,179,191,192,194,195,197,199,201,206,209,212,216,217,220,221,226,230,232,233,236,237,239,240,245,247,256,258,267,280,283,285,292,295,299,302,303,304,305,310,311,314,316,317,323,324,327,329,330,335,338,339,340,344,],[-68,-207,-149,-83,-169,-146,-148,-145,-150,-70,121,-69,-168,-147,-151,-71,-67,-152,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-187,-186,-188,156,-16,-23,-73,-25,186,187,-11,196,-193,-194,-184,-185,-189,-109,-99,-181,-49,-19,-39,-56,-57,-44,-37,-38,-40,-41,-47,-43,-48,-45,-42,-153,-195,-197,-196,-191,-192,-206,-171,248,-98,-160,-86,-94,-96,-180,-18,-55,-17,-79,-26,-27,-14,-12,-170,-74,-159,-135,-20,-13,-205,-190,-87,319,-50,-51,-58,-82,-204,-201,-76,-88,-136,332,-65,-60,-199,-203,-200,-198,342,343,-36,-35,]),'TIMES':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,50,51,52,53,54,55,58,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,205,209,216,220,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,93,-70,-69,-168,-72,-71,-67,-66,-138,-137,93,-133,-97,-131,-134,-127,-128,-126,-103,-102,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-23,-98,-86,93,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'DO':([0,14,21,25,27,35,37,41,90,118,121,127,131,155,156,186,187,196,210,215,248,319,332,342,343,],[25,25,-7,25,-6,-8,-9,-5,25,25,-144,25,25,-28,-15,-24,-10,25,25,25,-143,25,25,-30,-29,]),'ARROW':([1,2,3,5,9,11,17,24,29,30,33,36,40,42,44,46,47,57,61,62,68,69,71,73,83,93,94,95,96,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,153,180,189,201,205,208,211,221,222,224,225,227,228,233,234,235,238,242,245,246,247,249,250,259,270,290,298,301,304,307,308,311,],[60,-68,60,-23,-83,-169,96,-70,-69,-168,60,-72,-71,-67,-66,-108,60,60,-107,60,-72,-23,96,-66,60,-104,60,-114,-73,-105,60,-155,-116,-115,-106,60,60,60,60,-117,60,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,96,60,60,-113,-112,-181,-154,60,-171,-23,60,60,-180,60,60,60,60,60,-79,60,60,60,60,-170,60,-74,60,60,60,-66,60,60,60,-82,60,60,-76,]),'RPAREN':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,89,96,122,132,145,146,151,152,153,157,160,161,162,163,164,166,167,168,170,172,173,174,175,200,201,209,216,217,220,221,230,233,245,247,258,260,261,262,266,273,276,292,297,299,302,303,304,311,314,316,320,321,322,323,324,337,341,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,153,-23,-73,201,216,-109,-99,221,-182,-181,-49,-39,-56,-57,-44,-37,-38,-40,-41,-47,-43,-48,-45,-42,245,-171,-98,-86,-94,-96,-180,-55,-79,-170,-74,-135,-183,295,-31,299,302,-54,-87,-34,-50,-51,-58,-82,-76,-88,-136,-32,-33,-52,-65,-60,340,344,]),'CHARS':([86,87,89,111,171,185,231,263,300,333,],[169,-21,-23,169,169,169,-22,169,169,169,]),'MINUS':([1,2,3,5,9,11,17,24,29,30,33,36,40,42,44,47,48,49,50,51,52,53,54,55,57,58,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,83,93,94,95,96,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,180,189,201,205,208,209,211,216,217,220,221,222,224,225,227,228,233,234,235,238,242,245,246,247,249,250,258,259,270,290,298,301,304,307,308,311,316,],[61,-68,61,-23,-83,-169,105,-70,-69,-168,61,-72,-71,-67,-66,61,-138,-137,-95,-133,-97,-131,-134,-127,61,-128,-126,-103,-102,105,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,61,-104,61,-114,-73,-105,61,-155,-116,-115,-106,61,61,61,61,-117,61,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,-109,-99,61,61,-113,-112,-181,-154,61,-171,-23,61,-98,61,-86,105,-96,-180,61,61,61,61,61,-79,61,61,61,61,-170,61,-74,61,61,-135,61,-66,61,61,61,-82,61,61,-76,-136,]),'LESS':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,137,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'COLON':([2,5,9,11,24,29,30,40,42,44,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,145,146,153,182,183,201,202,203,209,216,217,219,220,221,233,245,247,258,264,265,270,292,304,311,314,316,],[-68,84,-83,-169,-70,-69,-168,-71,-67,127,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,234,-53,-171,246,-77,-98,-86,-94,259,-96,-180,-79,-170,-74,-135,298,-53,-66,-87,-82,-76,-88,-136,]),'GTEQUAL':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,138,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'LENGTH':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[43,43,43,43,-7,43,-6,43,-8,-9,-5,-108,43,43,43,-107,43,43,43,-104,43,-114,-105,43,-155,-116,-115,-106,43,43,-144,43,43,43,43,43,-117,43,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,43,43,-113,-112,-28,-15,-154,-24,-10,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-143,43,43,43,43,43,43,43,43,43,43,-30,-29,]),'EXIT':([0,14,21,25,27,35,37,41,90,118,121,127,131,155,156,186,187,196,210,215,248,319,332,342,343,],[32,32,-7,32,-6,-8,-9,-5,32,32,-144,32,32,-28,-15,-24,-10,32,32,32,-143,32,32,-30,-29,]),'LBRACKET':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,51,53,54,55,58,63,64,67,68,69,70,71,73,74,75,76,77,78,96,145,153,165,169,201,205,216,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,101,-70,-69,-168,-72,-71,-67,126,-138,-137,-133,-131,-134,-127,-128,-126,147,-132,-72,-23,-141,101,126,-130,-129,-140,-139,-142,-73,101,-181,227,229,-171,-23,-86,-180,-79,-170,-74,-135,126,-82,-76,-136,]),'UPPER':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[34,34,34,34,-7,34,-6,34,-8,-9,-5,-108,34,34,34,-107,34,34,34,-104,34,-114,-105,34,-155,-116,-115,-106,34,34,-144,34,34,34,34,34,-117,34,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,34,34,-113,-112,-28,-15,-154,-24,-10,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-143,34,34,34,34,34,34,34,34,34,34,-30,-29,]),'ABS':([0,1,3,14,21,25,27,33,35,37,41,46,47,57,60,61,62,83,90,93,94,95,99,101,102,103,105,106,118,119,121,122,126,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,155,156,180,186,187,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,248,249,250,259,290,298,301,307,308,319,332,342,343,],[10,10,10,10,-7,10,-6,10,-8,-9,-5,-108,10,10,10,-107,10,10,10,-104,10,-114,-105,10,-155,-116,-115,-106,10,10,-144,10,10,10,10,10,-117,10,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,10,10,-113,-112,-28,-15,-154,-24,-10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-143,10,10,10,10,10,10,10,10,10,10,-30,-29,]),'THEN':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,56,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,128,145,146,153,201,209,216,217,220,221,233,245,247,255,258,289,292,304,311,313,314,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,131,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,208,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,131,-135,208,-87,-82,-76,208,-88,-136,]),'OD':([25,114,116,118,121,196,198,244,248,],[-207,195,-167,-207,-144,-207,-166,285,-143,]),'RBRACKET':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,145,146,153,157,163,170,172,173,174,175,181,183,201,203,204,209,216,217,218,219,220,221,233,245,247,258,268,269,271,272,274,275,276,277,278,279,286,287,292,294,299,302,304,311,314,316,322,325,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-49,-44,-47,-43,-48,-45,-42,233,-80,-171,-75,247,-98,-86,-94,258,-80,-96,-180,-79,-170,-74,-135,300,-63,-64,-61,-59,303,-54,304,-81,-80,-78,311,-87,316,-50,-51,-82,-76,-88,-136,-52,-62,]),'END':([21,27,35,37,41,90,91,121,155,156,178,186,187,248,319,332,334,336,342,343,],[-7,-6,-8,-9,-5,-207,-4,-144,-28,-15,-3,-24,-10,-143,-207,-207,338,339,-30,-29,]),'WHILE':([2,9,11,24,25,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,117,145,146,153,157,163,170,172,173,174,175,191,192,194,201,209,216,217,220,221,233,245,247,258,283,292,299,302,304,305,310,311,314,316,327,329,330,335,],[-68,-83,-169,-70,119,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,119,-109,-99,-181,-49,-44,-47,-43,-48,-45,-42,-195,-197,-196,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-205,-87,-50,-51,-82,-204,-201,-76,-88,-136,-199,-203,-200,-198,]),'RETURNS':([295,],[318,]),'NULL':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[70,70,70,-108,70,70,-107,70,70,-104,70,-114,-105,70,-155,-116,-115,-106,70,70,70,70,-117,70,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,70,70,-113,-112,-154,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'DOWN':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,89,96,145,146,153,193,201,209,216,217,220,221,233,245,247,258,282,292,304,306,311,314,316,328,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-23,-73,-109,-99,-181,241,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,309,-87,-82,326,-76,-88,-136,-202,]),'FI':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,116,118,121,130,145,146,153,198,201,209,213,214,215,216,217,220,221,233,245,247,248,252,254,257,258,288,291,292,293,304,311,314,315,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-167,-207,-144,212,-109,-99,-181,-166,-171,-98,256,-161,-207,-86,-94,-96,-180,-79,-170,-74,-143,292,-162,-165,-135,-90,314,-87,-164,-82,-76,-88,-163,-136,]),'ELSE':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,96,116,118,121,130,145,146,153,198,201,207,209,214,215,216,217,220,221,233,245,247,248,251,253,257,258,292,293,304,311,312,314,316,331,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,-73,-167,-207,-144,210,-109,-99,-181,-166,-171,249,-98,-161,-207,-86,-94,-96,-180,-79,-170,-74,-143,249,-89,-165,-135,-87,210,-82,-76,-91,-88,-136,-92,]),'COMMA':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,96,107,112,145,146,152,153,157,159,160,161,162,163,164,166,167,168,170,172,173,174,175,183,201,209,216,217,219,220,221,226,230,233,237,239,245,247,258,262,267,269,271,272,276,279,280,292,297,299,302,303,304,311,314,316,321,322,323,324,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,-84,-126,-103,-102,-93,-132,-72,-23,-141,-101,-85,-66,-130,-129,-140,-139,-142,-100,176,177,-23,-73,184,190,-109,-99,222,-181,-49,-19,-39,-56,-57,-44,-37,-38,-40,-41,-47,-43,-48,-45,-42,235,-171,-98,-86,-94,235,-96,-180,-18,-55,-79,-27,-14,-170,-74,-135,296,-20,-63,-64,301,-54,235,-13,-87,-34,-50,-51,-58,-82,-76,-88,-136,-33,-52,-65,-60,]),'DIVIDE':([2,5,9,11,17,24,29,30,36,40,42,44,48,49,50,51,52,53,54,55,58,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,205,209,216,220,221,233,245,247,258,270,304,311,316,],[-68,-23,-83,-169,99,-70,-69,-168,-72,-71,-67,-66,-138,-137,99,-133,-97,-131,-134,-127,-128,-126,-103,-102,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-23,-98,-86,99,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'FALSE':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[77,77,77,-108,77,77,-107,77,77,-104,77,-114,-105,77,-155,-116,-115,-106,77,77,77,77,-117,77,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,77,77,-113,-112,-154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'SCONST':([1,3,33,46,47,57,61,62,83,93,94,95,99,101,102,103,105,106,119,122,126,129,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,180,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[78,78,78,-108,78,78,-107,78,78,-104,78,-114,-105,78,-155,-116,-115,-106,78,78,78,78,-117,78,-119,-118,-123,-122,-121,-111,-110,-120,-124,-125,78,78,-113,-112,-154,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'REF':([86,87,89,111,171,185,231,263,300,333,],[171,-21,-23,171,171,171,-22,171,171,171,]),'ARRAY':([86,87,89,111,171,185,231,263,300,333,],[165,-21,-23,165,165,165,-22,165,165,165,]),'NOTEQ':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,142,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),'GREATER':([2,9,11,24,29,30,40,42,48,49,50,51,52,53,54,55,58,59,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,96,145,146,153,201,209,216,217,220,221,233,245,247,258,270,304,311,316,],[-68,-83,-169,-70,-69,-168,-71,-67,-138,-137,-95,-133,-97,-131,-134,-127,-128,139,-126,-103,-102,-93,-132,-72,-23,-141,-101,-66,-130,-129,-140,-139,-142,-100,-73,-109,-99,-181,-171,-98,-86,-94,-96,-180,-79,-170,-74,-135,-66,-82,-76,-136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([101,147,235,],[181,218,278,]),'operand3':([1,3,33,47,57,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[52,52,52,52,52,52,52,52,52,52,52,209,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'right_element':([246,],[287,]),'mode':([86,111,171,185,263,300,333,],[159,188,230,237,297,323,337,]),'else_clause':([130,293,],[213,315,]),'index_mode_list':([227,301,],[268,325,]),'empty_literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'assigning_operator':([17,],[94,]),'boolean_literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'declaration':([7,177,],[88,88,]),'character_mode':([86,111,171,185,227,243,263,281,300,301,333,],[163,163,163,163,163,163,163,163,163,163,163,]),'character_string_literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'parameter_list':([83,122,222,],[151,200,260,]),'assignment_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'step_enumeration':([113,],[194,]),'exit_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'bracketed_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'location':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'then_expression':([128,289,313,],[207,312,331,]),'character_literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'action_statement_nullable':([25,118,196,215,],[114,198,244,257,]),'expression':([1,3,33,47,57,83,94,101,119,122,126,147,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[56,80,125,128,132,152,179,183,199,152,203,219,239,253,255,152,265,267,265,265,276,279,280,282,286,288,289,294,313,276,265,328,329,]),'return_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'newmode_statement':([0,14,90,319,332,],[21,21,21,21,21,]),'step_value':([282,],[306,]),'procedure_call':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'value_array_slice':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'reference_mode':([86,111,171,185,263,300,333,],[160,160,160,160,160,160,160,]),'else_expression':([207,251,],[252,291,]),'start_element':([126,],[204,]),'initialization':([159,],[226,]),'statement_list':([0,],[28,]),'action_statement_list':([131,210,],[214,254,]),'element_mode':([300,],[324,]),'then_clause':([56,255,],[130,293,]),'mode_definition':([18,184,],[107,107,]),'empty':([3,14,25,90,118,196,215,319,332,],[82,91,116,91,116,116,116,91,91,]),'dereferenced_reference':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'referenced_location':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'membership_operator':([59,],[140,]),'control_part':([25,],[115,]),'label_id':([32,],[123,]),'call_action':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[36,68,68,36,36,68,68,68,68,68,68,36,68,68,36,68,68,68,36,68,36,68,68,68,68,36,68,36,68,36,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,36,36,]),'elsif_expression':([207,],[251,]),'formal_parameter_list':([223,296,],[261,320,]),'discrete_mode':([86,111,171,185,227,243,263,281,300,301,333,],[166,166,166,166,269,283,166,305,166,269,166,]),'program':([0,],[38,]),'arithmetic_additive_operator':([17,66,217,],[97,150,150,]),'identifier_list':([7,18,22,176,177,184,190,223,296,],[86,108,111,231,86,108,111,263,263,]),'identifier':([0,1,3,7,14,18,22,25,33,47,57,60,62,83,86,90,94,101,111,113,118,119,122,126,127,129,131,134,147,148,171,176,177,184,185,189,190,196,208,210,211,215,222,223,224,225,227,228,234,235,238,242,243,246,249,250,259,263,281,290,296,298,300,301,307,308,319,332,333,],[44,73,73,87,44,87,87,44,73,73,73,73,73,73,168,44,73,73,168,193,44,73,73,73,73,73,44,73,73,73,168,87,87,87,168,73,87,44,73,44,73,44,73,87,73,73,270,73,73,73,73,73,284,73,73,73,73,168,284,73,87,73,168,270,73,73,44,44,168,]),'if_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'string_length':([229,],[275,]),'synonym_definition':([22,190,],[112,112,]),'operator2':([66,217,],[148,148,]),'parenthesized_expression':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'statement_nullable':([14,90,319,332,],[92,178,334,336,]),'while_control':([25,117,],[120,197,]),'end_value':([282,306,309,326,],[310,327,330,335,]),'string_concatenation_operator':([17,66,217,],[104,149,149,]),'array_slice':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'range_enumeration':([113,],[192,]),'action_statement':([0,14,25,90,118,131,196,210,215,319,332,],[35,35,118,35,118,215,118,215,118,35,35,]),'string_element':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'array_element':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'result_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'operand2':([1,3,33,47,57,83,94,101,119,122,126,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[50,50,50,50,50,50,50,50,50,50,50,50,50,220,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'literal_range':([224,227,228,301,],[266,271,273,271,]),'lower_bound':([101,224,227,228,301,],[182,264,264,264,264,]),'synonym_statement':([0,14,90,319,332,],[27,27,27,27,27,]),'operator1':([59,],[134,]),'discrete_mode_name':([86,111,171,185,227,243,263,281,300,301,333,],[158,158,158,158,158,158,158,158,158,158,158,]),'iteration':([113,],[191,]),'statement':([0,14,90,319,332,],[14,90,90,90,90,]),'for_control':([25,],[117,]),'value_array_element':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'synonym_list':([22,190,],[110,240,]),'do_action':([0,14,25,90,118,127,131,196,210,215,319,332,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'composite_mode':([86,111,171,185,263,300,333,],[167,167,167,167,167,167,167,]),'formal_parameter':([223,296,],[262,262,]),'result_spec':([295,],[317,]),'result':([3,],[81,]),'arithmetic_multiplicative_operator':([17,50,220,],[98,129,129,]),'action':([0,14,25,90,118,127,131,196,210,215,319,332,],[26,26,26,26,26,206,26,26,26,26,26,26,]),'operand0':([1,3,33,47,57,83,94,101,119,122,126,147,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'builtin_call':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'integer_mode':([86,111,171,185,227,243,263,281,300,301,333,],[175,175,175,175,175,175,175,175,175,175,175,]),'string_slice':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'monadic_operator':([1,3,33,47,57,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'upper_bound':([234,298,],[277,322,]),'builtin_name':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'primitive_value':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'closed_dyadic_operator':([17,],[100,]),'operand1':([1,3,33,47,57,83,94,101,119,122,126,134,147,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[66,66,66,66,66,66,66,66,66,66,66,217,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'string_mode':([86,111,171,185,263,300,333,],[161,161,161,161,161,161,161,]),'relational_operator':([59,],[141,]),'array_mode':([86,111,171,185,263,300,333,],[162,162,162,162,162,162,162,]),'mode_name':([86,111,171,185,263,300,333,],[164,164,164,164,164,164,164,]),'declaration_list':([7,177,],[85,232,]),'procedure_statement':([0,14,90,319,332,],[37,37,37,37,37,]),'array_location':([0,1,3,14,25,33,47,57,60,62,83,90,94,101,118,119,122,126,127,129,131,134,147,148,189,196,208,210,211,215,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,319,332,],[17,71,71,17,17,71,71,71,145,71,71,17,71,71,17,71,71,71,17,71,17,71,71,71,71,17,71,17,71,17,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,17,17,]),'conditional_expression':([1,3,33,47,57,83,94,101,119,122,126,147,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'newmode_list':([18,184,],[109,236,]),'integer_literal':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,229,234,235,238,242,246,249,250,259,290,298,301,307,308,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,274,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'left_element':([126,],[202,]),'declaration_statement':([0,14,90,319,332,],[41,41,41,41,41,]),'index_mode':([227,301,],[272,272,]),'procedure_definition':([84,],[155,]),'operand4':([1,3,33,47,57,62,83,94,101,119,122,126,129,134,147,148,189,208,211,222,224,225,227,228,234,235,238,242,246,249,250,259,290,298,301,307,308,],[79,79,79,79,79,146,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'discrete_range_mode':([86,111,171,185,227,243,263,281,300,301,333,],[174,174,174,174,174,174,174,174,174,174,174,]),'boolean_mode':([86,111,171,185,227,243,263,281,300,301,333,],[172,172,172,172,172,172,172,172,172,172,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',61),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',65),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',77),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',78),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',90),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',91),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',92),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',93),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',94),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',103),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',107),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',108),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',117),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',118),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',132),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',136),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',137),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',145),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',146),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',150),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',154),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',155),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',164),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',175),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',179),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',180),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',189),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',200),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',204),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',205),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',209),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',210),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',219),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',220),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',226),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',227),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',232),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',233),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',234),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',235),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',239),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',247),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',248),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',249),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',250),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',254),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',258),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',262),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',266),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',275),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',276),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',280),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',284),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',288),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',295),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',302),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',303),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',307),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',311),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',315),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',319),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',320),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',329),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',330),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',334),
  ('location -> identifier','location',1,'p_location','Parser.py',345),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',346),
  ('location -> string_element','location',1,'p_location','Parser.py',347),
  ('location -> string_slice','location',1,'p_location','Parser.py',348),
  ('location -> array_element','location',1,'p_location','Parser.py',349),
  ('location -> array_slice','location',1,'p_location','Parser.py',350),
  ('location -> call_action','location',1,'p_location','Parser.py',351),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',355),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','Parser.py',359),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',363),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',367),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',371),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',379),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',383),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',384),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',391),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',395),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',405),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',406),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',410),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',418),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',419),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',423),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',427),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',431),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',432),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',447),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',448),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',455),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',456),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',463),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',464),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',472),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',473),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',480),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',481),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',482),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',493),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',494),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',495),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',499),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',500),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',504),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',508),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',509),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',513),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',514),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',518),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',519),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',523),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',527),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',528),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',529),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',530),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',531),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',532),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',538),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',550),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',551),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',552),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',553),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',557),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',558),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',559),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',560),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',561),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',565),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',569),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',577),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',581),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',582),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',586),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',590),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',594),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',605),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',606),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',611),
  ('action -> assignment_action','action',1,'p_action','Parser.py',612),
  ('action -> call_action','action',1,'p_action','Parser.py',613),
  ('action -> exit_action','action',1,'p_action','Parser.py',614),
  ('action -> result_action','action',1,'p_action','Parser.py',615),
  ('action -> return_action','action',1,'p_action','Parser.py',616),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',620),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',621),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',625),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',629),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',630),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',634),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',635),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',636),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',640),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',641),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',645),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',649),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',650),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',651),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',662),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',674),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',675),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',692),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',693),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',697),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',698),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',703),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',704),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',705),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',706),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',707),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',708),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',709),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',710),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',714),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',715),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',719),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',720),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','Parser.py',729),
  ('label_id -> ID','label_id',1,'p_label_id','Parser.py',733),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',737),
  ('result -> expression','result',1,'p_result','Parser.py',741),
  ('result -> empty','result',1,'p_result','Parser.py',742),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',745),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',753),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',754),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',761),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',762),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',763),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',767),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',771),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',772),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',776),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',777),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',778),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',779),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',791),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',795),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',799),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',800),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',807),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',813),
]


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT SYN NULL PRINT RESULT THEN WHILE TO RETURNS DCL TRUE DOWN FOR ELSIF ABS READ LOC FI REF LOWER DO OD RETURN ARRAY FALSE BOOL CHAR BY ELSE LENGTH IF CHARS INT TYPE UPPER IN ASC EXIT PROC END NUMprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n                    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'LBRACKET':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,61,67,68,69,72,73,74,76,78,80,82,84,85,111,134,140,148,168,171,178,216,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,102,-72,-164,-134,-137,102,-123,-135,161,-129,-133,-132,-127,-23,-125,-138,-121,-122,-124,-126,-68,-128,-72,-73,206,208,-23,102,-167,-177,-81,-166,-176,-74,-68,-130,-136,-77,-131,]),'FALSE':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[51,51,51,51,51,51,-102,-103,51,51,51,51,-118,-151,51,-119,-100,-117,-99,-101,-120,51,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,51,-116,51,-115,51,-150,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'FI':([3,14,16,26,28,37,49,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,98,99,111,165,168,171,175,178,187,211,212,215,216,220,222,223,224,226,230,235,255,258,262,264,267,289,290,293,294,307,312,313,316,],[-78,-71,-70,-165,-69,-164,-140,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-163,-202,-73,-94,-104,-167,225,-177,-162,-139,-89,-91,-81,-93,-166,-202,-157,265,-176,-74,-130,289,-136,-161,-158,-82,313,-85,-160,-77,-131,-83,-159,]),'BY':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,165,168,171,178,212,215,216,220,222,230,235,255,262,276,289,307,312,313,],[-78,-71,-70,-165,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-130,-136,305,-82,-77,-131,-83,]),'FOR':([27,],[96,]),'DCL':([0,1,10,11,13,25,31,49,118,146,176,195,201,211,296,319,322,334,338,343,344,346,],[2,-6,-8,-9,-7,-5,2,-140,2,-15,-28,-24,-10,-139,2,2,2,2,-32,-31,-30,-29,]),'GREATER':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,154,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'EQUAL':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,155,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'CONCAT':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,148,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,108,-72,-164,-134,-137,-96,-123,-135,-98,-129,108,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-23,-94,-104,-167,-177,108,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'LOWER':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[36,-6,36,-8,-9,36,-7,36,-5,36,36,-140,36,36,36,36,-102,36,-103,36,36,36,36,36,-118,-151,36,-119,-100,-117,-99,-101,36,-15,-120,36,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,36,-116,36,-115,36,36,-28,36,-150,-24,36,-10,36,36,36,36,-139,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,-31,-30,-29,]),'THEN':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,87,111,165,167,168,171,178,212,215,216,220,222,230,235,255,262,266,289,292,307,312,313,314,],[-78,-71,-70,-165,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,174,-73,-94,217,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-130,-136,174,-82,217,-77,-131,-83,217,]),'RESULT':([0,1,10,11,13,25,27,31,49,50,99,118,146,174,176,180,195,201,211,223,228,296,319,322,334,338,343,344,346,],[8,-6,-8,-9,-7,-5,8,8,-140,8,8,8,-15,8,-28,8,-24,-10,-139,8,8,8,8,8,8,-32,-31,-30,-29,]),'SEMI':([3,4,5,14,15,16,17,20,22,26,28,30,32,34,37,38,46,47,48,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,78,80,81,82,83,84,85,88,89,90,91,94,95,100,111,119,121,123,124,125,127,128,129,131,132,133,135,136,137,138,139,141,142,143,147,165,168,171,178,181,182,184,185,186,188,193,202,205,210,212,215,216,220,222,225,230,235,238,239,241,242,246,255,262,265,268,272,273,281,283,284,285,289,297,300,301,306,307,309,310,312,313,323,325,326,327,331,335,336,339,340,342,345,],[-78,49,-148,-71,-202,-70,-144,-147,-145,-165,-69,-146,-141,-143,-164,-142,-16,-23,146,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-184,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-181,-183,-182,-180,180,-188,-189,-73,195,-25,-11,201,-51,-59,-58,-47,-43,-19,-45,-46,-40,-42,-50,-39,-41,-44,-49,211,-94,-104,-167,-177,-187,-190,-192,-191,-201,-186,-149,-57,-18,-17,-89,-91,-81,-93,-166,-156,-176,-74,-27,-26,-14,-12,-20,-130,-136,-155,296,-185,-200,-13,-52,-60,-53,-82,319,322,-199,-196,-77,-67,-62,-131,-83,334,-194,-198,-195,338,-193,-38,343,344,-37,346,]),'WHILE':([3,14,16,26,27,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,95,111,125,129,133,135,138,142,143,165,168,171,178,182,184,185,212,215,216,220,222,230,235,255,262,273,283,285,289,301,306,307,312,313,325,326,327,335,],[-78,-71,-70,-165,97,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,97,-73,-51,-47,-45,-46,-50,-44,-49,-94,-104,-167,-177,-190,-192,-191,-89,-91,-81,-93,-166,-176,-74,-130,-136,-200,-52,-53,-82,-199,-196,-77,-131,-83,-194,-198,-195,-193,]),'$end':([1,10,11,13,23,25,31,33,49,116,117,118,146,176,194,195,201,211,338,343,344,346,],[-6,-8,-9,-7,-1,-5,-202,0,-140,-2,-4,-202,-15,-28,-3,-24,-10,-139,-32,-31,-30,-29,]),'LPAREN':([6,8,9,12,15,19,21,24,35,36,41,42,43,47,60,62,63,64,69,77,79,86,93,97,102,105,106,107,108,109,110,112,115,125,129,130,131,133,135,136,138,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,177,192,199,203,204,207,208,217,221,227,234,236,237,240,251,253,256,260,261,273,274,282,283,285,287,291,295,301,303,305,],[-169,62,86,62,62,-175,93,-171,-174,-172,-170,-173,-168,-23,62,62,62,-102,93,169,-103,62,62,62,62,-118,-151,62,-119,-100,-117,-99,-101,-51,-47,203,-48,-45,-46,207,-50,-44,-49,93,-120,62,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,62,-116,62,-115,62,229,-150,62,62,62,62,62,62,62,62,62,62,62,62,207,-48,62,62,62,207,-48,62,-52,-53,62,62,317,207,62,62,]),'ELSE':([3,14,16,26,28,37,49,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,98,99,111,165,168,171,175,178,187,211,212,215,216,218,220,222,223,224,230,235,255,257,259,262,264,289,294,307,312,313,315,329,],[-78,-71,-70,-165,-69,-164,-140,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-163,-202,-73,-94,-104,-167,228,-177,-162,-139,-89,-91,-81,261,-93,-166,-202,-157,-176,-74,-130,-84,261,-136,-161,-82,228,-77,-131,-83,-86,-87,]),'TIMES':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,148,165,168,171,178,215,216,220,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,112,-72,-164,-134,-137,-96,-123,-135,-98,-129,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,112,-68,-128,-72,-73,-23,-94,-104,-167,-177,112,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'OR':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,159,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'IN':([3,14,16,26,28,37,47,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,183,212,215,216,220,222,230,233,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-23,-134,-137,149,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,232,-89,-91,-81,-93,-166,-176,275,-74,-68,-130,-136,-77,-131,]),'END':([1,10,11,13,25,49,117,118,146,176,194,195,201,211,296,318,319,322,332,333,334,338,341,343,344,346,],[-6,-8,-9,-7,-5,-140,-4,-202,-15,-28,-3,-24,-10,-139,-202,331,-202,-202,339,340,-202,-32,345,-31,-30,-29,]),'IF':([0,1,8,10,11,12,13,15,25,27,31,49,50,62,63,86,93,97,99,102,106,107,118,146,161,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[12,-6,63,-8,-9,63,-7,63,-5,12,12,-140,12,63,63,63,63,63,12,63,-151,63,12,-15,63,12,-28,12,-150,-24,63,-10,63,63,63,63,-139,63,63,12,63,12,63,63,63,63,63,63,63,63,63,63,12,63,63,12,12,12,-32,-31,-30,-29,]),'MINUS':([3,7,8,12,14,15,16,21,26,28,29,34,37,51,52,54,55,56,57,58,59,61,62,63,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,86,93,97,102,105,106,107,108,109,110,111,112,115,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,168,170,171,178,192,199,203,204,207,208,212,215,216,217,220,221,222,227,230,234,235,236,237,240,253,255,256,260,261,262,282,287,291,303,305,307,312,],[-78,-68,64,64,-71,64,-70,-23,-165,-69,105,-72,-164,-134,-137,-96,-123,-135,-98,-129,105,-133,64,64,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,64,64,64,64,-118,-151,64,-119,-100,-117,-73,-99,-101,-23,-120,64,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,64,-116,64,-115,-94,-104,64,-167,-177,-150,64,64,64,64,64,105,-91,-81,64,-93,64,-166,64,-176,64,-74,64,64,64,-68,-130,64,64,64,-136,64,64,64,64,64,-77,-131,]),'ARROW':([3,7,8,12,14,15,16,21,26,28,29,34,37,54,60,62,63,64,69,79,82,85,86,93,97,102,105,106,107,108,109,110,111,112,115,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,170,171,178,192,199,203,204,207,208,217,221,222,227,230,234,235,236,237,240,253,256,260,261,282,287,291,303,305,307,],[-78,-68,65,65,-71,65,-70,-23,-165,-69,111,-72,-164,111,65,65,65,-102,-23,-103,-68,-72,65,65,65,65,-118,-151,65,-119,-100,-117,-73,-99,-101,-23,-120,65,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,65,-116,65,-115,111,65,-167,-177,-150,65,65,65,65,65,65,65,-166,65,-176,65,-74,65,65,65,-68,65,65,65,65,65,65,65,65,-77,]),'CCONST':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[56,56,56,56,56,56,-102,-103,56,56,56,56,-118,-151,56,-119,-100,-117,-99,-101,-120,56,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,56,-116,56,-115,56,-150,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'EXIT':([0,1,10,11,13,25,27,31,49,50,99,118,146,174,176,180,195,201,211,223,228,296,319,322,334,338,343,344,346,],[18,-6,-8,-9,-7,-5,18,18,-140,18,18,18,-15,18,-28,18,-24,-10,-139,18,18,18,18,18,18,-32,-31,-30,-29,]),'ICONST':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,169,170,192,199,203,204,206,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[67,67,67,67,67,67,-102,-103,67,67,67,67,-118,-151,67,-119,-100,-117,-99,-101,-120,67,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,67,-116,67,-115,219,67,-150,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'AND':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,153,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'PROC':([92,],[177,]),'PLUS':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,148,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,110,-72,-164,-134,-137,-96,-123,-135,-98,-129,110,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-23,-94,-104,-167,-177,110,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'ABS':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[43,-6,43,-8,-9,43,-7,43,-5,43,43,-140,43,43,43,43,-102,43,-103,43,43,43,43,43,-118,-151,43,-119,-100,-117,-99,-101,43,-15,-120,43,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,43,-116,43,-115,43,43,-28,43,-150,-24,43,-10,43,43,43,43,-139,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-31,-30,-29,]),'ID':([0,1,2,8,10,11,12,13,15,18,25,27,31,39,40,44,45,47,49,50,60,62,63,64,65,79,86,93,96,97,99,102,105,106,107,108,109,110,112,115,118,122,126,144,145,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,196,197,199,200,201,203,204,207,208,209,211,217,221,223,227,228,229,232,234,236,237,240,256,260,261,270,275,282,286,287,291,296,298,303,305,317,319,322,334,338,343,344,346,],[21,-6,47,69,-8,-9,69,-7,69,47,-5,69,21,47,47,47,-21,-23,-140,148,69,69,69,-102,69,-103,69,69,47,69,69,69,-118,-151,69,-119,-100,-117,-99,-101,21,47,47,47,47,-15,-120,69,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,69,-116,69,-115,69,69,-28,69,-150,-24,47,47,69,47,-10,69,69,69,69,-22,-139,69,69,69,69,69,47,47,69,69,69,69,69,69,69,47,47,69,47,69,69,21,47,69,69,47,21,21,21,-32,-31,-30,-29,]),'ARRAY':([44,45,47,122,126,196,209,270,286,317,],[140,-21,-23,140,140,140,-22,140,140,140,]),'PRINT':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[19,-6,19,-8,-9,19,-7,19,-5,19,19,-140,19,19,19,19,-102,19,-103,19,19,19,19,19,-118,-151,19,-119,-100,-117,-99,-101,19,-15,-120,19,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,19,-116,19,-115,19,19,-28,19,-150,-24,19,-10,19,19,19,19,-139,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-32,-31,-30,-29,]),'ASSIGN':([3,7,14,16,21,26,28,29,34,37,45,47,69,82,103,104,105,108,109,110,111,112,113,114,115,120,122,125,127,128,129,131,132,133,135,136,137,138,139,141,142,143,148,171,178,183,198,202,209,222,230,235,283,284,285,307,309,310,],[-78,-68,-71,-70,-23,-165,-69,106,-72,-164,-21,-23,-23,-68,-153,192,-118,-119,-100,-117,-73,-99,-154,-152,-101,196,199,-51,-59,-58,-47,-43,204,-45,-46,-40,-42,-50,-39,-41,-44,-49,-23,-167,-177,234,240,-57,-22,-166,-176,-74,-52,-60,-53,-77,-67,-62,]),'LENGTH':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[42,-6,42,-8,-9,42,-7,42,-5,42,42,-140,42,42,42,42,-102,42,-103,42,42,42,42,42,-118,-151,42,-119,-100,-117,-99,-101,42,-15,-120,42,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,42,-116,42,-115,42,42,-28,42,-150,-24,42,-10,42,42,42,42,-139,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-32,-31,-30,-29,]),'CHAR':([44,45,47,122,126,196,208,209,232,270,275,286,287,317,],[125,-21,-23,125,125,125,125,-22,125,125,125,125,125,125,]),'REF':([44,45,47,122,126,196,209,270,286,317,],[126,-21,-23,126,126,126,-22,126,126,126,]),'RBRACKET':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,125,129,133,135,138,142,143,165,168,171,178,189,191,212,213,214,215,216,220,222,230,235,247,248,250,251,252,254,255,262,277,278,279,280,283,285,288,289,307,308,311,312,313,],[-78,-71,-70,-165,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,-51,-47,-45,-46,-50,-44,-49,-94,-104,-167,-177,235,-75,-89,255,-75,-91,-81,-93,-166,-176,-74,-61,284,286,-65,-63,-66,-130,-136,-56,307,-76,-75,-52,-53,312,-82,-77,-54,-64,-131,-83,]),'NOT':([8,12,15,62,63,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[79,79,79,79,79,79,79,79,79,-118,-151,79,-119,-100,-117,-99,-101,-120,79,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,79,-116,79,-115,79,-150,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'COLON':([3,7,14,16,21,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,165,168,171,178,190,191,212,214,215,216,220,222,230,235,243,244,253,255,262,289,307,312,313,],[-78,50,-71,-70,92,-165,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,-94,-104,-167,-177,236,-55,-89,256,-91,-81,-93,-166,-176,-74,282,-55,-68,-130,-136,-82,-77,-131,-83,]),'LOC':([47,125,127,128,129,131,133,135,136,137,138,139,141,142,143,202,283,284,285,299,309,310,330,],[-23,-51,-59,-58,-47,-43,-45,-46,-40,-42,-50,-39,-41,-44,-49,-57,-52,-60,-53,321,-67,-62,337,]),'DIVIDE':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,148,165,168,171,178,215,216,220,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,109,-72,-164,-134,-137,-96,-123,-135,-98,-129,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,109,-68,-128,-72,-73,-23,-94,-104,-167,-177,109,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'ELSIF':([3,14,16,26,28,37,49,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,98,99,111,165,168,171,175,178,187,211,212,215,216,218,220,222,223,224,230,235,255,257,259,262,264,289,294,307,312,313,315,329,],[-78,-71,-70,-165,-69,-164,-140,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-163,-202,-73,-94,-104,-167,227,-177,-162,-139,-89,-91,-81,260,-93,-166,-202,-157,-176,-74,-130,-84,291,-136,-161,-82,227,-77,-131,-83,-86,-87,]),'SCONST':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[73,73,73,73,73,73,-102,-103,73,73,73,73,-118,-151,73,-119,-100,-117,-99,-101,-120,73,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,73,-116,73,-115,73,-150,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'DO':([0,1,10,11,13,25,27,31,49,50,99,118,146,174,176,180,195,201,211,223,228,296,319,322,334,338,343,344,346,],[27,-6,-8,-9,-7,-5,27,27,-140,27,27,27,-15,27,-28,27,-24,-10,-139,27,27,27,27,27,27,-32,-31,-30,-29,]),'SYN':([0,1,10,11,13,25,31,49,118,146,176,195,201,211,296,319,322,334,338,343,344,346,],[40,-6,-8,-9,-7,-5,40,-140,40,-15,-28,-24,-10,-139,40,40,40,40,-32,-31,-30,-29,]),'LTEQUAL':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,157,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'OD':([27,49,98,99,101,180,187,211,231,],[-202,-140,-163,-202,188,-202,-162,-139,272,]),'HAT':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[77,77,77,77,77,77,-102,-103,77,77,77,77,-118,-151,77,-119,-100,-117,-99,-101,-120,77,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,77,-116,77,-115,77,-150,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'CHARS':([44,45,47,122,126,196,209,270,286,317,],[134,-21,-23,134,134,134,-22,134,134,134,]),'NOTEQ':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,160,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'RETURNS':([268,300,],[295,295,]),'RPAREN':([3,14,16,26,28,37,47,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,86,93,111,125,127,128,129,131,133,135,136,137,138,139,141,142,143,165,166,168,171,172,173,178,179,202,212,215,216,219,220,222,229,230,235,245,249,255,262,263,269,271,277,283,284,285,289,299,307,308,309,310,312,313,320,321,330,337,],[-78,-71,-70,-165,-69,-164,-23,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,171,178,-73,-51,-59,-58,-47,-43,-45,-46,-40,-42,-50,-39,-41,-44,-49,-94,216,-104,-167,-178,222,-177,230,-57,-89,-91,-81,262,-93,-166,268,-176,-74,283,285,-130,-136,-179,-33,300,-56,-52,-60,-53,-82,-36,-77,-54,-67,-62,-131,-83,-34,-35,336,342,]),'DOWN':([3,14,16,26,28,37,47,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,165,168,171,178,183,212,215,216,220,222,230,235,255,262,276,289,302,307,312,313,328,],[-78,-71,-70,-165,-69,-164,-23,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,-94,-104,-167,-177,233,-89,-91,-81,-93,-166,-176,-74,-130,-136,304,-82,324,-77,-131,-83,-197,]),'LESS':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,152,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'RETURN':([0,1,10,11,13,25,27,31,49,50,99,118,146,174,176,180,195,201,211,223,228,296,319,322,334,338,343,344,346,],[15,-6,-8,-9,-7,-5,15,15,-140,15,15,15,-15,15,-28,15,-24,-10,-139,15,15,15,15,15,15,-32,-31,-30,-29,]),'MODULO':([3,7,14,16,21,26,28,29,34,37,51,52,54,55,56,57,58,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,148,165,168,171,178,215,216,220,222,230,235,253,255,262,307,312,],[-78,-68,-71,-70,-23,-165,-69,115,-72,-164,-134,-137,-96,-123,-135,-98,-129,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,115,-68,-128,-72,-73,-23,-94,-104,-167,-177,115,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'READ':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[35,-6,35,-8,-9,35,-7,35,-5,35,35,-140,35,35,35,35,-102,35,-103,35,35,35,35,35,-118,-151,35,-119,-100,-117,-99,-101,35,-15,-120,35,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,35,-116,35,-115,35,35,-28,35,-150,-24,35,-10,35,35,35,35,-139,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-32,-31,-30,-29,]),'ASC':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[6,-6,6,-8,-9,6,-7,6,-5,6,6,-140,6,6,6,6,-102,6,-103,6,6,6,6,6,-118,-151,6,-119,-100,-117,-99,-101,6,-15,-120,6,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,6,-116,6,-115,6,6,-28,6,-150,-24,6,-10,6,6,6,6,-139,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-32,-31,-30,-29,]),'TO':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,165,168,171,178,212,215,216,220,222,230,235,255,262,276,289,302,304,307,312,313,324,328,],[-78,-71,-70,-165,-69,-164,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-130,-136,303,-82,303,303,-77,-131,-83,303,-197,]),'BOOL':([44,45,47,122,126,196,208,209,232,270,275,286,287,317,],[138,-21,-23,138,138,138,138,-22,138,138,138,138,138,138,]),'TRUE':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[61,61,61,61,61,61,-102,-103,61,61,61,61,-118,-151,61,-119,-100,-117,-99,-101,-120,61,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,61,-116,61,-115,61,-150,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'UPPER':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[24,-6,24,-8,-9,24,-7,24,-5,24,24,-140,24,24,24,24,-102,24,-103,24,24,24,24,24,-118,-151,24,-119,-100,-117,-99,-101,24,-15,-120,24,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,24,-116,24,-115,24,24,-28,24,-150,-24,24,-10,24,24,24,24,-139,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-32,-31,-30,-29,]),'NULL':([8,12,15,60,62,63,64,79,86,93,97,102,105,106,107,108,109,110,112,115,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,192,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[52,52,52,52,52,52,-102,-103,52,52,52,52,-118,-151,52,-119,-100,-117,-99,-101,-120,52,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,52,-116,52,-115,52,-150,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'GTEQUAL':([3,14,16,26,28,37,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,84,85,111,165,168,171,178,212,215,216,220,222,230,235,253,255,262,307,312,],[-78,-71,-70,-165,-69,-164,-134,-137,156,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-128,-72,-73,-94,-104,-167,-177,-89,-91,-81,-93,-166,-176,-74,-68,-130,-136,-77,-131,]),'TYPE':([0,1,10,11,13,25,31,49,118,146,176,195,201,211,296,319,322,334,338,343,344,346,],[39,-6,-8,-9,-7,-5,39,-140,39,-15,-28,-24,-10,-139,39,39,39,39,-32,-31,-30,-29,]),'COMMA':([3,14,16,26,28,37,45,46,47,51,52,53,54,55,56,57,58,59,61,66,67,68,69,70,72,73,74,75,76,78,80,81,82,83,84,85,111,121,123,125,127,128,129,131,132,133,135,136,137,138,139,141,142,143,165,168,171,172,178,191,202,205,212,214,215,216,220,222,230,235,238,241,246,251,252,254,255,262,269,277,280,281,283,284,285,289,299,307,308,309,310,312,313,321,],[-78,-71,-70,-165,-69,-164,144,145,-23,-134,-137,-79,-96,-123,-135,-98,-129,-88,-133,-92,-132,-127,-23,-95,-125,-138,-121,-97,-122,-124,-126,-90,-68,-80,-128,-72,-73,197,200,-51,-59,-58,-47,-43,-19,-45,-46,-40,-42,-50,-39,-41,-44,-49,-94,-104,-167,221,-177,237,-57,-18,-89,237,-91,-81,-93,-166,-176,-74,-27,-14,-20,-65,287,-66,-130,-136,298,-56,237,-13,-52,-60,-53,-82,-36,-77,-54,-67,-62,-131,-83,-35,]),'NUM':([0,1,8,10,11,12,13,15,25,27,31,49,50,60,62,63,64,65,79,86,93,97,99,102,105,106,107,108,109,110,112,115,118,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,174,176,180,192,195,199,201,203,204,207,208,211,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,338,343,344,346,],[41,-6,41,-8,-9,41,-7,41,-5,41,41,-140,41,41,41,41,-102,41,-103,41,41,41,41,41,-118,-151,41,-119,-100,-117,-99,-101,41,-15,-120,41,-106,-113,-107,-111,-109,-112,-114,-105,-108,-110,41,-116,41,-115,41,41,-28,41,-150,-24,41,-10,41,41,41,41,-139,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-32,-31,-30,-29,]),'INT':([44,45,47,122,126,196,208,209,232,270,275,286,287,317,],[143,-21,-23,143,143,143,143,-22,143,143,143,143,143,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'control_part':([27,],[94,]),'synonym_statement':([0,31,118,296,319,322,334,],[1,1,1,1,1,1,1,]),'string_mode':([44,122,126,196,270,286,317,],[128,128,128,128,128,128,128,]),'string_length':([206,],[248,]),'discrete_range_mode':([44,122,126,196,208,232,270,275,286,287,317,],[129,129,129,129,129,129,129,129,129,129,129,]),'discrete_mode_name':([44,122,126,196,208,232,270,275,286,287,317,],[130,130,130,130,130,130,130,130,130,130,130,]),'operand0':([8,12,15,62,63,86,93,97,102,107,161,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'array_location':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[29,54,54,54,29,29,29,54,54,54,168,54,54,54,29,54,54,29,54,54,54,54,29,29,54,54,54,54,54,54,54,29,54,29,54,54,54,54,54,54,54,54,54,54,29,54,54,29,29,29,]),'do_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'value_array_element':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'range_enumeration':([96,],[184,]),'mode':([44,122,126,196,270,286,317,],[132,198,202,238,299,309,330,]),'operand1':([8,12,15,62,63,86,93,97,102,107,150,161,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[59,59,59,59,59,59,59,59,59,59,212,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'result_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'synonym_list':([40,200,],[124,242,]),'procedure_statement':([0,31,118,296,319,322,334,],[11,11,11,11,11,11,11,]),'newmode_statement':([0,31,118,296,319,322,334,],[13,13,13,13,13,13,13,]),'elsif_expression':([218,],[259,]),'bracketed_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operand3':([8,12,15,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[66,66,66,66,66,66,66,66,66,66,66,66,66,220,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'empty':([15,27,31,99,118,180,223,296,319,322,334,],[89,98,117,98,117,98,98,117,117,117,117,]),'action_statement_list':([174,228,],[224,267,]),'lower_bound':([102,203,207,208,287,],[190,243,243,243,243,]),'location':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'reference_mode':([44,122,126,196,270,286,317,],[141,141,141,141,141,141,141,]),'formal_parameter_list':([229,298,],[271,320,]),'operand4':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[70,70,70,165,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'then_clause':([87,266,],[175,294,]),'expression':([8,12,15,62,63,86,93,97,102,107,161,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[71,87,90,166,167,172,172,186,191,193,214,241,244,246,244,244,257,172,266,276,277,280,281,288,292,293,277,244,314,326,328,]),'string_concatenation_operator':([29,59,212,],[113,162,162,]),'builtin_call':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dereferenced_reference':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'else_expression':([218,259,],[258,290,]),'procedure_definition':([92,],[176,]),'step_enumeration':([96,],[185,]),'referenced_location':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'while_control':([27,95,],[100,181,]),'return_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'upper_bound':([236,282,],[278,308,]),'parenthesized_expression':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'relational_operator':([53,],[151,]),'operator2':([59,212,],[163,163,]),'discrete_mode':([44,122,126,196,208,232,270,275,286,287,317,],[136,136,136,136,251,273,136,301,136,251,136,]),'program':([0,],[33,]),'call_action':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[34,85,85,85,34,34,34,85,85,85,85,85,85,85,34,85,85,34,85,85,85,85,34,34,85,85,85,85,85,85,85,34,85,34,85,85,85,85,85,85,85,85,85,85,34,85,85,34,34,34,]),'mode_definition':([39,197,],[121,121,]),'builtin_name':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression_list':([102,161,237,],[189,213,279,]),'iteration':([96,],[182,]),'primitive_value':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'empty_literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'end_value':([276,302,304,324,],[306,325,327,335,]),'element_mode':([286,],[310,]),'character_string_literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'literal_range':([203,207,208,287,],[245,249,254,254,]),'for_control':([27,],[95,]),'operand2':([8,12,15,62,63,86,93,97,102,107,150,161,163,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[81,81,81,81,81,81,81,81,81,81,81,81,215,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'declaration':([2,145,],[46,46,]),'array_slice':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'statement_nullable':([31,118,296,319,322,334,],[116,194,318,332,333,341,]),'assigning_operator':([29,],[107,]),'action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[4,4,4,147,4,4,4,4,4,4,4,4,4,4,]),'value_array_slice':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'identifier':([0,2,8,12,15,18,27,31,39,40,44,50,60,62,63,65,86,93,96,97,99,102,107,118,122,126,144,145,150,161,163,170,174,180,196,197,199,200,203,204,207,208,217,221,223,227,228,229,232,234,236,237,240,256,260,261,270,275,282,286,287,291,296,298,303,305,317,319,322,334,],[7,45,82,82,82,91,7,7,45,45,131,82,82,82,82,82,82,82,183,82,7,82,82,7,131,131,45,45,82,82,82,82,7,7,131,45,82,45,82,82,82,253,82,82,7,82,7,45,274,82,82,82,82,82,82,82,131,274,82,131,253,82,7,45,82,82,131,7,7,7,]),'statement_list':([0,],[23,]),'parameter_list':([86,93,221,],[173,179,263,]),'monadic_operator':([8,12,15,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'array_element':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'action_statement':([0,27,31,99,118,174,180,223,228,296,319,322,334,],[10,99,10,99,10,223,99,99,223,10,10,10,10,]),'character_mode':([44,122,126,196,208,232,270,275,286,287,317,],[135,135,135,135,135,135,135,135,135,135,135,]),'synonym_definition':([40,200,],[123,123,]),'exit_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'else_clause':([175,294,],[226,316,]),'character_literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'composite_mode':([44,122,126,196,270,286,317,],[137,137,137,137,137,137,137,]),'if_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'mode_name':([44,122,126,196,270,286,317,],[139,139,139,139,139,139,139,]),'index_mode_list':([208,287,],[250,311,]),'newmode_list':([39,197,],[119,239,]),'initialization':([132,],[205,]),'result':([15,],[88,]),'conditional_expression':([8,12,15,62,63,86,93,97,102,107,161,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'step_value':([276,],[302,]),'operator1':([53,],[150,]),'closed_dyadic_operator':([29,],[104,]),'declaration_statement':([0,31,118,296,319,322,334,],[25,25,25,25,25,25,25,]),'array_mode':([44,122,126,196,270,286,317,],[127,127,127,127,127,127,127,]),'integer_literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,206,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,247,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'formal_parameter':([229,298,],[269,269,]),'literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'identifier_list':([2,39,40,144,145,197,200,229,298,],[44,120,122,209,44,120,122,270,270,]),'arithmetic_additive_operator':([29,59,212,],[114,164,164,]),'membership_operator':([53,],[158,]),'boolean_mode':([44,122,126,196,208,232,270,275,286,287,317,],[133,133,133,133,133,133,133,133,133,133,133,]),'statement':([0,31,118,296,319,322,334,],[31,118,118,118,118,118,118,]),'declaration_list':([2,145,],[48,210,]),'result_spec':([268,300,],[297,323,]),'index_mode':([208,287,],[252,252,]),'boolean_literal':([8,12,15,60,62,63,86,93,97,102,107,150,161,163,170,199,203,204,207,208,217,221,227,234,236,237,240,256,260,261,282,287,291,303,305,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'procedure_call':([0,8,12,15,27,31,50,60,62,63,65,86,93,97,99,102,107,118,150,161,163,170,174,180,199,203,204,207,208,217,221,223,227,228,234,236,237,240,256,260,261,282,287,291,296,303,305,319,322,334,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'assignment_action':([0,27,31,50,99,118,174,180,223,228,296,319,322,334,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'action_statement_nullable':([27,99,180,223,],[101,187,231,264,]),'integer_mode':([44,122,126,196,208,232,270,275,286,287,317,],[142,142,142,142,142,142,142,142,142,142,142,]),'then_expression':([167,292,314,],[218,315,329,]),'arithmetic_multiplicative_operator':([29,81,215,],[103,170,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> array_element','location',1,'p_location','Parser.py',369),
  ('location -> array_slice','location',1,'p_location','Parser.py',370),
  ('location -> call_action','location',1,'p_location','Parser.py',371),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',399),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',403),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',404),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',412),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',416),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',426),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',427),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',431),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',439),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',440),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',444),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',448),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',468),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',469),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',476),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',484),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',485),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',493),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',494),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',501),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',503),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',514),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',520),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',525),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',529),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',530),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',544),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',545),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',549),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',554),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',559),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',571),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',578),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',582),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',586),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',590),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',598),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',602),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',607),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',608),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',617),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',621),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',632),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',633),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',638),
  ('action -> assignment_action','action',1,'p_action','Parser.py',639),
  ('action -> call_action','action',1,'p_action','Parser.py',640),
  ('action -> exit_action','action',1,'p_action','Parser.py',641),
  ('action -> result_action','action',1,'p_action','Parser.py',642),
  ('action -> return_action','action',1,'p_action','Parser.py',643),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',647),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',652),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',656),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',657),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',661),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',667),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',668),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',672),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',676),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',678),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',689),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',701),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',702),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',719),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',720),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',724),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',725),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',730),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',741),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',742),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',746),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',747),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',756),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',764),
  ('result -> expression','result',1,'p_result','Parser.py',768),
  ('result -> empty','result',1,'p_result','Parser.py',769),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',772),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',780),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',781),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',788),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',789),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',790),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',794),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',798),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',803),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',806),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',818),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',822),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',826),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',827),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',834),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',840),
]

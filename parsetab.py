
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQUALNOTEQleftLTEQUALLESSGREATERGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSUNOTICONST CCONST SCONST COMMA PLUS MINUS TIMES DIVIDE COLON LPAREN RPAREN ASSIGN SEMI ARROW LTEQUAL LESS GREATER GTEQUAL EQUAL LBRACKET RBRACKET ID MODULO AND OR NOTEQ NOT CONCAT HAT SYN END INT NULL CHAR OD LOC REF ELSE NUM TYPE UPPER ARRAY IF DO PRINT FOR RETURN CHARS FALSE WHILE READ LENGTH ELSIF DCL DOWN RESULT TRUE LOWER FI PROC ABS THEN RETURNS EXIT ASC TO BY IN BOOLprogram : statement_liststatement_list : statement statement_nullablestatement_nullable : statement statement_nullable\n                              | emptystatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | action_statement\n                     | procedure_statementsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_definition COMMA synonym_listsynonym_definition : identifier_list mode ASSIGN expression\n                              | identifier_list ASSIGN expressiondeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration COMMA declaration_listdeclaration : identifier_list mode initialization\n                       | identifier_list modeinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier COMMA identifier_listidentifier : IDnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | mode_definition COMMA newmode_listmode_definition : identifier_list ASSIGN modeprocedure_statement : ID COLON procedure_definitionprocedure_definition : PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN result_spec SEMI statement_nullable END SEMI\n                                | PROC LPAREN  RPAREN SEMI statement_nullable END SEMIformal_parameter_list : formal_parameter\n                                 | formal_parameter COMMA formal_parameter_listformal_parameter : identifier_list mode LOC\n                            | identifier_list moderesult_spec : RETURNS LPAREN mode LOC RPAREN\n                       | RETURNS LPAREN mode RPARENmode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modemode_name : identifierdiscrete_mode : integer_mode\n                         | boolean_mode\n                         | character_mode\n                         | discrete_range_modediscrete_mode_name : identifierinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : discrete_mode_name LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPARENliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode COMMA index_mode_listindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modelocation : identifier\n\t\t\t\t    | dereferenced_reference\n                    | array_element\n\t\t\t\t    | array_slice\n\t\t\t\t    | call_actiondereferenced_reference : array_location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n    \t\t\t\t\t   | expression COMMA expression_listarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationexpression : operand0\n                      | conditional_expressionparenthesized_expression : LPAREN expression RPARENconditional_expression : IF expression then_expression else_expression FI\n                                  | IF expression then_expression elsif_expression else_expression FIthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF expression then_expression\n                            | elsif_expression ELSIF expression then_expressionoperand0 : operand1\n                    | operand0 operator1 operand1operand1 : operand2\n                    | operand1 operator2 operand2operand2 : operand3\n                    | operand2 arithmetic_multiplicative_operator operand3operand3 : monadic_operator operand4\n                    | operand4operand4 : array_location\n                    | referenced_location\n                    | primitive_valuearithmetic_multiplicative_operator : TIMES\n                                              | DIVIDE\n                                              | MODULOmonadic_operator : MINUS %prec UMINUS\n                            | NOT %prec UNOTreferenced_location : ARROW array_locationoperator1 : membership_operator\n                     | relational_operatorrelational_operator : AND\n                               | OR\n                               | EQUAL\n                               | NOTEQ\n                               | GREATER\n                               | GTEQUAL\n                               | LESS\n                               | LTEQUALoperator2 : arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator : PLUS\n                                        | MINUSstring_concatenation_operator : CONCATmembership_operator : INprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expressionliteral : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literalvalue_array_element : primitive_value LBRACKET expression_list RBRACKETvalue_array_slice : primitive_value LBRACKET expression COLON expression RBRACKETinteger_literal : ICONSTboolean_literal : TRUE\n                           | FALSEcharacter_literal : CCONST\n                             | HAT LPAREN ICONST RPARENempty_literal : NULLcharacter_string_literal : SCONSTaction_statement : identifier COLON action SEMI\n                            | action SEMIaction : bracketed_action\n                  | assignment_action\n                  | call_action\n                  | exit_action\n                  | result_action\n                  | return_actionbracketed_action : if_action\n                            | do_actionassignment_action : array_location assigning_operator expressionassigning_operator : closed_dyadic_operator ASSIGN\n                              | ASSIGNclosed_dyadic_operator : arithmetic_additive_operator\n                                  | arithmetic_multiplicative_operator\n                                  | string_concatenation_operatorif_action : IF expression then_clause else_clause FI\n                     | IF expression then_clause FIthen_clause : THEN action_statement_listelse_clause : ELSE action_statement_list\n                       | ELSIF expression then_clause else_clause\n                       | ELSIF expression then_clauseaction_statement_list : action_statement action_statement_nullableaction_statement_nullable : action_statement action_statement_nullable\n                                     | emptycall_action : procedure_call\n                       | builtin_callbuiltin_call : builtin_name LPAREN parameter_list RPAREN\n                        | builtin_name LPAREN RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_call : ID LPAREN parameter_list RPAREN\n                          | ID LPAREN RPARENparameter_list : expression\n                          | expression COMMA parameter_listexit_action : EXIT identifierreturn_action : RETURN resultresult : expression\n                  | emptyresult_action : RESULT expressiondo_action : DO control_part SEMI action_statement_nullable OD\n                     | DO action_statement_nullable ODcontrol_part : for_control while_control \n                        | for_control   \n                        | while_controlfor_control : FOR iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : identifier ASSIGN expression step_value DOWN end_value\n                            | identifier ASSIGN expression step_value end_value\n                            | identifier ASSIGN expression DOWN end_value\n                            | identifier ASSIGN expression end_valuestep_value : BY expressionend_value : TO expressionrange_enumeration : identifier DOWN IN discrete_mode\n                             | identifier IN discrete_modewhile_control : WHILE expressionempty :'
    
_lr_action_items = {'EXIT':([0,12,14,19,21,25,27,36,54,63,121,122,146,150,153,165,197,201,236,239,242,297,321,323,333,338,343,345,346,],[2,-5,-9,2,2,-6,-8,-7,2,2,-140,2,-10,-15,2,-28,-24,2,-139,2,2,2,2,2,2,-32,-31,-30,-29,]),'ELSIF':([1,11,16,29,34,41,57,61,63,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,121,156,161,173,178,193,200,218,221,224,226,227,230,231,233,236,241,242,270,271,276,277,281,300,303,307,324,325,327,335,],[-70,-71,-165,-78,-164,-69,-163,-23,-202,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-140,-162,-177,-104,-94,-167,238,-176,-74,-81,-93,-91,-89,273,-166,-139,-157,-202,-136,-130,305,-84,-161,-77,-82,238,-131,-86,-83,-87,]),'PROC':([66,],[164,]),'MINUS':([1,11,15,16,22,24,28,29,34,39,41,42,43,61,62,65,67,69,70,72,74,75,76,78,79,80,81,82,84,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,113,114,115,116,117,132,161,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,198,203,204,205,208,212,216,218,219,221,222,223,224,226,227,230,232,233,238,250,270,271,272,273,275,282,285,290,292,300,305,324,],[-70,-71,-72,-165,-23,72,83,-78,-164,-68,-69,83,83,-23,83,83,-100,-117,-101,-118,-73,83,-151,-99,-119,83,-123,-128,83,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,72,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,83,83,83,-177,-150,-104,83,-116,83,-115,-94,83,-107,-114,83,-120,-105,-113,-109,-108,-111,-112,-106,-110,-167,-23,83,83,83,83,83,83,-176,83,-74,83,83,-81,-93,-91,72,83,-166,83,-68,-136,-130,83,83,83,83,83,83,83,-77,83,-131,]),'UPPER':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[33,-5,-9,33,33,-6,-8,33,-7,33,33,33,33,33,33,-100,-117,-101,-118,33,-151,-99,-119,33,-102,33,-103,33,33,33,33,-140,33,33,-10,-15,33,-28,-150,33,-116,33,-115,33,-107,-114,33,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,33,33,33,33,33,33,33,33,33,33,33,-139,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-32,-31,-30,-29,]),'CHAR':([44,47,49,51,145,196,205,210,217,257,263,284,285,319,],[-23,137,-21,137,137,137,137,-22,137,137,137,137,137,137,]),'DCL':([0,12,14,19,25,27,36,54,121,146,150,165,197,236,297,321,323,333,338,343,345,346,],[7,-5,-9,7,-6,-8,-7,7,-140,-10,-15,-28,-24,-139,7,7,7,7,-32,-31,-30,-29,]),'NOT':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,84,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[86,86,86,86,86,-100,-117,-101,-118,86,-151,-99,-119,86,86,86,86,86,-150,86,-116,86,-115,86,-107,-114,86,-120,-105,-113,-109,-108,-111,-112,-106,-110,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'RBRACKET':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,129,131,137,140,142,143,144,161,167,169,173,178,193,218,221,224,226,227,228,229,230,233,247,248,249,251,252,253,266,267,268,269,270,271,283,287,300,301,303,308,311,324,327,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-47,-49,-51,-50,-44,-46,-45,-177,221,-75,-104,-94,-167,-176,-74,-81,-93,-91,271,-75,-89,-166,284,-63,-65,-66,286,-61,300,-56,-76,-75,-136,-130,-52,-53,-77,324,-82,-54,-64,-131,-83,]),'LPAREN':([4,13,17,18,22,28,30,33,35,38,40,42,43,44,61,62,65,67,69,70,72,75,76,78,79,80,83,84,86,92,110,116,117,127,129,131,132,137,138,139,140,142,143,144,164,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,198,203,204,205,208,212,216,219,222,223,232,238,249,250,259,260,272,273,275,282,283,285,287,288,290,292,296,305,],[-169,-174,-175,-168,65,84,117,-171,-173,-172,-170,84,84,-23,65,84,84,-100,-117,-101,-118,84,-151,-99,-119,84,-102,84,-103,172,84,84,84,204,-47,-49,84,-51,-48,208,-50,-44,-46,-45,220,-150,84,-116,84,-115,84,-107,-114,84,-120,-105,-113,-109,-108,-111,-112,-106,-110,65,84,84,84,84,84,84,84,84,84,84,84,208,-48,-48,208,84,84,84,84,-52,84,-53,208,84,84,319,84,]),'SYN':([0,12,14,19,25,27,36,54,121,146,150,165,197,236,297,321,323,333,338,343,345,346,],[6,-5,-9,6,-6,-8,-7,6,-140,-10,-15,-28,-24,-139,6,6,6,6,-32,-31,-30,-29,]),'NULL':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[91,91,91,91,91,-100,-117,-101,-118,91,-151,-99,-119,91,-102,91,-103,91,91,91,91,-150,91,-116,91,-115,91,-107,-114,91,-120,-105,-113,-109,-108,-111,-112,-106,-110,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'HAT':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[92,92,92,92,92,-100,-117,-101,-118,92,-151,-99,-119,92,-102,92,-103,92,92,92,92,-150,92,-116,92,-115,92,-107,-114,92,-120,-105,-113,-109,-108,-111,-112,-106,-110,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'TIMES':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,103,105,106,107,108,109,111,113,114,115,161,173,178,193,198,218,221,224,226,227,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,78,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,78,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,-177,-104,-94,-167,-23,-176,-74,-81,-93,78,-166,-68,-136,-130,-77,-131,]),'ASSIGN':([1,11,15,16,22,24,29,34,39,41,44,47,49,61,67,68,69,70,71,72,73,74,77,78,79,113,119,126,128,129,131,133,134,136,137,138,139,140,141,142,143,144,149,158,161,193,198,209,210,218,221,233,283,286,287,300,309,310,],[-70,-71,-72,-165,-23,76,-78,-164,-68,-69,-23,132,-21,-23,-100,-153,-117,-101,166,-118,-152,-73,-154,-99,-119,-68,196,203,-42,-47,-49,-59,-58,-39,-51,-43,-40,-50,-41,-44,-46,-45,212,216,-177,-167,-23,-57,-22,-176,-74,-166,-52,-60,-53,-77,-67,-62,]),'SCONST':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[109,109,109,109,109,-100,-117,-101,-118,109,-151,-99,-119,109,-102,109,-103,109,109,109,109,-150,109,-116,109,-115,109,-107,-114,109,-120,-105,-113,-109,-108,-111,-112,-106,-110,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'NOTEQ':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,191,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'READ':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[13,-5,-9,13,13,-6,-8,13,-7,13,13,13,13,13,13,-100,-117,-101,-118,13,-151,-99,-119,13,-102,13,-103,13,13,13,13,-140,13,13,-10,-15,13,-28,-150,13,-116,13,-115,13,-107,-114,13,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,13,13,13,13,13,13,13,13,13,13,13,-139,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-32,-31,-30,-29,]),'CCONST':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[94,94,94,94,94,-100,-117,-101,-118,94,-151,-99,-119,94,-102,94,-103,94,94,94,94,-150,94,-116,94,-115,94,-107,-114,94,-120,-105,-113,-109,-108,-111,-112,-106,-110,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'MODULO':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,103,105,106,107,108,109,111,113,114,115,161,173,178,193,198,218,221,224,226,227,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,70,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,70,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,-177,-104,-94,-167,-23,-176,-74,-81,-93,70,-166,-68,-136,-130,-77,-131,]),'DOWN':([1,11,16,29,34,41,44,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,158,161,173,178,193,218,221,224,226,227,230,233,258,270,271,289,300,303,316,324,327,],[-70,-71,-165,-78,-164,-69,-23,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,215,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,291,-136,-130,312,-77,-82,-197,-131,-83,]),'NUM':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[40,-5,-9,40,40,-6,-8,40,-7,40,40,40,40,40,40,-100,-117,-101,-118,40,-151,-99,-119,40,-102,40,-103,40,40,40,40,-140,40,40,-10,-15,40,-28,-150,40,-116,40,-115,40,-107,-114,40,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,40,40,40,40,40,40,40,40,40,40,40,-139,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-32,-31,-30,-29,]),'ABS':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[18,-5,-9,18,18,-6,-8,18,-7,18,18,18,18,18,18,-100,-117,-101,-118,18,-151,-99,-119,18,-102,18,-103,18,18,18,18,-140,18,18,-10,-15,18,-28,-150,18,-116,18,-115,18,-107,-114,18,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,18,18,18,18,18,18,18,18,18,18,18,-139,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-32,-31,-30,-29,]),'FOR':([21,],[64,]),'COMMA':([1,11,16,29,34,41,44,46,49,50,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,118,128,129,131,133,134,136,137,138,139,140,141,142,143,144,149,161,163,169,173,178,193,206,209,213,218,221,224,226,227,229,230,233,235,243,248,249,251,255,262,267,269,270,271,283,286,287,295,300,303,308,309,310,318,324,327,],[-70,-71,-165,-78,-164,-69,-23,125,147,148,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,195,-42,-47,-49,-59,-58,-39,-51,-43,-40,-50,-41,-44,-46,-45,-19,-177,219,223,-104,-94,-167,-14,-57,-18,-176,-74,-81,-93,-91,223,-89,-166,-27,-13,285,-65,-66,-20,294,-56,223,-136,-130,-52,-60,-53,-36,-77,-82,-54,-67,-62,-35,-131,-83,]),'ASC':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[4,-5,-9,4,4,-6,-8,4,-7,4,4,4,4,4,4,-100,-117,-101,-118,4,-151,-99,-119,4,-102,4,-103,4,4,4,4,-140,4,4,-10,-15,4,-28,-150,4,-116,4,-115,4,-107,-114,4,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,4,4,4,4,4,4,4,4,4,4,4,-139,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-32,-31,-30,-29,]),'IN':([1,11,16,29,34,41,44,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,158,161,173,178,193,215,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,183,-68,-97,-129,217,-177,-104,-94,-167,257,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'PLUS':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,113,114,115,161,173,178,193,198,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,69,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,69,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,-177,-104,-94,-167,-23,-176,-74,-81,-93,-91,69,-166,-68,-136,-130,-77,-131,]),'BOOL':([44,47,49,51,145,196,205,210,217,257,263,284,285,319,],[-23,140,-21,140,140,140,140,-22,140,140,140,140,140,140,]),'DO':([0,12,14,19,21,25,27,36,54,63,121,122,146,150,153,165,197,201,236,239,242,297,321,323,333,338,343,345,346,],[21,-5,-9,21,21,-6,-8,-7,21,21,-140,21,-10,-15,21,-28,-24,21,-139,21,21,21,21,21,21,-32,-31,-30,-29,]),'ID':([0,2,6,7,12,14,19,21,25,27,28,31,36,42,43,44,47,49,51,54,62,63,64,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,125,132,145,146,147,148,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,201,203,204,205,208,210,212,216,217,219,220,222,223,232,236,238,239,242,257,263,272,273,275,282,284,285,290,292,294,297,305,319,321,323,333,338,343,345,346,],[22,44,44,44,-5,-9,22,61,-6,-8,61,44,-7,61,61,-23,44,-21,44,22,61,61,44,61,-100,-117,-101,-118,61,-151,-99,-119,61,-102,61,-103,61,61,61,61,-140,198,44,61,44,-10,44,44,-15,61,-28,-150,61,-116,61,-115,61,-107,-114,61,-120,-105,-113,-109,-108,-111,-112,-106,-110,44,44,-24,61,61,61,61,61,-22,61,61,44,61,44,61,61,61,-139,61,61,61,44,44,61,61,61,61,44,61,61,61,44,22,61,44,22,22,22,-32,-31,-30,-29,]),'LOC':([44,128,129,131,133,134,136,137,138,139,140,141,142,143,144,209,283,286,287,295,309,310,330,],[-23,-42,-47,-49,-59,-58,-39,-51,-43,-40,-50,-41,-44,-46,-45,-57,-52,-60,-53,318,-67,-62,337,]),'LTEQUAL':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,181,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'$end':([8,9,12,14,19,25,27,36,53,54,55,121,146,150,151,165,197,236,338,343,345,346,],[0,-1,-5,-9,-202,-6,-8,-7,-4,-202,-2,-140,-10,-15,-3,-28,-24,-139,-32,-31,-30,-29,]),'REF':([44,47,49,51,145,196,210,263,284,319,],[-23,145,-21,145,145,145,-22,145,145,145,]),'WHILE':([1,11,16,21,29,34,41,58,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,129,131,137,140,142,143,144,157,159,160,161,173,178,193,218,221,224,226,227,230,233,260,270,271,283,287,288,293,300,303,313,314,315,324,327,329,],[-70,-71,-165,62,-78,-164,-69,62,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-47,-49,-51,-50,-44,-46,-45,-190,-191,-192,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-200,-136,-130,-52,-53,-199,-196,-77,-82,-194,-198,-195,-131,-83,-193,]),'RETURN':([0,12,14,19,21,25,27,36,54,63,121,122,146,150,153,165,197,201,236,239,242,297,321,323,333,338,343,345,346,],[28,-5,-9,28,28,-6,-8,-7,28,28,-140,28,-10,-15,28,-28,-24,28,-139,28,28,28,28,28,28,-32,-31,-30,-29,]),'TO':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,258,270,271,289,291,300,303,312,316,324,327,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,290,-136,-130,290,290,-77,-82,290,-197,-131,-83,]),'GTEQUAL':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,189,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'TYPE':([0,12,14,19,25,27,36,54,121,146,150,165,197,236,297,321,323,333,338,343,345,346,],[31,-5,-9,31,-6,-8,-7,31,-140,-10,-15,-28,-24,-139,31,31,31,31,-32,-31,-30,-29,]),'ARROW':([1,11,15,16,22,24,28,29,34,39,41,42,43,61,62,65,67,69,70,72,74,75,76,78,79,80,83,84,86,93,97,110,113,116,117,132,161,166,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,198,203,204,205,208,212,216,218,219,221,222,223,232,233,238,250,272,273,275,282,285,290,292,300,305,],[-70,-71,-72,-165,-23,74,100,-78,-164,-68,-69,100,100,-23,100,100,-100,-117,-101,-118,-73,100,-151,-99,-119,100,-102,100,-103,-72,74,100,-68,100,100,100,-177,-150,74,100,-116,100,-115,100,-107,-114,100,-120,-105,-113,-109,-108,-111,-112,-106,-110,-167,-23,100,100,100,100,100,100,-176,100,-74,100,100,100,-166,100,-68,100,100,100,100,100,100,100,-77,100,]),'SEMI':([1,3,5,10,11,15,16,20,23,26,28,29,32,34,37,41,44,45,46,48,50,52,56,58,59,61,74,81,82,85,87,88,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,113,114,115,118,120,124,128,129,131,133,134,136,137,138,139,140,141,142,143,144,149,152,154,155,157,159,160,161,170,173,178,193,199,202,206,209,211,213,218,221,224,226,227,230,233,234,235,237,243,255,256,260,264,270,271,280,283,286,287,288,293,298,299,300,303,309,310,313,314,315,322,324,327,329,331,336,339,341,342,344,],[-70,-148,-146,-145,-71,-143,-165,-147,-141,-142,-202,-78,-144,-164,121,-69,-23,-180,-11,146,-16,150,-189,-188,153,-23,-73,-123,-128,-127,-183,-121,-126,-125,-137,-72,-135,-92,-182,-96,-80,-95,-90,-88,-132,-181,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-25,197,-184,-42,-47,-49,-59,-58,-39,-51,-43,-40,-50,-41,-44,-46,-45,-19,-187,-186,-201,-190,-191,-192,-177,-149,-104,-94,-167,236,-12,-14,-57,-17,-18,-176,-74,-81,-93,-91,-89,-166,-26,-27,-156,-13,-20,-185,-200,297,-136,-130,-155,-52,-60,-53,-199,-196,321,323,-77,-82,-67,-62,-194,-198,-195,333,-131,-83,-193,338,-38,343,345,-37,346,]),'ARRAY':([44,47,49,51,145,196,210,263,284,319,],[-23,130,-21,130,130,130,-22,130,130,130,]),'LBRACKET':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,97,103,105,106,107,108,109,111,113,115,130,135,161,173,193,198,218,221,224,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,75,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,75,-132,-124,-134,-133,-122,-138,179,-68,-129,205,207,-177,75,-167,-23,-176,-74,-81,-166,-68,-136,-130,-77,-131,]),'OR':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,187,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'END':([12,14,25,27,36,53,54,121,146,150,151,165,197,236,297,320,321,323,332,333,334,338,340,343,345,346,],[-5,-9,-6,-8,-7,-4,-202,-140,-10,-15,-3,-28,-24,-139,-202,331,-202,-202,339,-202,341,-32,344,-31,-30,-29,]),'BY':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,258,270,271,300,303,324,327,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,292,-136,-130,-77,-82,-131,-83,]),'INT':([44,47,49,51,145,196,205,210,217,257,263,284,285,319,],[-23,131,-21,131,131,131,131,-22,131,131,131,131,131,131,]),'LENGTH':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[35,-5,-9,35,35,-6,-8,35,-7,35,35,35,35,35,35,-100,-117,-101,-118,35,-151,-99,-119,35,-102,35,-103,35,35,35,35,-140,35,35,-10,-15,35,-28,-150,35,-116,35,-115,35,-107,-114,35,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,35,35,35,35,35,35,35,35,35,35,35,-139,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-32,-31,-30,-29,]),'DIVIDE':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,103,105,106,107,108,109,111,113,114,115,161,173,178,193,198,218,221,224,226,227,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,67,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,67,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,-177,-104,-94,-167,-23,-176,-74,-81,-93,67,-166,-68,-136,-130,-77,-131,]),'FALSE':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[106,106,106,106,106,-100,-117,-101,-118,106,-151,-99,-119,106,-102,106,-103,106,106,106,106,-150,106,-116,106,-115,106,-107,-114,106,-120,-105,-113,-109,-108,-111,-112,-106,-110,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'TRUE':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[107,107,107,107,107,-100,-117,-101,-118,107,-151,-99,-119,107,-102,107,-103,107,107,107,107,-150,107,-116,107,-115,107,-107,-114,107,-120,-105,-113,-109,-108,-111,-112,-106,-110,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'OD':([21,57,60,63,121,153,156,214,236,],[-202,-163,154,-202,-140,-202,-162,256,-139,]),'GREATER':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,188,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'AND':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,180,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'RPAREN':([1,11,16,29,34,41,44,61,65,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,117,128,129,131,133,134,136,137,138,139,140,141,142,143,144,161,162,163,171,173,178,193,194,209,218,220,221,224,225,226,227,230,233,246,254,261,262,265,267,270,271,283,286,287,295,300,303,308,309,310,317,318,324,327,330,337,],[-70,-71,-165,-78,-164,-69,-23,-23,161,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,193,-42,-47,-49,-59,-58,-39,-51,-43,-40,-50,-41,-44,-46,-45,-177,218,-178,224,-104,-94,-167,233,-57,-176,264,-74,-81,270,-93,-91,-89,-166,283,287,-179,-33,299,-56,-136,-130,-52,-60,-53,-36,-77,-82,-54,-67,-62,-34,-35,-131,-83,336,342,]),'THEN':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,123,161,173,178,192,193,218,221,224,226,227,230,233,270,271,278,300,302,303,324,326,327,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,201,-177,-104,-94,232,-167,-176,-74,-81,-93,-91,-89,-166,-136,-130,201,-77,232,-82,-131,232,-83,]),'CHARS':([44,47,49,51,145,196,210,263,284,319,],[-23,135,-21,135,135,135,-22,135,135,135,]),'RETURNS':([264,299,],[296,296,]),'LOWER':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[38,-5,-9,38,38,-6,-8,38,-7,38,38,38,38,38,38,-100,-117,-101,-118,38,-151,-99,-119,38,-102,38,-103,38,38,38,38,-140,38,38,-10,-15,38,-28,-150,38,-116,38,-115,38,-107,-114,38,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,38,38,38,38,38,38,38,38,38,38,38,-139,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,-31,-30,-29,]),'ICONST':([28,42,43,62,65,67,69,70,72,75,76,78,79,80,83,84,86,110,116,117,132,166,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,203,204,205,207,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[103,103,103,103,103,-100,-117,-101,-118,103,-151,-99,-119,103,-102,103,-103,103,103,103,103,-150,225,103,-116,103,-115,103,-107,-114,103,-120,-105,-113,-109,-108,-111,-112,-106,-110,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'FI':([1,11,16,29,34,41,57,61,63,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,121,156,161,173,178,193,200,218,221,224,226,227,230,233,236,240,241,242,270,271,274,279,281,300,303,304,306,307,324,327,328,],[-70,-71,-165,-78,-164,-69,-163,-23,-202,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-140,-162,-177,-104,-94,-167,237,-176,-74,-81,-93,-91,-89,-166,-139,280,-157,-202,-136,-130,303,-158,-161,-77,-82,-85,327,-160,-131,-83,-159,]),'PRINT':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,67,69,70,72,75,76,78,79,80,83,84,86,100,110,116,117,121,122,132,146,150,153,165,166,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[17,-5,-9,17,17,-6,-8,17,-7,17,17,17,17,17,17,-100,-117,-101,-118,17,-151,-99,-119,17,-102,17,-103,17,17,17,17,-140,17,17,-10,-15,17,-28,-150,17,-116,17,-115,17,-107,-114,17,-120,-105,-113,-109,-108,-111,-112,-106,-110,-24,17,17,17,17,17,17,17,17,17,17,17,-139,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-32,-31,-30,-29,]),'LESS':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,185,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'EQUAL':([1,11,16,29,34,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,173,178,193,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-165,-78,-164,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,186,-68,-97,-129,-177,-104,-94,-167,-176,-74,-81,-93,-91,-89,-166,-68,-136,-130,-77,-131,]),'COLON':([1,11,16,22,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,161,168,169,173,178,193,218,221,224,226,227,229,230,233,244,245,250,270,271,300,303,324,327,],[-70,-71,-165,66,-78,-164,122,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-177,222,-55,-104,-94,-167,-176,-74,-81,-93,-91,272,-89,-166,-55,282,-68,-136,-130,-77,-82,-131,-83,]),'CONCAT':([1,11,15,16,22,24,29,34,39,41,61,74,81,82,85,88,89,90,91,93,94,95,97,99,101,102,103,105,106,107,108,109,111,113,114,115,161,173,178,193,198,218,221,224,226,227,230,233,250,270,271,300,324,],[-70,-71,-72,-165,-23,79,-78,-164,-68,-69,-23,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-95,-90,79,-132,-124,-134,-133,-122,-138,-98,-68,-97,-129,-177,-104,-94,-167,-23,-176,-74,-81,-93,-91,79,-166,-68,-136,-130,-77,-131,]),'ELSE':([1,11,16,29,34,41,57,61,63,74,81,82,85,88,89,90,91,93,94,95,97,98,99,101,102,103,105,106,107,108,109,111,112,113,114,115,121,156,161,173,178,193,200,218,221,224,226,227,230,231,233,236,241,242,270,271,276,277,281,300,303,307,324,325,327,335,],[-70,-71,-165,-78,-164,-69,-163,-23,-202,-73,-123,-128,-127,-121,-126,-125,-137,-72,-135,-92,-96,-80,-95,-90,-88,-132,-124,-134,-133,-122,-138,-98,-79,-68,-97,-129,-140,-162,-177,-104,-94,-167,239,-176,-74,-81,-93,-91,-89,275,-166,-139,-157,-202,-136,-130,275,-84,-161,-77,-82,239,-131,-86,-83,-87,]),'IF':([0,12,14,19,21,25,27,28,36,42,43,54,62,63,65,75,76,80,84,116,117,121,122,132,146,150,153,165,166,179,197,201,203,204,205,208,212,216,219,222,223,232,236,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,338,343,345,346,],[42,-5,-9,42,42,-6,-8,116,-7,116,116,42,116,42,116,116,-151,116,116,116,116,-140,42,116,-10,-15,42,-28,-150,116,-24,42,116,116,116,116,116,116,116,116,116,116,-139,116,42,42,116,116,116,116,116,116,116,42,116,42,42,42,-32,-31,-30,-29,]),'RESULT':([0,12,14,19,21,25,27,36,54,63,121,122,146,150,153,165,197,201,236,239,242,297,321,323,333,338,343,345,346,],[43,-5,-9,43,43,-6,-8,-7,43,43,-140,43,-10,-15,43,-28,-24,43,-139,43,43,43,43,43,43,-32,-31,-30,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operator1':([112,],[182,]),'step_value':([258,],[289,]),'return_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'character_literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'mode_definition':([31,195,],[118,118,]),'program':([0,],[8,]),'empty':([19,21,28,54,63,153,242,297,321,323,333,],[53,57,87,53,57,57,57,53,53,53,53,]),'result_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'relational_operator':([112,],[190,]),'literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'boolean_literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'declaration_statement':([0,19,54,297,321,323,333,],[12,12,12,12,12,12,12,]),'procedure_statement':([0,19,54,297,321,323,333,],[14,14,14,14,14,14,14,]),'procedure_definition':([66,],[165,]),'control_part':([21,],[59,]),'operator2':([102,230,],[176,176,]),'iteration':([64,],[157,]),'call_action':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[15,15,15,93,93,93,15,93,15,93,93,93,93,93,93,93,93,15,93,15,93,93,93,93,15,93,93,93,93,93,93,93,93,93,93,93,15,15,93,93,93,93,93,93,93,15,93,15,15,15,]),'expression_list':([75,179,223,],[167,228,268,]),'result':([28,],[104,]),'statement':([0,19,54,297,321,323,333,],[19,54,54,54,54,54,54,]),'result_spec':([264,299,],[298,322,]),'if_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'integer_mode':([47,51,145,196,205,217,257,263,284,285,319,],[142,142,142,142,142,142,142,142,142,142,142,]),'declaration_list':([7,148,],[52,211,]),'synonym_statement':([0,19,54,297,321,323,333,],[25,25,25,25,25,25,25,]),'assignment_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'builtin_call':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'composite_mode':([47,51,145,196,263,284,319,],[128,128,128,128,128,128,128,]),'arithmetic_additive_operator':([24,102,230,],[73,177,177,]),'exit_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'procedure_call':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'parenthesized_expression':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'then_clause':([123,278,],[200,307,]),'range_enumeration':([64,],[160,]),'referenced_location':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'then_expression':([192,302,326,],[231,325,335,]),'primitive_value':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'formal_parameter':([220,294,],[262,262,]),'operand0':([28,42,43,62,65,75,80,84,116,117,132,179,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'lower_bound':([75,204,205,208,285,],[168,245,245,245,245,]),'identifier':([0,2,6,7,19,21,28,31,42,43,47,51,54,62,63,64,65,75,80,84,100,110,116,117,122,125,132,145,147,148,153,174,176,179,182,195,196,201,203,204,205,208,212,216,217,219,220,222,223,232,238,239,242,257,263,272,273,275,282,284,285,290,292,294,297,305,319,321,323,333,],[39,45,49,49,39,39,113,49,113,113,138,138,39,113,39,158,113,113,113,113,113,113,113,113,113,49,113,138,49,49,39,113,113,113,113,49,138,39,113,113,250,113,113,113,259,113,49,113,113,113,113,39,39,259,138,113,113,113,113,138,250,113,113,49,39,113,138,39,39,39,]),'array_slice':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'index_mode_list':([205,285,],[247,311,]),'dereferenced_reference':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'statement_nullable':([19,54,297,321,323,333,],[55,151,320,332,334,340,]),'character_string_literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'step_enumeration':([64,],[159,]),'boolean_mode':([47,51,145,196,205,217,257,263,284,285,319,],[144,144,144,144,144,144,144,144,144,144,144,]),'newmode_list':([31,195,],[120,234,]),'declaration':([7,148,],[50,50,]),'array_element':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'value_array_slice':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'identifier_list':([6,7,31,125,147,148,195,220,294,],[47,51,119,47,210,51,119,263,263,]),'empty_literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'closed_dyadic_operator':([24,],[71,]),'arithmetic_multiplicative_operator':([24,101,227,],[68,174,174,]),'while_control':([21,58,],[56,152,]),'upper_bound':([222,282,],[266,308,]),'else_clause':([200,307,],[240,328,]),'statement_list':([0,],[9,]),'for_control':([21,],[58,]),'integer_literal':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,207,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,253,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'conditional_expression':([28,42,43,62,65,75,80,84,116,117,132,179,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'index_mode':([205,285,],[248,248,]),'operand1':([28,42,43,62,65,75,80,84,116,117,132,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[102,102,102,102,102,102,102,102,102,102,102,102,230,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'synonym_definition':([6,125,],[46,46,]),'string_concatenation_operator':([24,102,230,],[77,175,175,]),'newmode_statement':([0,19,54,297,321,323,333,],[36,36,36,36,36,36,36,]),'discrete_mode_name':([47,51,145,196,205,217,257,263,284,285,319,],[127,127,127,127,127,127,127,127,127,127,127,]),'formal_parameter_list':([220,294,],[265,317,]),'operand3':([28,42,43,62,65,75,80,84,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[95,95,95,95,95,95,95,95,95,95,95,226,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'synonym_list':([6,125,],[48,202,]),'array_mode':([47,51,145,196,263,284,319,],[133,133,133,133,133,133,133,]),'reference_mode':([47,51,145,196,263,284,319,],[141,141,141,141,141,141,141,]),'action_statement_nullable':([21,63,153,242,],[60,156,214,281,]),'location':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'bracketed_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_location':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[24,24,24,97,97,97,24,97,24,97,97,97,97,173,97,97,97,24,97,24,97,97,97,97,24,97,97,97,97,97,97,97,97,97,97,97,24,24,97,97,97,97,97,97,97,24,97,24,24,24,]),'elsif_expression':([231,],[276,]),'literal_range':([204,205,208,285,],[246,251,254,251,]),'mode':([47,51,145,196,263,284,319,],[126,149,209,235,295,309,330,]),'operand4':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[99,99,99,99,99,99,99,99,178,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'else_expression':([231,276,],[274,306,]),'do_action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'element_mode':([284,],[310,]),'builtin_name':([0,19,21,28,42,43,54,62,63,65,75,80,84,100,110,116,117,122,132,153,174,176,179,182,201,203,204,205,208,212,216,219,222,223,232,238,239,242,272,273,275,282,285,290,292,297,305,321,323,333,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'discrete_range_mode':([47,51,145,196,205,217,257,263,284,285,319,],[129,129,129,129,129,129,129,129,129,129,129,]),'membership_operator':([112,],[184,]),'operand2':([28,42,43,62,65,75,80,84,116,117,132,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[101,101,101,101,101,101,101,101,101,101,101,227,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'expression':([28,42,43,62,65,75,80,84,116,117,132,179,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[96,123,124,155,163,169,170,171,192,163,206,229,243,244,244,244,255,258,163,267,269,277,278,301,302,304,267,244,314,316,326,]),'initialization':([149,],[213,]),'string_length':([207,],[252,]),'string_mode':([47,51,145,196,263,284,319,],[134,134,134,134,134,134,134,]),'discrete_mode':([47,51,145,196,205,217,257,263,284,285,319,],[139,139,139,139,249,260,288,139,139,249,139,]),'action':([0,19,21,54,63,122,153,201,239,242,297,321,323,333,],[37,37,37,37,37,199,37,37,37,37,37,37,37,37,]),'value_array_element':([28,42,43,62,65,75,80,84,110,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'monadic_operator':([28,42,43,62,65,75,80,84,116,117,132,174,176,179,182,203,204,205,208,212,216,219,222,223,232,238,272,273,275,282,285,290,292,305,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'mode_name':([47,51,145,196,263,284,319,],[136,136,136,136,136,136,136,]),'action_statement_list':([201,239,],[241,279,]),'parameter_list':([65,117,219,],[162,194,261,]),'action_statement':([0,19,21,54,63,153,201,239,242,297,321,323,333,],[27,27,63,27,63,63,242,242,63,27,27,27,27,]),'end_value':([258,289,291,312,],[293,313,315,329,]),'assigning_operator':([24,],[80,]),'character_mode':([47,51,145,196,205,217,257,263,284,285,319,],[143,143,143,143,143,143,143,143,143,143,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',72),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',76),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',88),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',89),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',101),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',102),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',103),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',104),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',105),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',114),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',118),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',119),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',128),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',129),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',143),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',147),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',148),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',157),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',158),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',162),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',166),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',167),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',176),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',186),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',190),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',191),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',200),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',211),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',215),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',216),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',217),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_nullable END SEMI','procedure_definition',7,'p_procedure_definition','Parser.py',218),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',231),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter_list','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',232),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',241),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',242),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',248),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',249),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',254),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',255),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',256),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',257),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',261),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',269),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',270),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',271),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',272),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',276),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',280),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',284),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',288),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',297),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',298),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',302),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',306),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',310),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',317),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',324),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',325),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',329),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',333),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',337),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',341),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',342),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',351),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',352),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',356),
  ('location -> identifier','location',1,'p_location','Parser.py',367),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',368),
  ('location -> array_element','location',1,'p_location','Parser.py',369),
  ('location -> array_slice','location',1,'p_location','Parser.py',370),
  ('location -> call_action','location',1,'p_location','Parser.py',371),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',375),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',399),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',403),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',404),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',412),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',416),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',426),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',427),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',431),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',439),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',440),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',444),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',448),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',468),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',469),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',476),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',484),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',485),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',493),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',494),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',501),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',502),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',503),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',514),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',515),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',516),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',520),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',521),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',525),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',529),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',530),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',533),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',534),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',535),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',536),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',537),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',538),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',539),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',540),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',544),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',545),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',549),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',550),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',554),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',559),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',571),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',572),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',573),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',574),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',578),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',579),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',580),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',581),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',582),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',586),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',590),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',598),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',602),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',603),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',607),
  ('character_literal -> HAT LPAREN ICONST RPAREN','character_literal',4,'p_character_literal','Parser.py',608),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',617),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',621),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','Parser.py',632),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','Parser.py',633),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',638),
  ('action -> assignment_action','action',1,'p_action','Parser.py',639),
  ('action -> call_action','action',1,'p_action','Parser.py',640),
  ('action -> exit_action','action',1,'p_action','Parser.py',641),
  ('action -> result_action','action',1,'p_action','Parser.py',642),
  ('action -> return_action','action',1,'p_action','Parser.py',643),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',647),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','Parser.py',648),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',652),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',656),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',657),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',661),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',662),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',663),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',667),
  ('if_action -> IF expression then_clause FI','if_action',4,'p_if_action','Parser.py',668),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',672),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',676),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',677),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',678),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',689),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',701),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',702),
  ('call_action -> procedure_call','call_action',1,'p_call_action','Parser.py',719),
  ('call_action -> builtin_call','call_action',1,'p_call_action','Parser.py',720),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','Parser.py',724),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','Parser.py',725),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','Parser.py',730),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','Parser.py',731),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','Parser.py',732),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','Parser.py',733),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','Parser.py',734),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','Parser.py',735),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','Parser.py',736),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','Parser.py',737),
  ('procedure_call -> ID LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','Parser.py',741),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','Parser.py',742),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','Parser.py',746),
  ('parameter_list -> expression COMMA parameter_list','parameter_list',3,'p_parameter_list','Parser.py',747),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','Parser.py',756),
  ('return_action -> RETURN result','return_action',2,'p_return_action','Parser.py',764),
  ('result -> expression','result',1,'p_result','Parser.py',768),
  ('result -> empty','result',1,'p_result','Parser.py',769),
  ('result_action -> RESULT expression','result_action',2,'p_result_action','Parser.py',772),
  ('do_action -> DO control_part SEMI action_statement_nullable OD','do_action',5,'p_do_action','Parser.py',780),
  ('do_action -> DO action_statement_nullable OD','do_action',3,'p_do_action','Parser.py',781),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','Parser.py',788),
  ('control_part -> for_control','control_part',1,'p_control_part','Parser.py',789),
  ('control_part -> while_control','control_part',1,'p_control_part','Parser.py',790),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','Parser.py',794),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','Parser.py',798),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','Parser.py',799),
  ('step_enumeration -> identifier ASSIGN expression step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','Parser.py',803),
  ('step_enumeration -> identifier ASSIGN expression step_value end_value','step_enumeration',5,'p_step_enumeration','Parser.py',804),
  ('step_enumeration -> identifier ASSIGN expression DOWN end_value','step_enumeration',5,'p_step_enumeration','Parser.py',805),
  ('step_enumeration -> identifier ASSIGN expression end_value','step_enumeration',4,'p_step_enumeration','Parser.py',806),
  ('step_value -> BY expression','step_value',2,'p_step_value','Parser.py',818),
  ('end_value -> TO expression','end_value',2,'p_end_value','Parser.py',822),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','Parser.py',826),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','Parser.py',827),
  ('while_control -> WHILE expression','while_control',2,'p_while_control','Parser.py',834),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',840),
]

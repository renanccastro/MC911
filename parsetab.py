
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7878DEF83B62A45A3C6ABB81E10778A'
    
_lr_action_items = {'TYPE':([0,2,3,4,5,6,7,11,13,15,17,18,20,22,23,24,25,28,31,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,92,94,116,119,121,126,149,151,152,168,171,173,174,177,180,181,182,208,215,216,217,219,230,231,237,238,246,249,252,256,263,266,],[1,-8,-82,-68,1,-6,-146,-69,-144,-70,-5,-9,-7,-71,-145,-67,-143,-23,1,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-10,-28,-15,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,-134,-162,-161,-159,-153,-81,-75,-86,-160,1,-135,-87,1,-30,-29,]),'FI':([3,4,7,11,13,15,22,23,24,25,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,121,126,149,151,152,168,171,173,174,177,180,181,182,184,208,213,215,216,217,219,220,230,231,235,236,237,238,239,249,252,253,],[-82,-68,-146,-69,-144,-70,-71,-145,-67,-143,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,219,-134,237,-162,-161,-159,-153,-156,-81,-75,252,-89,-86,-160,-158,-135,-87,-157,]),'THEN':([3,4,11,15,22,24,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,83,84,85,86,88,147,149,152,168,171,173,174,177,180,208,218,230,231,233,237,249,251,252,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,150,-101,-141,-138,-136,179,-98,-108,-78,-73,-95,-93,-85,-97,-134,150,-81,-75,179,-86,-135,179,-87,]),'REF':([27,28,35,40,91,99,154,200,224,254,],[-21,-23,99,99,99,99,-22,99,99,99,]),'DIVIDE':([3,4,10,11,15,16,19,22,24,28,52,57,58,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,177,180,194,208,230,231,249,],[-82,-68,-23,-69,-70,45,-66,-71,-67,-23,-72,-133,-139,-96,-140,-132,-129,-128,-125,-126,-102,45,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,45,-85,-97,-66,-134,-81,-75,-135,]),'LOC':([28,96,97,98,100,101,102,104,105,106,108,109,111,113,114,157,221,223,226,229,241,242,258,],[-23,-43,-39,-37,-47,-42,-40,-41,-48,-56,-44,-49,-45,-57,-38,-55,-50,-58,-51,248,-60,-65,262,]),'PLUS':([3,4,10,11,15,16,19,22,24,28,52,57,58,59,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-23,-69,-70,48,-66,-71,-67,-23,-72,-133,-139,48,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,48,-85,-97,-66,-134,-81,-75,-135,]),'ICONST':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,159,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[88,88,-103,-114,88,-104,-149,-105,-113,-115,88,-107,88,88,88,-106,88,-148,-112,88,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'ASSIGN':([3,4,10,11,15,16,19,22,24,27,28,29,35,42,43,45,47,48,49,50,51,52,53,54,77,96,97,98,100,101,102,104,105,106,108,109,111,112,113,114,120,154,157,168,171,221,223,226,230,231,241,242,],[-82,-68,-23,-69,-70,46,-66,-71,-67,-21,-23,91,103,-103,-114,-104,-105,-113,-151,-152,-150,-72,125,-115,-66,-43,-39,-37,-47,-42,-40,-41,-48,-56,-44,-49,-45,161,-57,-38,166,-22,-55,-78,-73,-50,-58,-51,-81,-75,-60,-65,]),'GREATER':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,134,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'SYN':([0,2,3,4,5,6,7,11,13,15,17,18,20,22,23,24,25,28,31,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,92,94,116,119,121,126,149,151,152,168,171,173,174,177,180,181,182,208,215,216,217,219,230,231,237,238,246,249,252,256,263,266,],[8,-8,-82,-68,8,-6,-146,-69,-144,-70,-5,-9,-7,-71,-145,-67,-143,-23,8,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-10,-28,-15,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,-134,-162,-161,-159,-153,-81,-75,-86,-160,8,-135,-87,8,-30,-29,]),'NULL':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[64,64,-103,-114,64,-104,-149,-105,-113,-115,64,-107,64,64,64,-106,64,-148,-112,64,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LBRACKET':([3,4,10,11,15,16,19,22,24,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,107,110,127,128,149,152,168,171,173,174,177,180,194,208,230,231,237,249,252,],[-82,-68,-23,-69,-70,44,56,-71,-67,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,145,-94,44,-130,-137,56,-99,-127,-131,-101,-141,-138,-136,159,160,171,-74,-98,44,-78,-73,-95,-93,-85,-97,56,-134,-81,-75,-86,-135,-87,]),'COLON':([3,4,10,11,15,19,22,24,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,123,124,128,129,149,152,168,171,173,174,176,177,180,187,188,194,208,230,231,237,249,252,],[-82,-68,37,-69,-70,55,-71,-67,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,169,-53,-76,172,-98,-108,-78,-73,-95,-93,209,-85,-97,222,-53,-66,-134,-81,-75,-86,-135,-87,]),'OR':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,133,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'ID':([0,1,2,3,4,5,6,7,8,11,12,13,15,17,18,20,21,22,23,24,25,27,28,31,35,40,41,42,43,44,45,46,47,48,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,99,103,115,116,118,119,121,125,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,154,156,160,161,162,164,166,168,169,170,171,172,173,174,177,179,180,181,182,183,185,200,208,209,210,212,215,216,217,219,222,224,225,227,230,231,234,237,238,246,249,252,254,256,263,266,],[10,28,-8,-82,-68,10,-6,-146,28,-69,28,-144,-70,-5,-9,-7,28,-71,-145,-67,-143,-21,-23,10,28,28,28,-103,-114,28,-104,-149,-105,-113,-72,-115,28,28,-133,-139,-92,-83,-107,-96,-84,-140,-132,-129,-128,-125,-126,-102,28,28,-94,-100,-130,-137,-66,-99,-127,28,-106,-131,-101,-141,-138,28,-136,28,28,28,-24,-10,28,28,28,-28,28,-15,-147,-148,-142,-112,28,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,28,28,28,-98,28,-154,-108,-22,28,28,28,28,28,28,-78,28,28,-73,28,-95,-93,-85,28,-97,28,-155,28,28,28,-134,28,28,28,28,-161,-159,-153,28,28,28,28,-81,-75,28,-86,-160,10,-135,-87,28,10,-30,-29,]),'EQUAL':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,136,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'CCONST':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[58,58,-103,-114,58,-104,-149,-105,-113,-115,58,-107,58,58,58,-106,58,-148,-112,58,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ELSIF':([3,4,7,11,13,15,22,23,24,25,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,121,126,149,151,152,168,171,173,174,177,178,180,181,182,208,211,214,215,216,217,219,230,231,237,238,239,249,250,252,257,],[-82,-68,-146,-69,-144,-70,-71,-145,-67,-143,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-147,-142,-98,183,-108,-78,-73,-95,-93,-85,210,-97,-162,-155,-134,234,-88,-162,-161,-159,-153,-81,-75,-86,-160,183,-135,-90,-87,-91,]),'ARRAY':([27,28,35,40,91,99,154,200,224,254,],[-21,-23,110,110,110,110,-22,110,110,110,]),'AND':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,141,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'RETURNS':([228,],[245,]),'NOT':([21,41,42,43,44,45,46,47,48,54,56,71,72,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[61,61,-103,-114,61,-104,-149,-105,-113,-115,61,61,61,61,-148,-112,61,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'DCL':([0,2,3,4,5,6,7,11,13,15,17,18,20,22,23,24,25,28,31,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,92,94,116,119,121,126,149,151,152,168,171,173,174,177,180,181,182,208,215,216,217,219,230,231,237,238,246,249,252,256,263,266,],[12,-8,-82,-68,12,-6,-146,-69,-144,-70,-5,-9,-7,-71,-145,-67,-143,-23,12,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-10,-28,-15,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,-134,-162,-161,-159,-153,-81,-75,-86,-160,12,-135,-87,12,-30,-29,]),'ARROW':([3,4,10,11,15,16,19,21,22,24,28,41,42,43,44,45,46,47,48,52,54,56,61,71,72,74,77,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,152,156,160,161,162,166,168,169,170,171,172,179,183,194,209,210,212,222,225,230,231,234,],[-82,-68,-23,-69,-70,52,-66,87,-71,-67,-23,87,-103,-114,87,-104,-149,-105,-113,-72,-115,87,-107,87,87,52,-66,87,-106,87,-148,-112,87,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,87,87,87,52,87,87,87,87,87,-78,87,87,-73,87,87,87,-66,87,87,87,87,87,-81,-75,87,]),'ELSE':([3,4,7,11,13,15,22,23,24,25,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,121,126,149,151,152,168,171,173,174,177,178,180,181,182,208,211,214,215,216,217,219,230,231,237,238,239,249,250,252,257,],[-82,-68,-146,-69,-144,-70,-71,-145,-67,-143,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-147,-142,-98,185,-108,-78,-73,-95,-93,-85,212,-97,-162,-155,-134,212,-88,-162,-161,-159,-153,-81,-75,-86,-160,185,-135,-90,-87,-91,]),'LPAREN':([21,28,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,95,96,100,101,103,104,105,108,109,111,114,117,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,192,194,209,210,212,221,222,225,226,234,245,],[71,-23,71,-103,-114,71,-104,-149,-105,-113,-115,71,-107,71,71,71,-106,156,-43,-47,-42,71,-46,-48,-44,-49,-45,162,164,-148,-112,71,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,71,71,71,71,71,71,71,71,71,71,71,71,71,162,-46,71,71,71,-50,71,71,-51,71,254,]),'RPAREN':([3,4,11,15,22,24,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,96,97,98,100,101,102,104,105,106,108,109,111,113,114,146,149,152,157,168,171,173,174,177,180,186,197,198,199,203,208,221,223,226,229,230,231,237,240,241,242,244,248,249,252,258,262,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-43,-39,-37,-47,-42,-40,-41,-48,-56,-44,-49,-45,-57,-38,177,-98,-108,-55,-78,-73,-95,-93,-85,-97,221,226,-31,228,-54,-134,-50,-58,-51,-34,-81,-75,-86,-52,-60,-65,-32,-33,-135,-87,261,265,]),'SEMI':([3,4,11,15,22,24,26,28,30,34,36,38,39,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,96,97,98,100,101,102,104,105,106,108,109,111,113,114,120,149,152,153,155,157,158,163,165,167,168,171,173,174,177,180,196,201,208,221,223,226,228,230,231,237,241,242,247,249,252,259,261,264,265,],[-82,-68,-69,-70,-71,-67,-25,-23,92,94,-11,-16,119,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-43,-39,-37,-47,-42,-40,-41,-48,-56,-44,-49,-45,-57,-38,-19,-98,-108,-26,-27,-55,-14,-12,-17,-18,-78,-73,-95,-93,-85,-97,-13,-20,-134,-50,-58,-51,246,-81,-75,-86,-60,-65,256,-135,-87,263,-36,266,-35,]),'IF':([0,2,3,4,5,6,7,11,13,15,17,18,20,21,22,23,24,25,28,31,41,44,46,52,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,84,85,86,88,92,94,103,116,119,121,125,126,145,149,150,151,152,156,160,161,162,166,168,169,170,171,172,173,174,177,179,180,181,182,183,185,208,209,210,212,215,216,217,219,222,225,230,231,234,237,238,246,249,252,256,263,266,],[21,-8,-82,-68,21,-6,-146,-69,-144,-70,-5,-9,-7,72,-71,-145,-67,-143,-23,21,72,72,-149,-72,21,72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,72,72,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-10,72,-28,-15,-147,-148,-142,72,-98,21,-154,-108,72,72,72,72,72,-78,72,72,-73,72,-95,-93,-85,72,-97,21,-155,72,21,-134,72,72,72,21,-161,-159,-153,72,72,-81,-75,72,-86,-160,21,-135,-87,21,-30,-29,]),'END':([2,3,4,6,7,11,13,15,17,18,20,22,23,24,25,28,31,32,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,92,93,94,116,119,121,126,149,151,152,168,171,173,174,177,180,181,182,208,215,216,217,219,230,231,237,238,246,249,252,255,256,260,263,266,],[-8,-82,-68,-6,-146,-69,-144,-70,-5,-9,-7,-71,-145,-67,-143,-23,-162,-4,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-3,-10,-28,-15,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,-134,-162,-161,-159,-153,-81,-75,-86,-160,-162,-135,-87,259,-162,264,-30,-29,]),'LESS':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,143,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'INT':([27,28,35,40,91,99,154,160,200,224,225,254,],[-21,-23,100,100,100,100,-22,100,100,100,100,100,]),'TIMES':([3,4,10,11,15,16,19,22,24,28,52,57,58,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,177,180,194,208,230,231,249,],[-82,-68,-23,-69,-70,42,-66,-71,-67,-23,-72,-133,-139,-96,-140,-132,-129,-128,-125,-126,-102,42,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,42,-85,-97,-66,-134,-81,-75,-135,]),'LTEQUAL':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,138,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'PROC':([37,],[117,]),'SCONST':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[85,85,-103,-114,85,-104,-149,-105,-113,-115,85,-107,85,85,85,-106,85,-148,-112,85,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'BOOL':([27,28,35,40,91,99,154,160,200,224,225,254,],[-21,-23,105,105,105,105,-22,105,105,105,105,105,]),'CONCAT':([3,4,10,11,15,16,19,22,24,28,52,57,58,59,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-23,-69,-70,54,-66,-71,-67,-23,-72,-133,-139,54,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,54,-85,-97,-66,-134,-81,-75,-135,]),'COMMA':([3,4,11,15,22,24,26,27,28,36,38,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,96,97,98,100,101,102,104,105,106,108,109,111,113,114,120,124,149,152,155,157,158,167,168,171,173,174,176,177,180,192,193,195,196,198,201,203,205,208,221,223,226,229,230,231,237,240,241,242,248,249,252,],[-82,-68,-69,-70,-71,-67,89,90,-23,115,118,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-43,-39,-37,-47,-42,-40,-41,-48,-56,-44,-49,-45,-57,-38,-19,170,-98,-108,-27,-55,-14,-18,-78,-73,-95,-93,170,-85,-97,-63,-64,225,-13,227,-20,-54,170,-134,-50,-58,-51,-34,-81,-75,-86,-52,-60,-65,-33,-135,-87,]),'TRUE':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[76,76,-103,-114,76,-104,-149,-105,-113,-115,76,-107,76,76,76,-106,76,-148,-112,76,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'MINUS':([3,4,10,11,15,16,19,21,22,24,28,41,42,43,44,45,46,47,48,52,54,56,57,58,59,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,84,85,86,88,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,152,156,160,161,162,166,168,169,170,171,172,173,174,177,179,180,183,194,208,209,210,212,222,225,230,231,234,249,],[-82,-68,-23,-69,-70,43,-66,81,-71,-67,-23,81,-103,-114,81,-104,-149,-105,-113,-72,-115,81,-133,-139,43,-96,-140,-132,-129,-128,-125,-126,-102,81,81,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,81,-148,-112,81,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,81,81,81,-98,-108,81,81,81,81,81,-78,81,81,-73,81,-95,43,-85,81,-97,81,-66,-134,81,81,81,81,81,-81,-75,81,-135,]),'$end':([2,3,4,5,6,7,9,11,13,14,15,17,18,20,22,23,24,25,28,31,32,33,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,92,93,94,116,119,121,126,149,151,152,168,171,173,174,177,180,181,182,208,215,216,217,219,230,231,237,238,249,252,263,266,],[-8,-82,-68,-162,-6,-146,-1,-69,-144,0,-70,-5,-9,-7,-71,-145,-67,-143,-23,-162,-4,-2,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-24,-3,-10,-28,-15,-147,-142,-98,-154,-108,-78,-73,-95,-93,-85,-97,-162,-155,-134,-162,-161,-159,-153,-81,-75,-86,-160,-135,-87,-30,-29,]),'GTEQUAL':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,137,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'CHAR':([27,28,35,40,91,99,154,160,200,224,225,254,],[-21,-23,109,109,109,109,-22,109,109,109,109,109,]),'IN':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,139,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'MODULO':([3,4,10,11,15,16,19,22,24,28,52,57,58,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,177,180,194,208,230,231,249,],[-82,-68,-23,-69,-70,47,-66,-71,-67,-23,-72,-133,-139,-96,-140,-132,-129,-128,-125,-126,-102,47,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,47,-85,-97,-66,-134,-81,-75,-135,]),'NOTEQ':([3,4,11,15,22,24,28,52,57,58,59,60,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,149,152,168,171,173,174,177,180,194,208,230,231,249,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,142,-96,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-98,-108,-78,-73,-95,-93,-85,-97,-66,-134,-81,-75,-135,]),'FALSE':([21,41,42,43,44,45,46,47,48,54,56,61,71,72,80,81,103,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[86,86,-103,-114,86,-104,-149,-105,-113,-115,86,-107,86,86,86,-106,86,-148,-112,86,-111,-117,-120,-110,-118,-121,-123,-124,-109,-116,-119,-122,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'CHARS':([27,28,35,40,91,99,154,200,224,254,],[-21,-23,107,107,107,107,-22,107,107,107,]),'RBRACKET':([3,4,11,15,22,24,28,52,57,58,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,84,85,86,88,96,100,101,105,108,109,111,122,124,149,152,168,171,173,174,175,176,177,180,189,190,191,192,193,195,202,203,204,205,206,207,208,221,226,230,231,232,237,240,243,249,252,],[-82,-68,-69,-70,-71,-67,-23,-72,-133,-139,-92,-83,-96,-84,-140,-132,-129,-128,-125,-126,-102,-94,-100,-130,-137,-66,-99,-127,-131,-101,-141,-138,-136,-43,-47,-42,-48,-44,-49,-45,168,-79,-98,-108,-78,-73,-95,-93,208,-79,-85,-97,223,-59,224,-63,-64,-61,230,-54,-80,-79,231,-77,-134,-50,-51,-81,-75,249,-86,-52,-62,-135,-87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formal_parameter':([164,227,],[198,244,]),'lower_bound':([44,156,160,162,225,],[123,187,187,187,187,]),'start_element':([56,],[127,]),'mode_name':([35,40,91,99,200,224,254,],[98,98,98,98,98,98,98,]),'identifier_list':([1,8,12,89,90,115,118,164,227,],[29,35,40,29,154,35,40,200,200,]),'location':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'relational_operator':([60,],[140,]),'operand0':([21,41,44,56,71,72,103,145,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'composite_mode':([35,40,91,99,200,224,254,],[102,102,102,102,102,102,102,]),'string_element':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'synonym_statement':([0,5,31,246,256,],[6,6,6,6,6,]),'if_action':([0,5,31,55,150,181,185,215,246,256,],[7,7,7,7,7,7,7,7,7,7,]),'identifier':([0,1,5,8,12,21,31,35,40,41,44,55,56,71,72,80,87,89,90,91,99,103,115,118,131,144,145,148,150,156,160,161,162,164,166,169,170,172,179,181,183,185,200,209,210,212,215,222,224,225,227,234,246,254,256,],[19,27,19,27,27,77,19,104,104,77,77,77,77,77,77,77,77,27,27,104,104,77,27,27,77,77,77,77,19,77,194,77,77,27,77,77,77,77,77,19,77,19,104,77,77,77,19,77,104,194,27,77,19,104,19,]),'elsif_expression':([178,],[211,]),'string_slice':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'synonym_definition':([8,115,],[36,36,]),'empty_literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'expression_list':([44,145,170,],[122,175,204,]),'then_clause':([83,218,],[151,239,]),'character_string_literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'string_mode':([35,40,91,99,200,224,254,],[106,106,106,106,106,106,106,]),'boolean_mode':([35,40,91,99,160,200,224,225,254,],[96,96,96,96,96,96,96,96,96,]),'statement_nullable':([5,31,246,256,],[33,93,255,260,]),'operand2':([21,41,44,56,71,72,103,131,144,145,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[73,73,73,73,73,73,73,173,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'result_spec':([228,],[247,]),'boolean_literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'dereferenced_reference':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'operand1':([21,41,44,56,71,72,103,144,145,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[59,59,59,59,59,59,59,174,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'initialization':([120,],[167,]),'procedure_statement':([0,5,31,246,256,],[18,18,18,18,18,]),'string_concatenation_operator':([16,59,174,],[50,130,130,]),'operator2':([59,174,],[131,131,]),'value_array_element':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'discrete_mode_name':([35,40,91,99,160,200,224,225,254,],[95,95,95,95,95,95,95,95,95,]),'newmode_statement':([0,5,31,246,256,],[20,20,20,20,20,]),'character_literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'declaration':([12,118,],[38,38,]),'index_mode':([160,225,],[195,195,]),'array_slice':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'mode':([35,40,91,99,200,224,254,],[112,120,155,157,229,242,258,]),'integer_mode':([35,40,91,99,160,200,224,225,254,],[101,101,101,101,101,101,101,101,101,]),'operand3':([21,41,44,56,71,72,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[62,62,62,62,62,62,62,62,62,62,180,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'character_mode':([35,40,91,99,160,200,224,225,254,],[108,108,108,108,108,108,108,108,108,]),'action_statement_nullable':([181,215,],[217,238,]),'primitive_value':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'assigning_operator':([16,],[41,]),'index_mode_list':([160,225,],[191,243,]),'action_statement':([0,5,31,150,181,185,215,246,256,],[2,2,2,181,215,181,215,2,2,]),'reference_mode':([35,40,91,99,200,224,254,],[97,97,97,97,97,97,97,]),'discrete_mode':([35,40,91,99,160,200,224,225,254,],[114,114,114,114,192,114,114,192,114,]),'literal_range':([156,160,162,225,],[186,193,197,193,]),'synonym_list':([8,115,],[34,163,]),'upper_bound':([169,222,],[202,240,]),'arithmetic_multiplicative_operator':([16,73,173,],[49,148,148,]),'statement':([0,5,31,246,256,],[5,31,31,31,31,]),'statement_list':([0,],[9,]),'string_length':([159,],[189,]),'conditional_expression':([21,41,44,56,71,72,103,145,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'then_expression':([147,233,251,],[178,250,257,]),'empty':([5,31,181,215,246,256,],[32,32,216,216,32,32,]),'discrete_range_mode':([35,40,91,99,160,200,224,225,254,],[111,111,111,111,111,111,111,111,111,]),'element_mode':([224,],[241,]),'integer_literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,159,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[66,66,66,66,66,66,66,66,66,66,66,66,66,190,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'procedure_definition':([37,],[116,]),'arithmetic_additive_operator':([16,59,174,],[51,132,132,]),'parenthesized_expression':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'bracketed_action':([0,5,31,55,150,181,185,215,246,256,],[13,13,13,13,13,13,13,13,13,13,]),'declaration_list':([12,118,],[39,165,]),'operator1':([60,],[144,]),'program':([0,],[14,]),'array_element':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'right_element':([172,],[206,]),'membership_operator':([60,],[135,]),'action_statement_list':([150,185,],[182,220,]),'newmode_list':([1,89,],[30,153,]),'array_location':([0,5,21,31,41,44,55,56,71,72,80,87,103,131,144,145,148,150,156,160,161,162,166,169,170,172,179,181,183,185,209,210,212,215,222,225,234,246,256,],[16,16,74,16,74,74,16,74,74,74,74,152,74,74,74,74,74,16,74,74,74,74,74,74,74,74,74,16,74,16,74,74,74,16,74,74,74,16,16,]),'action':([0,5,31,55,150,181,185,215,246,256,],[25,25,25,126,25,25,25,25,25,25,]),'else_clause':([151,239,],[184,253,]),'literal':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'assignment_action':([0,5,31,55,150,181,185,215,246,256,],[23,23,23,23,23,23,23,23,23,23,]),'else_expression':([178,211,],[213,235,]),'closed_dyadic_operator':([16,],[53,]),'operand4':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[78,78,78,78,78,78,149,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'value_array_slice':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'monadic_operator':([21,41,44,56,71,72,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'mode_definition':([1,89,],[26,26,]),'expression':([21,41,44,56,71,72,103,145,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[83,121,124,128,146,147,158,176,188,188,196,188,201,203,205,207,214,218,232,233,236,203,188,251,]),'formal_parameter_list':([164,],[199,]),'referenced_location':([21,41,44,56,71,72,80,103,131,144,145,148,156,160,161,162,166,169,170,172,179,183,209,210,212,222,225,234,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'left_element':([56,],[129,]),'declaration_statement':([0,5,31,246,256,],[17,17,17,17,17,]),'array_mode':([35,40,91,99,200,224,254,],[113,113,113,113,113,113,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Parser.py',52),
  ('statement_list -> statement statement_nullable','statement_list',2,'p_statement_list','Parser.py',56),
  ('statement_nullable -> statement statement_nullable','statement_nullable',2,'p_statement_nullable','Parser.py',67),
  ('statement_nullable -> empty','statement_nullable',1,'p_statement_nullable','Parser.py',68),
  ('statement -> declaration_statement','statement',1,'p_statement','Parser.py',79),
  ('statement -> synonym_statement','statement',1,'p_statement','Parser.py',80),
  ('statement -> newmode_statement','statement',1,'p_statement','Parser.py',81),
  ('statement -> action_statement','statement',1,'p_statement','Parser.py',82),
  ('statement -> procedure_statement','statement',1,'p_statement','Parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','Parser.py',92),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','Parser.py',96),
  ('synonym_list -> synonym_definition COMMA synonym_list','synonym_list',3,'p_synonym_list','Parser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','Parser.py',106),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','Parser.py',107),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','Parser.py',121),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',125),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','Parser.py',126),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','Parser.py',134),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','Parser.py',135),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','Parser.py',139),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','Parser.py',143),
  ('identifier_list -> identifier COMMA identifier_list','identifier_list',3,'p_identifier_list','Parser.py',144),
  ('identifier -> ID','identifier',1,'p_identifier','Parser.py',152),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','Parser.py',163),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','Parser.py',167),
  ('newmode_list -> mode_definition COMMA newmode_list','newmode_list',3,'p_newmode_list','Parser.py',168),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','Parser.py',176),
  ('procedure_statement -> ID COLON procedure_definition','procedure_statement',3,'p_procedure_statement','Parser.py',187),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_nullable END SEMI','procedure_definition',9,'p_procedure_definition','Parser.py',191),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_nullable END SEMI','procedure_definition',8,'p_procedure_definition','Parser.py',192),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','Parser.py',196),
  ('formal_parameter_list -> formal_parameter COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','Parser.py',197),
  ('formal_parameter -> identifier_list mode LOC','formal_parameter',3,'p_formal_parameter','Parser.py',205),
  ('formal_parameter -> identifier_list mode','formal_parameter',2,'p_formal_parameter','Parser.py',206),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','Parser.py',212),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','Parser.py',213),
  ('mode -> mode_name','mode',1,'p_mode','Parser.py',218),
  ('mode -> discrete_mode','mode',1,'p_mode','Parser.py',219),
  ('mode -> reference_mode','mode',1,'p_mode','Parser.py',220),
  ('mode -> composite_mode','mode',1,'p_mode','Parser.py',221),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','Parser.py',225),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','Parser.py',233),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','Parser.py',234),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','Parser.py',235),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','Parser.py',236),
  ('discrete_mode_name -> identifier','discrete_mode_name',1,'p_discrete_mode_name','Parser.py',240),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','Parser.py',244),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','Parser.py',248),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','Parser.py',252),
  ('discrete_range_mode -> discrete_mode_name LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',261),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','Parser.py',262),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','Parser.py',266),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','Parser.py',270),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','Parser.py',274),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','Parser.py',281),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','Parser.py',288),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','Parser.py',289),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','Parser.py',293),
  ('string_length -> integer_literal','string_length',1,'p_string_length','Parser.py',297),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','Parser.py',301),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','Parser.py',305),
  ('index_mode_list -> index_mode COMMA index_mode_list','index_mode_list',3,'p_index_mode_list','Parser.py',306),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','Parser.py',312),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','Parser.py',313),
  ('element_mode -> mode','element_mode',1,'p_element_mode','Parser.py',317),
  ('location -> identifier','location',1,'p_location','Parser.py',328),
  ('location -> dereferenced_reference','location',1,'p_location','Parser.py',329),
  ('location -> string_element','location',1,'p_location','Parser.py',330),
  ('location -> string_slice','location',1,'p_location','Parser.py',331),
  ('location -> array_element','location',1,'p_location','Parser.py',332),
  ('location -> array_slice','location',1,'p_location','Parser.py',333),
  ('dereferenced_reference -> array_location ARROW','dereferenced_reference',2,'p_dereferenced_reference','Parser.py',337),
  ('string_element -> identifier LBRACKET start_element LBRACKET','string_element',4,'p_string_element','Parser.py',341),
  ('start_element -> expression','start_element',1,'p_start_element','Parser.py',345),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','Parser.py',349),
  ('left_element -> expression','left_element',1,'p_left_element','Parser.py',353),
  ('right_element -> expression','right_element',1,'p_right_element','Parser.py',357),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','Parser.py',361),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',365),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','Parser.py',366),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','Parser.py',373),
  ('array_location -> location','array_location',1,'p_array_location','Parser.py',377),
  ('expression -> operand0','expression',1,'p_expression','Parser.py',386),
  ('expression -> conditional_expression','expression',1,'p_expression','Parser.py',387),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','Parser.py',391),
  ('conditional_expression -> IF expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','Parser.py',399),
  ('conditional_expression -> IF expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','Parser.py',400),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','Parser.py',404),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','Parser.py',408),
  ('elsif_expression -> ELSIF expression then_expression','elsif_expression',3,'p_elsif_expression','Parser.py',412),
  ('elsif_expression -> elsif_expression ELSIF expression then_expression','elsif_expression',4,'p_elsif_expression','Parser.py',413),
  ('operand0 -> operand1','operand0',1,'p_operand0','Parser.py',428),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','Parser.py',429),
  ('operand1 -> operand2','operand1',1,'p_operand1','Parser.py',436),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','Parser.py',437),
  ('operand2 -> operand3','operand2',1,'p_operand2','Parser.py',444),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','Parser.py',445),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','Parser.py',453),
  ('operand3 -> operand4','operand3',1,'p_operand3','Parser.py',454),
  ('operand4 -> array_location','operand4',1,'p_operand4','Parser.py',461),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','Parser.py',462),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','Parser.py',463),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',474),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',475),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','Parser.py',476),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','Parser.py',480),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','Parser.py',481),
  ('referenced_location -> ARROW array_location','referenced_location',2,'p_referenced_location','Parser.py',485),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','Parser.py',489),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','Parser.py',490),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','Parser.py',494),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','Parser.py',495),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',499),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','Parser.py',500),
  ('string_concatenation_operator -> CONCAT','string_concatenation_operator',1,'p_string_concatenation_operator','Parser.py',504),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','Parser.py',508),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','Parser.py',509),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','Parser.py',510),
  ('relational_operator -> NOTEQ','relational_operator',1,'p_relational_operator','Parser.py',511),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','Parser.py',512),
  ('relational_operator -> GTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',513),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','Parser.py',514),
  ('relational_operator -> LTEQUAL','relational_operator',1,'p_relational_operator','Parser.py',515),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','Parser.py',519),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','Parser.py',531),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','Parser.py',532),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','Parser.py',533),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','Parser.py',534),
  ('literal -> integer_literal','literal',1,'p_literal','Parser.py',538),
  ('literal -> boolean_literal','literal',1,'p_literal','Parser.py',539),
  ('literal -> character_literal','literal',1,'p_literal','Parser.py',540),
  ('literal -> empty_literal','literal',1,'p_literal','Parser.py',541),
  ('literal -> character_string_literal','literal',1,'p_literal','Parser.py',542),
  ('value_array_element -> primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','Parser.py',546),
  ('value_array_slice -> primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','Parser.py',550),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','Parser.py',558),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','Parser.py',562),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','Parser.py',563),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','Parser.py',567),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','Parser.py',571),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','Parser.py',575),
  ('action_statement -> identifier COLON action','action_statement',3,'p_action_statement','Parser.py',586),
  ('action_statement -> action','action_statement',1,'p_action_statement','Parser.py',587),
  ('action -> bracketed_action','action',1,'p_action','Parser.py',593),
  ('action -> assignment_action','action',1,'p_action','Parser.py',594),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','Parser.py',599),
  ('assignment_action -> array_location assigning_operator expression','assignment_action',3,'p_assignment_action','Parser.py',603),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','Parser.py',607),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','Parser.py',608),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',612),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',613),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','Parser.py',614),
  ('if_action -> IF expression then_clause else_clause FI','if_action',5,'p_if_action','Parser.py',618),
  ('if_action -> IF expression then_clause','if_action',3,'p_if_action','Parser.py',619),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','Parser.py',623),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','Parser.py',627),
  ('else_clause -> ELSIF expression then_clause else_clause','else_clause',4,'p_else_clause','Parser.py',628),
  ('else_clause -> ELSIF expression then_clause','else_clause',3,'p_else_clause','Parser.py',629),
  ('action_statement_list -> action_statement action_statement_nullable','action_statement_list',2,'p_action_statement_list','Parser.py',640),
  ('action_statement_nullable -> action_statement action_statement_nullable','action_statement_nullable',2,'p_action_statement_nullable','Parser.py',650),
  ('action_statement_nullable -> empty','action_statement_nullable',1,'p_action_statement_nullable','Parser.py',651),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',664),
]
